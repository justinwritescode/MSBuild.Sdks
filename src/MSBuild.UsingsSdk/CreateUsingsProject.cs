using System.Xml;
namespace JustinWritesCode.MSBuild.UsingsSdk;

using System.Xml.Linq;

class CreateUsingsProject : MSBTask
{
    [Required]
    public string InputFile { get; set; } = string.Empty;
    [Required]
    public string OutputFile { get; set; } = string.Empty;

    public override bool Execute()
    {
        var project = XDocument.Load(InputFile);

        var usings = project.Root.Elements("Using").OrderBy(x => x.Attribute("Include")).ToArray();
        var projectReferences = project.Root.Elements("ProjectReference").OrderBy(x => x.Attribute("Include")).ToArray();
        var packageReferences = project.Root.Elements("PackageReference").OrderBy(x => x.Attribute("Include")).ToArray();
        var properties = project.Root.Elements("PropertyGroup")
            .Elements()
            .Concat(new[] {
                new XElement("TargetFramework", "netstandard2.0", new XAttribute("Condition", "'$(TargetFramework)' == ''")),
                new XElement("LangVersion", "latest", new XAttribute("Condition", "'$(LangVersion)' == ''"))
            }
        );

        var usingsFile = new XDocument();
        usingsFile.Add(new XElement("Project",
            new XComment("<auto-generated />"),
            new XComment("This code was generated by a tool.  Do not modify it."),
            new XComment("⬇️ Properties ⬇️"),
            new XElement("PropertyGroup",
                properties),
            new XElement("ItemGroup",
                new XAttribute("Label", "Usings"),
                new XComment("⬇️ Usings ⬇️"),
                usings),
            new XElement("ItemGroup",
                new XAttribute("Label", "Package References"),
                new XComment("⬇️ Package References ⬇️"),
                packageReferences,
            new XElement("ItemGroup",
                new XAttribute("Label", "Project References"),
                new XComment("⬇️ Project References ⬇️"),
                projectReferences))));

        usingsFile.WriteTo(new System.Xml.XmlTextWriter(File.CreateText(OutputFile)));

        return true;
    }
}
