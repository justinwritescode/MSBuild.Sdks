<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="_SetPropertiesFromCapabilities;_SetBuildOutputFrameworkSpecific;SetGitExe;CustomAfterCentralPackageVersions;CheckPackageReferences;ShowConfigurationSpecificPackagesVersionFile" DefaultTargets="Build">
  <PropertyGroup>
    <MSBuildFileVersion>17.3.2.46306</MSBuildFileVersion>
    <MSBuildSemanticVersion>17.3.2+561848881</MSBuildSemanticVersion>
    <OS>Unix</OS>
    <MSBuildFrameworkToolsRoot>/usr/local/share/dotnet/shared/Microsoft.NETCore.App</MSBuildFrameworkToolsRoot>
    <RoslynTargetsPath>/usr/local/share/dotnet/sdk/6.0.402/Roslyn</RoslynTargetsPath>
    <VisualStudioVersion>17.0</VisualStudioVersion>
    <UsingMicrosoftNETSdk>true</UsingMicrosoftNETSdk>
    <UsingNETSdkDefaults>true</UsingNETSdkDefaults>
    <ImportByWildcardBeforeMicrosoftCommonProps>true</ImportByWildcardBeforeMicrosoftCommonProps>
    <ImportByWildcardAfterMicrosoftCommonProps>true</ImportByWildcardAfterMicrosoftCommonProps>
    <ImportUserLocationsByWildcardBeforeMicrosoftCommonProps>true</ImportUserLocationsByWildcardBeforeMicrosoftCommonProps>
    <ImportUserLocationsByWildcardAfterMicrosoftCommonProps>true</ImportUserLocationsByWildcardAfterMicrosoftCommonProps>
    <ImportDirectoryBuildProps>true</ImportDirectoryBuildProps>
    <_DirectoryBuildPropsFile>Directory.Build.props</_DirectoryBuildPropsFile>
    <_DirectoryBuildPropsBasePath>/Users/david/GitHub/justinwritescode</_DirectoryBuildPropsBasePath>
    <DirectoryBuildPropsPath>/Users/david/GitHub/justinwritescode/Directory.Build.props</DirectoryBuildPropsPath>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>/Users/david/GitHub/justinwritescode/Directory.Build/../assets/JustinWritesCode.snk</AssemblyOriginatorKeyFile>
    <GetPackageMetadataDependsOn>
      
      
      
      
      
      ;
      SetPackageAuthors;
      SetPackageOwners
    ;
      SetLastMinutePackageMetadata;
    ;
      SetPackageProjectUrl
    ;
      SetPackageTags
    ;
      _InitializeRepositoryProperties;
      GetPackageVersion;
    ;
      SetPackageCopyright
    </GetPackageMetadataDependsOn>
    <Configurations>Testing;Local;Debug;Staging;Release</Configurations>
    <IntermediateOutputPath>obj/net6.0/</IntermediateOutputPath>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>obj/CsprojPackager.xml</DocumentationFile>
    <BaseIntermediateOutputPath>obj/</BaseIntermediateOutputPath>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/GeneratedFiles</CompilerGeneratedFilesOutputPath>
    <CopyDocumentationFilesFromPackages>true</CopyDocumentationFilesFromPackages>
    <CopyDebugSymbolFilesFromPackages>true</CopyDebugSymbolFilesFromPackages>
    <EnableCentralPackageVersions>true</EnableCentralPackageVersions>
    <EnableGlobalPackageReferences>true</EnableGlobalPackageReferences>
    <EnablePackageVersionOverride>true</EnablePackageVersionOverride>
    <CentralPackagesFile>/Users/david/GitHub/justinwritescode/Packages.pkgs</CentralPackagesFile>
    <MinVerVerbosity>normal</MinVerVerbosity>
    <MinVerAutoIncrement>patch</MinVerAutoIncrement>
    <MinVerMinimumMajorMinor>0.0</MinVerMinimumMajorMinor>
    <DisableMostAnnoyingWarnings>true</DisableMostAnnoyingWarnings>
    <NoWarn>;@(NoWarn->'%(Identity)');;NU5105</NoWarn>
    <NoWarn_props>;@(NoWarn->'%(Identity)');</NoWarn_props>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <EmbedAllSources>true</EmbedAllSources>
    <RepositoryType>git</RepositoryType>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <IsPackable>true</IsPackable>
    <IsNuGetized>true</IsNuGetized>
    <IncludeBuiltProjectOutputGroup>true</IncludeBuiltProjectOutputGroup>
    <IncludeComFilesOutputGroup>true</IncludeComFilesOutputGroup>
    <IncludeContentFilesProjectOutputGroup>true</IncludeContentFilesProjectOutputGroup>
    <IncludeCopyLocalFilesOutputGroup>true</IncludeCopyLocalFilesOutputGroup>
    <IncludeCopyWinmdArtifactsOutputGroup>true</IncludeCopyWinmdArtifactsOutputGroup>
    <IncludeCustomOutputGroupForPackaging>true</IncludeCustomOutputGroupForPackaging>
    <IncludeDebugSymbolsProjectOutputGroup>true</IncludeDebugSymbolsProjectOutputGroup>
    <IncludeDocumentationProjectOutputGroup>true</IncludeDocumentationProjectOutputGroup>
    <IncludeGetResolvedSDKReferences>true</IncludeGetResolvedSDKReferences>
    <IncludePriFilesOutputGroup>true</IncludePriFilesOutputGroup>
    <IncludeSatelliteDllsProjectOutputGroup>true</IncludeSatelliteDllsProjectOutputGroup>
    <IncludeSDKRedistOutputGroup>true</IncludeSDKRedistOutputGroup>
    <IncludeSGenFilesOutputGroup>true</IncludeSGenFilesOutputGroup>
    <IncludeSourceFilesProjectOutputGroup>true</IncludeSourceFilesProjectOutputGroup>
    <IncludeSymbolsProjectOutputGroup>true</IncludeSymbolsProjectOutputGroup>
    <IncludeTransitiveProjectReferences>true</IncludeTransitiveProjectReferences>
    <NuGetConfigFile>/Users/david/GitHub/justinwritescode/Directory.Build/../NuGet.config</NuGetConfigFile>
    <DeleteGitHubPackageVersionScriptName>/Users/david/GitHub/justinwritescode/.scripts/delete-github-package-version</DeleteGitHubPackageVersionScriptName>
    <TargetFramework>net6.0</TargetFramework>
    <Title />
    <Description>Package Description</Description>
    <PackageTags />
    <Summary />
    <RootNamespace>CsprojPackager</RootNamespace>
    <PackageId>CsprojPackager</PackageId>
    <AssemblyName>CsprojPackager</AssemblyName>
    <AssemblyTitle>CsprojPackager</AssemblyTitle>
    <DefaultLanguage>en</DefaultLanguage>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Company>JustinWritesCode</Company>
    <Product>JustinWritesCode</Product>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <LangVersion>preview</LangVersion>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <UserSecretsId>f46585c5-564a-6584-1234-eba29ed0cfc7</UserSecretsId>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <DebugType>portable</DebugType>
    <IsPackagingFile>true</IsPackagingFile>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UseJustinWritesCodeNamespace>true</UseJustinWritesCodeNamespace>
    <_GitRoot>/Users/david/GitHub/justinwritescode</_GitRoot>
    <PackageOutputPath>/Users/david/GitHub/justinwritescode/artifacts</PackageOutputPath>
    <IsTestProject>@(PackageReference-&gt;AnyHaveMetadataValue("Identity", "Microsoft.NET.Test.Sdk"))</IsTestProject>
    <IsSourceProject>true</IsSourceProject>
    <SlnGenSolutionFolder>src</SlnGenSolutionFolder>
    <PackageReferences>@(PackageReference)</PackageReferences>
    <Configuration>Local</Configuration>
    <PackageVersionOverride>0.0.1-Local</PackageVersionOverride>
    <MinVerVersionOverride>0.0.1-Local</MinVerVersionOverride>
    <_InitialBaseIntermediateOutputPath>obj/</_InitialBaseIntermediateOutputPath>
    <MSBuildProjectExtensionsPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/</MSBuildProjectExtensionsPath>
    <ImportProjectExtensionProps>true</ImportProjectExtensionProps>
    <_InitialMSBuildProjectExtensionsPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/</_InitialMSBuildProjectExtensionsPath>
    <RestoreSuccess>True</RestoreSuccess>
    <RestoreTool>NuGet</RestoreTool>
    <ProjectAssetsFile>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot>/Users/david/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders>/Users/david/.nuget/packages/</NuGetPackageFolders>
    <NuGetProjectStyle>PackageReference</NuGetProjectStyle>
    <NuGetToolVersion>6.3.1</NuGetToolVersion>
    <ImportNuGetBuildTasksPackTargetsFromSdk>true</ImportNuGetBuildTasksPackTargetsFromSdk>
    <NuGetBuildTasksPackTargets>/Users/david/.nuget/packages/nugetizer/0.9.0/build/NuGetizer.PackageMetadata.targets</NuGetBuildTasksPackTargets>
    <CI>false</CI>
    <NuGetizerPropsImported>true</NuGetizerPropsImported>
    <PackVersion>0.9.0</PackVersion>
    <_MicrosoftSourceLinkCommonAssemblyFile>/Users/david/.nuget/packages/microsoft.sourcelink.common/1.1.1/build/../tools/core/Microsoft.SourceLink.Common.dll</_MicrosoftSourceLinkCommonAssemblyFile>
    <EnableSourceControlManagerQueries>true</EnableSourceControlManagerQueries>
    <EnableSourceLink>true</EnableSourceLink>
    <MicrosoftBuildTasksGitAssemblyFile>/Users/david/.nuget/packages/microsoft.build.tasks.git/1.1.1/build/../tools/core/Microsoft.Build.Tasks.Git.dll</MicrosoftBuildTasksGitAssemblyFile>
    <AssemblyFile>../lib/JustInTimeVersioning.dll</AssemblyFile>
    <PkgThisAssembly>/Users/david/.nuget/packages/thisassembly/1.0.9</PkgThisAssembly>
    <PkgStef_Validation>/Users/david/.nuget/packages/stef.validation/0.1.0</PkgStef_Validation>
    <PkgNuGetizer>/Users/david/.nuget/packages/nugetizer/0.9.0</PkgNuGetizer>
    <PkgMSBuild_Usings>/Users/david/.nuget/packages/msbuild.usings/0.0.1-local</PkgMSBuild_Usings>
    <PkgMinVer>/Users/david/.nuget/packages/minver/4.1.0</PkgMinVer>
    <PkgMicrosoft_VisualStudio_SlnGen>/Users/david/.nuget/packages/microsoft.visualstudio.slngen/8.5.17</PkgMicrosoft_VisualStudio_SlnGen>
    <PkgMicrosoft_SourceLink_Common>/Users/david/.nuget/packages/microsoft.sourcelink.common/1.1.1</PkgMicrosoft_SourceLink_Common>
    <PkgMicrosoft_Build_Tasks_Git>/Users/david/.nuget/packages/microsoft.build.tasks.git/1.1.1</PkgMicrosoft_Build_Tasks_Git>
    <PkgMicrosoft_SourceLink_GitHub>/Users/david/.nuget/packages/microsoft.sourcelink.github/1.1.1</PkgMicrosoft_SourceLink_GitHub>
    <PkgJustInTimeVersioning>/Users/david/.nuget/packages/justintimeversioning/0.0.1-local</PkgJustInTimeVersioning>
    <PkgGitInfo>/Users/david/.nuget/packages/gitinfo/2.2.0</PkgGitInfo>
    <PkgFluentBuilder>/Users/david/.nuget/packages/fluentbuilder/0.7.1</PkgFluentBuilder>
    <CustomBeforeMicrosoftCommonProps>/usr/local/share/dotnet/sdk/6.0.402/vCurrent/Custom.Before.Microsoft.Common.props</CustomBeforeMicrosoftCommonProps>
    <CustomAfterMicrosoftCommonProps>/usr/local/share/dotnet/sdk/6.0.402/vCurrent/Custom.After.Microsoft.Common.props</CustomAfterMicrosoftCommonProps>
    <MicrosoftCommonPropsHasBeenImported>true</MicrosoftCommonPropsHasBeenImported>
    <WMSJSProject>WJProject</WMSJSProject>
    <WMSJSProjectDirectory>JavaScript</WMSJSProjectDirectory>
    <MSBuildUseVisualStudioDirectoryLayout>False</MSBuildUseVisualStudioDirectoryLayout>
    <NuGetPropsFile>/usr/local/share/dotnet/sdk/6.0.402/NuGet.props</NuGetPropsFile>
    <ImportDirectoryPackagesProps>true</ImportDirectoryPackagesProps>
    <_DirectoryPackagesPropsFile>Directory.Packages.props</_DirectoryPackagesPropsFile>
    <_DirectoryPackagesPropsBasePath />
    <DisableLogTaskParameter_ConvertToAbsolutePath_Path>true</DisableLogTaskParameter_ConvertToAbsolutePath_Path>
    <DisableLogTaskParameter_FindUnderPath_OutOfPath>true</DisableLogTaskParameter_FindUnderPath_OutOfPath>
    <DisableLogTaskParameter_RemoveDuplicates_Inputs>true</DisableLogTaskParameter_RemoveDuplicates_Inputs>
    <DisableLogTaskParameterItemMetadata_ConvertToAbsolutePath_AbsolutePaths>true</DisableLogTaskParameterItemMetadata_ConvertToAbsolutePath_AbsolutePaths>
    <DisableLogTaskParameterItemMetadata_Copy_CopiedFiles>true</DisableLogTaskParameterItemMetadata_Copy_CopiedFiles>
    <DisableLogTaskParameterItemMetadata_Copy_DestinationFiles>true</DisableLogTaskParameterItemMetadata_Copy_DestinationFiles>
    <DisableLogTaskParameterItemMetadata_Copy_SourceFiles>true</DisableLogTaskParameterItemMetadata_Copy_SourceFiles>
    <DisableLogTaskParameterItemMetadata_FindUnderPath_Files>true</DisableLogTaskParameterItemMetadata_FindUnderPath_Files>
    <DisableLogTaskParameterItemMetadata_FindUnderPath_InPath>true</DisableLogTaskParameterItemMetadata_FindUnderPath_InPath>
    <DisableLogTaskParameterItemMetadata_GenerateResource_FilesWritten>true</DisableLogTaskParameterItemMetadata_GenerateResource_FilesWritten>
    <DisableLogTaskParameterItemMetadata_Hash_ItemsToHash>true</DisableLogTaskParameterItemMetadata_Hash_ItemsToHash>
    <DisableLogTaskParameterItemMetadata_RemoveDuplicates_Filtered>true</DisableLogTaskParameterItemMetadata_RemoveDuplicates_Filtered>
    <DisableLogTaskParameterItemMetadata_WriteLinesToFile_Lines>true</DisableLogTaskParameterItemMetadata_WriteLinesToFile_Lines>
    <DisableHandlePackageFileConflicts>true</DisableHandlePackageFileConflicts>
    <Platforms>AnyCPU</Platforms>
    <Platform>AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <FileAlignment>512</FileAlignment>
    <ErrorReport>prompt</ErrorReport>
    <Deterministic>true</Deterministic>
    <_PlatformWithoutConfigurationInference>AnyCPU</_PlatformWithoutConfigurationInference>
    <ResolveNuGetPackages>false</ResolveNuGetPackages>
    <SkipImportNuGetProps>true</SkipImportNuGetProps>
    <SkipImportNuGetBuildTargets>true</SkipImportNuGetBuildTargets>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
    <AssemblySearchPaths>{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}</AssemblySearchPaths>
    <DesignTimeAssemblySearchPaths>{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}</DesignTimeAssemblySearchPaths>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <Prefer32Bit>false</Prefer32Bit>
    <DelaySign />
    <DebugSymbols>false</DebugSymbols>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <AutomaticallyUseReferenceAssemblyPackages>true</AutomaticallyUseReferenceAssemblyPackages>
    <MicrosoftNETFrameworkReferenceAssembliesLatestPackageVersion>1.0.2</MicrosoftNETFrameworkReferenceAssembliesLatestPackageVersion>
    <CopyConflictingTransitiveContent>false</CopyConflictingTransitiveContent>
    <MSBuildCopyContentTransitively>true</MSBuildCopyContentTransitively>
    <ResolveAssemblyReferenceOutputUnresolvedAssemblyConflicts>true</ResolveAssemblyReferenceOutputUnresolvedAssemblyConflicts>
    <ToolDepsJsonGeneratorProject>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/GenerateDeps/GenerateDeps.proj</ToolDepsJsonGeneratorProject>
    <NETCoreSdkBundledVersionsProps>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../../../Microsoft.NETCoreSdk.BundledVersions.props</NETCoreSdkBundledVersionsProps>
    <NetCoreRoot>/usr/local/share/dotnet/</NetCoreRoot>
    <NetCoreTargetingPackRoot>/usr/local/share/dotnet/packs</NetCoreTargetingPackRoot>
    <NETCoreAppMaximumVersion>6.0</NETCoreAppMaximumVersion>
    <BundledNETCoreAppTargetFrameworkVersion>6.0</BundledNETCoreAppTargetFrameworkVersion>
    <BundledNETCoreAppPackageVersion>6.0.10</BundledNETCoreAppPackageVersion>
    <BundledNETStandardTargetFrameworkVersion>2.1</BundledNETStandardTargetFrameworkVersion>
    <BundledNETStandardPackageVersion>2.1.0</BundledNETStandardPackageVersion>
    <BundledNETCorePlatformsPackageVersion>6.0.6</BundledNETCorePlatformsPackageVersion>
    <BundledRuntimeIdentifierGraphFile>/usr/local/share/dotnet/sdk/6.0.402/RuntimeIdentifierGraph.json</BundledRuntimeIdentifierGraphFile>
    <NETCoreSdkVersion>6.0.402</NETCoreSdkVersion>
    <NETCoreSdkRuntimeIdentifier>osx-arm64</NETCoreSdkRuntimeIdentifier>
    <NETCoreSdkPortableRuntimeIdentifier>osx-arm64</NETCoreSdkPortableRuntimeIdentifier>
    <_NETCoreSdkIsPreview>false</_NETCoreSdkIsPreview>
    <RuntimeIdentifierGraphPath>/usr/local/share/dotnet/sdk/6.0.402/RuntimeIdentifierGraph.json</RuntimeIdentifierGraphPath>
    <EnableWebSdkImplicitPackageVersions>false</EnableWebSdkImplicitPackageVersions>
    <__WindowsAppSdkDefaultImageIncludes>**/*.png;**/*.bmp;**/*.jpg;**/*.dds;**/*.tif;**/*.tga;**/*.gif</__WindowsAppSdkDefaultImageIncludes>
    <__DisableWorkloadResolverSentinelPath>/usr/local/share/dotnet/sdk/6.0.402/DisableWorkloadResolver.sentinel</__DisableWorkloadResolverSentinelPath>
    <MSBuildEnableWorkloadResolver>true</MSBuildEnableWorkloadResolver>
    <WarningLevel>6</WarningLevel>
    <WarningsAsErrors>;NU1605</WarningsAsErrors>
    <DefineConstants>TRACE;LOCAL;NET;NET6_0;NETCOREAPP</DefineConstants>
    <UsingILLinkTasksSdk>true</UsingILLinkTasksSdk>
    <ILLinkTasksAssembly>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.ILLink.Tasks/build/../tools/net6.0/ILLink.Tasks.dll</ILLinkTasksAssembly>
    <DotNetCompatibilityAssembly>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../tools/net6.0/Microsoft.DotNet.Compatibility.dll</DotNetCompatibilityAssembly>
    <TargetsForTfmSpecificContentInPackage>;PackTool;_PackProjectToolValidation</TargetsForTfmSpecificContentInPackage>
    <MicrosoftNETWindowsWorkloadInstalled>true</MicrosoftNETWindowsWorkloadInstalled>
    <_TargetFrameworkVersionValue>0.0</_TargetFrameworkVersionValue>
    <_WindowsDesktopSdkTargetFrameworkVersionFloor>3.0</_WindowsDesktopSdkTargetFrameworkVersionFloor>
    <HasRuntimeOutput />
    <_UsingDefaultForHasRuntimeOutput>true</_UsingDefaultForHasRuntimeOutput>
    <VersionPrefix>1.0.0</VersionPrefix>
    <Version>1.0.0</Version>
    <Authors>CsprojPackager</Authors>
    <PlatformName>AnyCPU</PlatformName>
    <BaseOutputPath>bin/</BaseOutputPath>
    <OutputPath>bin/Local/net6.0/</OutputPath>
    <PublishProfileImported>false</PublishProfileImported>
    <_PublishProfileDesignerFolder>Properties</_PublishProfileDesignerFolder>
    <_PublishProfileRootFolder>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/Properties/PublishProfiles/</_PublishProfileRootFolder>
    <TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v6.0</TargetFrameworkVersion>
    <TargetPlatformIdentifier />
    <TargetPlatformVersion />
    <_EnableDefaultWindowsPlatform>false</_EnableDefaultWindowsPlatform>
    <UseOSWinMdReferences>false</UseOSWinMdReferences>
    <DefaultItemExcludes>;bin/Local//**;obj//**;bin//**;obj//**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc</DefaultItemExcludes>
    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
    <ImportFrameworkWinFXTargets>false</ImportFrameworkWinFXTargets>
    <_TargetFrameworkVersionWithoutV>6.0</_TargetFrameworkVersionWithoutV>
    <RuntimePackInWorkloadVersion>6.0.5</RuntimePackInWorkloadVersion>
    <_UsingDefaultPlatformTarget>true</_UsingDefaultPlatformTarget>
    <AppendRuntimeIdentifierToOutputPath>true</AppendRuntimeIdentifierToOutputPath>
    <CheckEolTargetFramework>true</CheckEolTargetFramework>
    <_IsNETCoreOrNETStandard>true</_IsNETCoreOrNETStandard>
    <DesignTimeAutoUnify>true</DesignTimeAutoUnify>
    <AutoUnifyAssemblyReferences>true</AutoUnifyAssemblyReferences>
    <GenerateDependencyFile>true</GenerateDependencyFile>
    <IncludeFileVersionsInDependencyFile>true</IncludeFileVersionsInDependencyFile>
    <TargetExt>.dll</TargetExt>
    <EnableFrameworkPathOverride>false</EnableFrameworkPathOverride>
    <PublishDirName>publish</PublishDirName>
    <PublishDir>bin/Local/net6.0/publish/</PublishDir>
    <_NugetFallbackFolder>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../../../../NuGetFallbackFolder</_NugetFallbackFolder>
    <_WorkloadLibraryPacksFolder>/usr/local/share/dotnet/library-packs</_WorkloadLibraryPacksFolder>
    <AddAdditionalExplicitAssemblyReferences>false</AddAdditionalExplicitAssemblyReferences>
    <AssetTargetFallback>;net461;net462;net47;net471;net472;net48;net481</AssetTargetFallback>
    <_FrameworkIdentifierForImplicitDefine>NET</_FrameworkIdentifierForImplicitDefine>
    <VersionlessImplicitFrameworkDefine>NET</VersionlessImplicitFrameworkDefine>
    <_FrameworkVersionForImplicitDefine>6_0</_FrameworkVersionForImplicitDefine>
    <ImplicitFrameworkDefine>NET6_0</ImplicitFrameworkDefine>
    <BackwardsCompatFrameworkDefine>NETCOREAPP</BackwardsCompatFrameworkDefine>
    <PublishDocumentationFiles>true</PublishDocumentationFiles>
    <PublishDocumentationFile>true</PublishDocumentationFile>
    <PublishReferencesDocumentationFiles>true</PublishReferencesDocumentationFiles>
    <IsNetCoreAppTargetingLatestTFM>true</IsNetCoreAppTargetingLatestTFM>
    <LanguageTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft.CSharp.targets</LanguageTargets>
    <CSharpTargetsPath>/usr/local/share/dotnet/sdk/6.0.402/Microsoft.CSharp.CurrentVersion.targets</CSharpTargetsPath>
    <ImportByWildcardBeforeMicrosoftCSharpTargets>true</ImportByWildcardBeforeMicrosoftCSharpTargets>
    <ImportByWildcardAfterMicrosoftCSharpTargets>true</ImportByWildcardAfterMicrosoftCSharpTargets>
    <ImportUserLocationsByWildcardBeforeMicrosoftCSharpTargets>true</ImportUserLocationsByWildcardBeforeMicrosoftCSharpTargets>
    <ImportUserLocationsByWildcardAfterMicrosoftCSharpTargets>true</ImportUserLocationsByWildcardAfterMicrosoftCSharpTargets>
    <CustomBeforeMicrosoftCSharpTargets>/usr/local/share/dotnet/sdk/6.0.402/vCurrent/Custom.Before.Microsoft.CSharp.targets</CustomBeforeMicrosoftCSharpTargets>
    <CustomAfterMicrosoftCSharpTargets>/usr/local/share/dotnet/sdk/6.0.402/vCurrent/Custom.After.Microsoft.CSharp.targets</CustomAfterMicrosoftCSharpTargets>
    <DefaultLanguageSourceExtension>.cs</DefaultLanguageSourceExtension>
    <Language>C#</Language>
    <TargetRuntime>Managed</TargetRuntime>
    <AlwaysUseNumericalSuffixInItemNames>true</AlwaysUseNumericalSuffixInItemNames>
    <DefineCommonItemSchemas>true</DefineCommonItemSchemas>
    <DefineCommonReferenceSchemas>true</DefineCommonReferenceSchemas>
    <DefineCommonCapabilities>true</DefineCommonCapabilities>
    <DefaultProjectTypeGuid>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</DefaultProjectTypeGuid>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <CreateManifestResourceNamesDependsOn />
    <UseHostCompilerIfAvailable>true</UseHostCompilerIfAvailable>
    <CoreCompileDependsOn>
			GitInfo;
			GitVersion;
			GitThisAssembly;
			GitInfoReport;
			;_ComputeNonExistentFileProperty;ResolveCodeAnalysisRuleSet
		</CoreCompileDependsOn>
    <CSharpCoreTargetsPath>/usr/local/share/dotnet/sdk/6.0.402/Roslyn/Microsoft.CSharp.Core.targets</CSharpCoreTargetsPath>
    <CompilerApiVersion>roslyn4.3</CompilerApiVersion>
    <SourceRootMappedPathsFeatureSupported>true</SourceRootMappedPathsFeatureSupported>
    <_MaxSupportedLangVersion>10.0</_MaxSupportedLangVersion>
    <MaxSupportedLangVersion>10.0</MaxSupportedLangVersion>
    <CSharpDesignTimeTargetsPath>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/VisualStudio/Managed/Microsoft.CSharp.DesignTime.targets</CSharpDesignTimeTargetsPath>
    <CommonTargetsPath>/usr/local/share/dotnet/sdk/6.0.402/Microsoft.Common.CurrentVersion.targets</CommonTargetsPath>
    <ImportByWildcardBeforeMicrosoftCommonTargets>true</ImportByWildcardBeforeMicrosoftCommonTargets>
    <ImportByWildcardAfterMicrosoftCommonTargets>true</ImportByWildcardAfterMicrosoftCommonTargets>
    <ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets>true</ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets>
    <ImportUserLocationsByWildcardAfterMicrosoftCommonTargets>true</ImportUserLocationsByWildcardAfterMicrosoftCommonTargets>
    <CustomBeforeMicrosoftCommonTargets>/usr/local/share/dotnet/sdk/6.0.402/vCurrent/Custom.Before.Microsoft.Common.targets</CustomBeforeMicrosoftCommonTargets>
    <CustomAfterMicrosoftCommonTargets>/usr/local/share/dotnet/sdk/6.0.402/vCurrent/Custom.After.Microsoft.Common.targets</CustomAfterMicrosoftCommonTargets>
    <ReportingServicesTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/VisualStudio/v17.0/ReportingServices/Microsoft.ReportingServices.targets</ReportingServicesTargets>
    <AvailablePlatforms>Any CPU,x86,x64,ARM32,ARM64</AvailablePlatforms>
    <TargetFrameworkSDKToolsDirectory />
    <HighEntropyVA>true</HighEntropyVA>
    <GenerateFullPaths>true</GenerateFullPaths>
    <YieldDuringToolExecution>true</YieldDuringToolExecution>
    <TargetFrameworkMoniker>.NETCoreApp,Version=v6.0</TargetFrameworkMoniker>
    <TargetPlatformSdkPath />
    <TargetPlatformDisplayName> </TargetPlatformDisplayName>
    <_OriginalPlatform>AnyCPU</_OriginalPlatform>
    <_OriginalConfiguration>Local</_OriginalConfiguration>
    <BaseOutputPathWasSpecified>true</BaseOutputPathWasSpecified>
    <ConfigurationName>Local</ConfigurationName>
    <_DebugSymbolsProduced>true</_DebugSymbolsProduced>
    <_DocumentationFileProduced>true</_DocumentationFileProduced>
    <OutDir>bin/Local/net6.0/</OutDir>
    <ProjectName>CsprojPackager</ProjectName>
    <TargetName>CsprojPackager</TargetName>
    <ProjectFileName>CsprojPackager.csproj</ProjectFileName>
    <ProjectExt>.csproj</ProjectExt>
    <TargetFileName>CsprojPackager.dll</TargetFileName>
    <PublishableProject />
    <_DeploymentTargetApplicationManifestFileName>Native.CsprojPackager.manifest</_DeploymentTargetApplicationManifestFileName>
    <TargetDeployManifestFileName>CsprojPackager.application</TargetDeployManifestFileName>
    <_DeploymentApplicationManifestIdentity>Native.CsprojPackager</_DeploymentApplicationManifestIdentity>
    <_DeploymentDeployManifestIdentity>CsprojPackager.application</_DeploymentDeployManifestIdentity>
    <_DeploymentFileMappingExtension />
    <_DeploymentBuiltUpdateInterval>0</_DeploymentBuiltUpdateInterval>
    <_DeploymentBuiltUpdateIntervalUnits>Days</_DeploymentBuiltUpdateIntervalUnits>
    <_DeploymentLauncherBased>true</_DeploymentLauncherBased>
    <MaxTargetPath>100</MaxTargetPath>
    <TargetCulture>*</TargetCulture>
    <TargetDir>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/</TargetDir>
    <TargetPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/CsprojPackager.dll</TargetPath>
    <TargetRefPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/ref/CsprojPackager.dll</TargetRefPath>
    <ProjectDir>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/</ProjectDir>
    <ProjectPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/CsprojPackager.csproj</ProjectPath>
    <DevEnvDir>*Undefined*</DevEnvDir>
    <SolutionName>*Undefined*</SolutionName>
    <SolutionFileName>*Undefined*</SolutionFileName>
    <SolutionPath>*Undefined*</SolutionPath>
    <SolutionDir>*Undefined*</SolutionDir>
    <SolutionExt>*Undefined*</SolutionExt>
    <CleanFile>CsprojPackager.csproj.FileListAbsolute.txt</CleanFile>
    <BuildProjectReferences>true</BuildProjectReferences>
    <BuildInParallel>true</BuildInParallel>
    <_ResolveReferenceDependencies>false</_ResolveReferenceDependencies>
    <_GetChildProjectCopyToOutputDirectoryItems>true</_GetChildProjectCopyToOutputDirectoryItems>
    <OverwriteReadOnlyFiles>false</OverwriteReadOnlyFiles>
    <ComReferenceNoClassMembers>false</ComReferenceNoClassMembers>
    <_GenerateBindingRedirectsIntermediateAppConfig>obj/net6.0/CsprojPackager.dll.config</_GenerateBindingRedirectsIntermediateAppConfig>
    <_DeploymentUrl />
    <ProcessorArchitecture>msil</ProcessorArchitecture>
    <ConsiderPlatformAsProcessorArchitecture>true</ConsiderPlatformAsProcessorArchitecture>
    <ProcessorArchitectureAsPlatform>AnyCPU</ProcessorArchitectureAsPlatform>
    <ProjectFlavor>Client</ProjectFlavor>
    <WebReference_EnableProperties>true</WebReference_EnableProperties>
    <WebReference_EnableSQLTypes>true</WebReference_EnableSQLTypes>
    <WebReference_EnableLegacyEventingModel>false</WebReference_EnableLegacyEventingModel>
    <AssemblyFoldersSuffix>AssemblyFoldersEx</AssemblyFoldersSuffix>
    <FrameworkRegistryBase>Software\Microsoft\.NETCoreApp</FrameworkRegistryBase>
    <TargetPlatformRegistryBase>Software\Microsoft\Microsoft SDKs\</TargetPlatformRegistryBase>
    <AssemblyFoldersConfigFile>/usr/local/share/dotnet/sdk/6.0.402/AssemblyFolders.config</AssemblyFoldersConfigFile>
    <AllowedReferenceAssemblyFileExtensions>
      .winmd;
      .dll;
      .exe
    </AllowedReferenceAssemblyFileExtensions>
    <AllowedReferenceRelatedFileExtensions>
      .pdb;
      .xml;
      .pri;
      .dll.config;
      .exe.config
    </AllowedReferenceRelatedFileExtensions>
    <FullReferenceAssemblyNames>Full</FullReferenceAssemblyNames>
    <ContinueOnError>false</ContinueOnError>
    <MSBuildWarningsAsMessages>;@(NoWarn->'%(Identity)');</MSBuildWarningsAsMessages>
    <MSBuildWarningsAsErrors>;NU1605</MSBuildWarningsAsErrors>
    <MSBuildWarningsNotAsErrors />
    <CommonXamlResourcesDirectory>/usr/local/share/dotnet/sdk/6.0.402//</CommonXamlResourcesDirectory>
    <SourceControlInformationFeatureSupported>true</SourceControlInformationFeatureSupported>
    <BuildDependsOn>
      BeforeBuild;
      CoreBuild;
      AfterBuild
    </BuildDependsOn>
    <CoreBuildDependsOn>
      _CheckForBuildWithNoBuild;
      
      BuildOnlySettings;
      PrepareForBuild;
      PreBuildEvent;
      ResolveReferences;
      PrepareResources;
      ResolveKeySource;
      Compile;
      ExportWindowsMDFile;
      UnmanagedUnregistration;
      GenerateSerializationAssemblies;
      CreateSatelliteAssemblies;
      GenerateManifests;
      GetTargetPath;
      PrepareForRun;
      UnmanagedRegistration;
      IncrementalClean;
      PostBuildEvent
    ;
      GenerateBuildDependencyFile;
      GenerateBuildRuntimeConfigurationFiles
    </CoreBuildDependsOn>
    <_ProjectDefaultTargets>Build</_ProjectDefaultTargets>
    <RebuildDependsOn>
      _SdkBeforeRebuild;
      
      BeforeRebuild;
      Clean;
      Build;
      AfterRebuild;
    
    </RebuildDependsOn>
    <BuildGenerateSourcesAction>Build</BuildGenerateSourcesAction>
    <BuildCompileAction>Build</BuildCompileAction>
    <BuildLinkAction>Build</BuildLinkAction>
    <RunDependsOn />
    <BuildingProject>false</BuildingProject>
    <PrepareForBuildDependsOn>;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata</PrepareForBuildDependsOn>
    <Framework40Dir>@(_TargetFramework40DirectoryItem)</Framework40Dir>
    <Framework35Dir>@(_TargetFramework35DirectoryItem)</Framework35Dir>
    <Framework30Dir>@(_TargetFramework30DirectoryItem)</Framework30Dir>
    <Framework20Dir>@(_TargetFramework20DirectoryItem)</Framework20Dir>
    <FrameworkDir>@(_TargetFramework40DirectoryItem)</FrameworkDir>
    <TargetedFrameworkDir>@(_TargetedFrameworkDirectoryItem)</TargetedFrameworkDir>
    <FrameworkSDKDir>@(_TargetFrameworkSDKDirectoryItem)</FrameworkSDKDir>
    <GetFrameworkPathsDependsOn />
    <PreBuildEventDependsOn />
    <UnmanagedUnregistrationDependsOn />
    <ResolveReferencesDependsOn>
      BeforeResolveReferences;
      AssignProjectConfiguration;
      ResolveProjectReferences;
      FindInvalidProjectReferences;
      ResolveNativeReferences;
      ResolveAssemblyReferences;
      GenerateBindingRedirects;
      ResolveComReferences;
      AfterResolveReferences
    </ResolveReferencesDependsOn>
    <UseDefaultPlatformLookupTables>true</UseDefaultPlatformLookupTables>
    <PrepareProjectReferencesDependsOn>
      AssignProjectConfiguration;
      _SplitProjectReferencesByFileExistence;
      _GetProjectReferenceTargetFrameworkProperties;
      _GetProjectReferencePlatformProperties
    </PrepareProjectReferencesDependsOn>
    <GetTargetPathDependsOn />
    <GetTargetPathWithTargetPlatformMonikerDependsOn />
    <ResolveAssemblyReferencesDependsOn>
      
      
      ResolveProjectReferences;
      FindInvalidProjectReferences;
      GetFrameworkPaths;
      GetReferenceAssemblyPaths;
      PrepareForBuild;
      ResolveSDKReferences;
      ExpandSDKReferences;
    ;
      ResolvePackageDependenciesForBuild;
      _HandlePackageFileConflicts;
    ;
      ResolveTargetingPackAssets;
    </ResolveAssemblyReferencesDependsOn>
    <SDKReferenceRegistryRoot>Software\Microsoft\Microsoft SDKs</SDKReferenceRegistryRoot>
    <SDKReferenceDirectoryRoot>/Users/david/.local/share/Microsoft SDKs;/Applications/Microsoft SDKs</SDKReferenceDirectoryRoot>
    <ResolveSDKReferencesDependsOn>
      GetInstalledSDKLocations
    </ResolveSDKReferencesDependsOn>
    <TargetedSDKConfiguration>Retail</TargetedSDKConfiguration>
    <TargetedSDKArchitecture>msil</TargetedSDKArchitecture>
    <ShouldMarkCertainSDKReferencesAsRuntimeOnly>true</ShouldMarkCertainSDKReferencesAsRuntimeOnly>
    <FindInvalidProjectReferencesDependsOn>
      GetReferenceTargetPlatformMonikers
    </FindInvalidProjectReferencesDependsOn>
    <ExpandSDKReferencesDependsOn>
      ResolveSDKReferences
    </ExpandSDKReferencesDependsOn>
    <ExpandSDKAllowedReferenceExtensions>
      .winmd;
      .dll
    </ExpandSDKAllowedReferenceExtensions>
    <ProjectDesignTimeAssemblyResolutionSearchPaths>
      {CandidateAssemblyFiles};
      ;
      {HintPathFromItem};
      {TargetFrameworkDirectory};
      {Registry:Software\Microsoft\.NETCoreApp,v6.0,AssemblyFoldersEx};
      {RawFileName};
      /Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/
    </ProjectDesignTimeAssemblyResolutionSearchPaths>
    <DesignTimeResolveAssemblyReferencesDependsOn>
      GetFrameworkPaths;
      GetReferenceAssemblyPaths;
      ResolveReferences
    </DesignTimeResolveAssemblyReferencesDependsOn>
    <ComReferenceExecuteAsTool>false</ComReferenceExecuteAsTool>
    <PrepareResourcesDependsOn>
      ResolvePackageDependenciesForBuild;
      _HandlePackageFileConflicts;
      
      ;
      PrepareResourceNames;
      ResGen;
      CompileLicxFiles
    
    </PrepareResourcesDependsOn>
    <PrepareResourceNamesDependsOn>
      AssignTargetPaths;
      SplitResourcesByCulture;
      CreateManifestResourceNames;
      CreateCustomManifestResourceNames
    </PrepareResourceNamesDependsOn>
    <AssignTargetPathsDependsOn />
    <CreateCustomManifestResourceNamesDependsOn />
    <ResGenDependsOn>ResolveAssemblyReferences;SplitResourcesByCulture;BeforeResGen;CoreResGen;AfterResGen</ResGenDependsOn>
    <CoreResGenDependsOn>FindReferenceAssembliesForReferences</CoreResGenDependsOn>
    <UseSourcePath>true</UseSourcePath>
    <ResGenExecuteAsTool>false</ResGenExecuteAsTool>
    <CompileLicxFilesDependsOn />
    <CompileDependsOn>
      
      ResolveReferences;
      ResolveKeySource;
      SetWin32ManifestProperties;
      FindReferenceAssembliesForReferences;
      _GenerateCompileInputs;
      BeforeCompile;
      _TimeStampBeforeCompile;
      _GenerateCompileDependencyCache;
      CoreCompile;
      _TimeStampAfterCompile;
      AfterCompile;
    ;
      _CreateAppHost;
      _CreateComHost;
      _GetIjwHostPaths;
    </CompileDependsOn>
    <TargetFrameworkMonikerAssemblyAttributesPath>obj/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs</TargetFrameworkMonikerAssemblyAttributesPath>
    <GenerateTargetFrameworkAttribute>true</GenerateTargetFrameworkAttribute>
    <_SGenDllName>CsprojPackager.XmlSerializers.dll</_SGenDllName>
    <_SGenDllCreated>false</_SGenDllCreated>
    <_SGenGenerateSerializationAssembliesConfig>Auto</_SGenGenerateSerializationAssembliesConfig>
    <SGenUseProxyTypes>true</SGenUseProxyTypes>
    <SGenUseKeep>false</SGenUseKeep>
    <SGenShouldGenerateSerializer>true</SGenShouldGenerateSerializer>
    <CreateSatelliteAssembliesDependsOn>
      
      _GenerateSatelliteAssemblyInputs;
      ComputeIntermediateSatelliteAssemblies;
      GenerateSatelliteAssemblies
    ;
      CoreGenerateSatelliteAssemblies
    </CreateSatelliteAssembliesDependsOn>
    <ComputeIntermediateSatelliteAssembliesDependsOn>
      CreateManifestResourceNames
    </ComputeIntermediateSatelliteAssembliesDependsOn>
    <EmbeddedWin32Manifest />
    <GenerateManifestsDependsOn>
      SetWin32ManifestProperties;
      GenerateApplicationManifest;
      GenerateDeploymentManifest
    </GenerateManifestsDependsOn>
    <DeploymentComputeClickOnceManifestInfoDependsOn>
      CleanPublishFolder;
      _DeploymentGenerateTrustInfo
      
    </DeploymentComputeClickOnceManifestInfoDependsOn>
    <SkipCopyUnchangedFiles>true</SkipCopyUnchangedFiles>
    <UseCommonOutputDirectory>false</UseCommonOutputDirectory>
    <PrepareForRunDependsOn>
      CopyFilesToOutputDirectory
    </PrepareForRunDependsOn>
    <CreateHardLinksForCopyAdditionalFilesIfPossible>false</CreateHardLinksForCopyAdditionalFilesIfPossible>
    <CreateSymbolicLinksForCopyAdditionalFilesIfPossible>false</CreateSymbolicLinksForCopyAdditionalFilesIfPossible>
    <_TargetsThatPrepareProjectReferences>
      AssignProjectConfiguration;
      _SplitProjectReferencesByFileExistence
    </_TargetsThatPrepareProjectReferences>
    <GetCopyToOutputDirectoryItemsDependsOn>
      AssignTargetPaths;
      
      AssignProjectConfiguration;
      _SplitProjectReferencesByFileExistence
    ;
      _GetProjectReferenceTargetFrameworkProperties;
      _PopulateCommonStateForGetCopyToOutputDirectoryItems
    </GetCopyToOutputDirectoryItemsDependsOn>
    <_RecursiveTargetForContentCopying>GetCopyToOutputDirectoryItems</_RecursiveTargetForContentCopying>
    <UnmanagedRegistrationDependsOn />
    <CleanDependsOn>
      BeforeClean;
      UnmanagedUnregistration;
      CoreClean;
      CleanReferencedProjects;
      CleanPublishFolder;
      AfterClean
    </CleanDependsOn>
    <CoreCleanDependsOn>
      _SdkBeforeClean;
      
    </CoreCleanDependsOn>
    <PostBuildEventDependsOn />
    <PublishDependsOn>
      _DeploymentUnpublishable
    </PublishDependsOn>
    <PublishOnlyDependsOn>
      SetGenerateManifests;
      PublishBuild;
      BeforePublish;
      GenerateManifests;
      CopyFilesToOutputDirectory;
      _CopyFilesToPublishFolder;
      _DeploymentGenerateBootstrapper;
      ResolveKeySource;
      _DeploymentSignClickOnceDeployment;
      AfterPublish
    </PublishOnlyDependsOn>
    <PublishBuildDependsOn>
      BuildOnlySettings;
      PrepareForBuild;
      ResolveReferences;
      PrepareResources;
      ResolveKeySource;
      GenerateSerializationAssemblies;
      CreateSatelliteAssemblies;
    </PublishBuildDependsOn>
    <BuiltProjectOutputGroupDependsOn>PrepareForBuild</BuiltProjectOutputGroupDependsOn>
    <DebugSymbolsProjectOutputGroupDependsOn />
    <DocumentationProjectOutputGroupDependsOn />
    <SatelliteDllsProjectOutputGroupDependsOn>PrepareForBuild;PrepareResourceNames</SatelliteDllsProjectOutputGroupDependsOn>
    <SourceFilesProjectOutputGroupDependsOn>PrepareForBuild;AssignTargetPaths</SourceFilesProjectOutputGroupDependsOn>
    <ContentFilesProjectOutputGroupDependsOn>PrepareForBuild;AssignTargetPaths</ContentFilesProjectOutputGroupDependsOn>
    <SGenFilesOutputGroupDependsOn />
    <SDKRedistOutputGroupDependsOn>ResolveSDKReferences;ExpandSDKReferences</SDKRedistOutputGroupDependsOn>
    <CommonOutputGroupsDependsOn>
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    </CommonOutputGroupsDependsOn>
    <BuiltProjectOutputGroupDependenciesDependsOn>
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    </BuiltProjectOutputGroupDependenciesDependsOn>
    <DebugSymbolsProjectOutputGroupDependenciesDependsOn>
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    </DebugSymbolsProjectOutputGroupDependenciesDependsOn>
    <SatelliteDllsProjectOutputGroupDependenciesDependsOn>
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    </SatelliteDllsProjectOutputGroupDependenciesDependsOn>
    <DocumentationProjectOutputGroupDependenciesDependsOn>
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    </DocumentationProjectOutputGroupDependenciesDependsOn>
    <SGenFilesOutputGroupDependenciesDependsOn>
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    </SGenFilesOutputGroupDependenciesDependsOn>
    <ReferenceCopyLocalPathsOutputGroupDependsOn>
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    </ReferenceCopyLocalPathsOutputGroupDependsOn>
    <DesignerRuntimeImplementationProjectOutputGroupDependsOn>
      
      ;
      
      ;
      BuildOnlySettings;
      PrepareForBuild;
      AssignTargetPaths;
      ResolveReferences
    
    ;
      _GenerateDesignerDepsFile;
      _GenerateDesignerRuntimeConfigFile;
      _GatherDesignerShadowCopyFiles;
    </DesignerRuntimeImplementationProjectOutputGroupDependsOn>
    <CodeAnalysisTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/VisualStudio/v17.0/CodeAnalysis/Microsoft.CodeAnalysis.targets</CodeAnalysisTargets>
    <MsTestToolsTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/VisualStudio/v17.0/TeamTest/Microsoft.TeamTest.targets</MsTestToolsTargets>
    <MsAppxPackageTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/VisualStudio/v17.0/AppxPackage/Microsoft.AppXPackage.Targets</MsAppxPackageTargets>
    <NuGetRestoreTargets>/usr/local/share/dotnet/sdk/6.0.402/NuGet.targets</NuGetRestoreTargets>
    <IsRestoreTargetsFileLoaded>true</IsRestoreTargetsFileLoaded>
    <RestoreTaskAssemblyFile>NuGet.Build.Tasks.dll</RestoreTaskAssemblyFile>
    <HideWarningsAndErrors>false</HideWarningsAndErrors>
    <RestoreRecursive>true</RestoreRecursive>
    <RestoreUseSkipNonexistentTargets>true</RestoreUseSkipNonexistentTargets>
    <ValidateRuntimeIdentifierCompatibility>false</ValidateRuntimeIdentifierCompatibility>
    <RestoreContinueOnError>WarnAndContinue</RestoreContinueOnError>
    <RestoreBuildInParallel>true</RestoreBuildInParallel>
    <NuGetInteractive />
    <PackageDownloadSupported>true</PackageDownloadSupported>
    <GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>true</GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>
    <_GenerateRestoreGraphProjectEntryInputProperties>ExcludeRestorePackageImports=true</_GenerateRestoreGraphProjectEntryInputProperties>
    <MicrosoftNETBuildExtensionsTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/Microsoft.NET.Build.Extensions/Microsoft.NET.Build.Extensions.targets</MicrosoftNETBuildExtensionsTargets>
    <MicrosoftNETBuildExtensionsTasksAssembly>/usr/local/share/dotnet/sdk/6.0.402/Microsoft/Microsoft.NET.Build.Extensions/tools/net6.0/Microsoft.NET.Build.Extensions.Tasks.dll</MicrosoftNETBuildExtensionsTasksAssembly>
    <MSBuildAllProjects>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/CsprojPackager.csproj;;/usr/local/share/dotnet/sdk/6.0.402/Current/Microsoft.Common.targets/ImportAfter/Microsoft.TestPlatform.ImportAfter.targets</MSBuildAllProjects>
    <VSTestTargets>/usr/local/share/dotnet/sdk/6.0.402/Microsoft.TestPlatform.targets</VSTestTargets>
    <VSTestTaskAssemblyFile>Microsoft.TestPlatform.Build.dll</VSTestTaskAssemblyFile>
    <VSTestConsolePath>/usr/local/share/dotnet/sdk/6.0.402/vstest.console.dll</VSTestConsolePath>
    <ImportProjectExtensionTargets>true</ImportProjectExtensionTargets>
    <InjectThisAssemblyProjectDependsOn>
      InitializeSourceControlInformation
    </InjectThisAssemblyProjectDependsOn>
    <PackOnBuild>true</PackOnBuild>
    <PackSymbols>true</PackSymbols>
    <PackCompile>true</PackCompile>
    <EnablePackInference>true</EnablePackInference>
    <EnablePackCleanup>true</EnablePackCleanup>
    <PackProjectReferences>true</PackProjectReferences>
    <EmitPackage>true</EmitPackage>
    <EmitNuspec>false</EmitNuspec>
    <NuspecFile>bin//CsprojPackager.nuspec</NuspecFile>
    <GetPackageVersionDependsOn>
      ;
      _SetDefaultPackageVersion
    ;MinVer</GetPackageVersionDependsOn>
    <GetPackageTargetPathDependsOn>
      ;
      GetPackageMetadata;
      _SetDefaultPackageTargetPath;
    </GetPackageTargetPathDependsOn>
    <PackageOutputGroupDependsOn>GetPackageTargetPath;</PackageOutputGroupDependsOn>
    <_ShouldPackOnBuild>true</_ShouldPackOnBuild>
    <PackDependsOn>
      CleanPackageOutput;
      
      
      GetPackageTargetPath;
      GetPackageContents
    ;
    </PackDependsOn>
    <HttpNuGetCache>/Users/david/.local/share/NuGet/v3-cache</HttpNuGetCache>
    <CleanHttpNuGetCacheOnPack>true</CleanHttpNuGetCacheOnPack>
    <NuGetCache>\.nuget\packages</NuGetCache>
    <PackFolder>lib</PackFolder>
    <PackReadme>true</PackReadme>
    <PackContent>true</PackContent>
    <PackBuildOutput>true</PackBuildOutput>
    <PackFrameworkReferences>true</PackFrameworkReferences>
    <_OutputFullPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/</_OutputFullPath>
    <PackageReadmeFilename>readme</PackageReadmeFilename>
    <PackageReadmeExtension>.md</PackageReadmeExtension>
    <GetPackageContentsDependsOn>
      
      
      ;
      _SetDefaultPackageReferencePack;
      InferPackageContents
    ;
      GetPackageTargetPath;
      _AddPackageManifest
    ;
      _GetReferencedPackageContents
    </GetPackageContentsDependsOn>
    <GenerateNuspecDependsOn>;MinVer</GenerateNuspecDependsOn>
    <MinVerDetailed>low</MinVerDetailed>
    <MinVerTargetFramework>net6.0</MinVerTargetFramework>
    <_GenerateSourceLinkFileBeforeTargets>CoreCompile</_GenerateSourceLinkFileBeforeTargets>
    <_GenerateSourceLinkFileDependsOnTargets />
    <_SourceLinkGitHubAssemblyFile>/Users/david/.nuget/packages/microsoft.sourcelink.github/1.1.1/build/../tools/core/Microsoft.SourceLink.GitHub.dll</_SourceLinkGitHubAssemblyFile>
    <SourceLinkUrlInitializerTargets>;_InitializeGitHubSourceLinkUrl</SourceLinkUrlInitializerTargets>
    <SourceControlManagerUrlTranslationTargets>;TranslateGitHubUrlsInSourceControlInformation</SourceControlManagerUrlTranslationTargets>
    <JustInTimeVersioningInitDirectory>/Users/david/GitHub/justinwritescode../</JustInTimeVersioningInitDirectory>
    <JustInTimeVersioningInitPackagesDirectory>/Users/david/GitHub/justinwritescode../Packages/</JustInTimeVersioningInitPackagesDirectory>
    <ForceReinitJustInTimeVersioning>false</ForceReinitJustInTimeVersioning>
    <JustInTimeVersioningPropsFileInitialContents>
        <Project xmlns="" />
      </JustInTimeVersioningPropsFileInitialContents>
    <JustInTimeVersioningJsonFileInitialContents>
        { }
      </JustInTimeVersioningJsonFileInitialContents>
    <GitRemote>origin</GitRemote>
    <GitVersionFile>GitInfo.txt</GitVersionFile>
    <GitInfoBaseDir>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager</GitInfoBaseDir>
    <GitDefaultBranch>master</GitDefaultBranch>
    <GitDefaultCommit>0000000</GitDefaultCommit>
    <GitDefaultVersion>0.0.0</GitDefaultVersion>
    <GitThisAssemblyMetadata>false</GitThisAssemblyMetadata>
    <GitInfoThisAssemblyFile>obj/net6.0/ThisAssembly.GitInfo.g.cs</GitInfoThisAssemblyFile>
    <GitThisAssembly>true</GitThisAssembly>
    <GitInfoReportImportance>low</GitInfoReportImportance>
    <GitThisAssemblyMetadataDefine>NOMETADATA</GitThisAssemblyMetadataDefine>
    <GitCommits>0</GitCommits>
    <GitSkipCache>false</GitSkipCache>
    <SkipReadGitCache>false</SkipReadGitCache>
    <SkipWriteGitCache>false</SkipWriteGitCache>
    <GitCommitsIgnoreMerges>false</GitCommitsIgnoreMerges>
    <GitNameRevOptions>--refs=refs/heads/* --no-undefined --always</GitNameRevOptions>
    <GitTagRegex>*</GitTagRegex>
    <GitBaseVersionRegex>v?(?&lt;MAJOR&gt;\d+)\.(?&lt;MINOR&gt;\d+)(?:\-(?&lt;LABEL&gt;[\dA-Za-z\-\.]+))?$|^v?(?&lt;MAJOR&gt;\d+)\.(?&lt;MINOR&gt;\d+)\.(?&lt;PATCH&gt;\d+)(?:\-(?&lt;LABEL&gt;[\dA-Za-z\-\.]+))?$|^(?&lt;LABEL&gt;[\dA-Za-z\-\.]+)\-v?(?&lt;MAJOR&gt;\d+)\.(?&lt;MINOR&gt;\d+)\.(?&lt;PATCH&gt;\d+)$</GitBaseVersionRegex>
    <GitMinVersion>2.5.0</GitMinVersion>
    <GitCommitDateFormat>%cI</GitCommitDateFormat>
    <_GitInfoFile>obj/net6.0/GitInfo.cache</_GitInfoFile>
    <_GitIsDirtyFile>obj/net6.0/GitIsDirty.cache</_GitIsDirtyFile>
    <GitInfoDependsOn>
			SetGitExe;
			_EnsureGit;
			_GitRoot;
			_GitInputs;
			_GitClearCache;
			_GitReadCache;
			_GitRepositoryUrl;
			_GitBranch;
			_GitCommit;
			_GitCommitDate;
			_GitPopulateInfo;
		</GitInfoDependsOn>
    <_ShortShaFormat>%h</_ShortShaFormat>
    <_LongShaFormat>%H</_LongShaFormat>
    <GitVersionDependsOn>
			GitInfo;
			_GitBaseVersionBranch;
			_GitBaseVersionTagExists;
			_GitBaseVersionTag;
			_GitBaseVersionFile;
			_GitBaseVersionFallback;
			_GitValidateBaseVersion;
			_GitPopulateVersionInfo;
			_GitWriteCache
		</GitVersionDependsOn>
    <GitThisAssemblyDependsOn>
			GitInfo;
			GitVersion;
			_GitInputs;
			_GitGenerateThisAssembly
		</GitThisAssemblyDependsOn>
    <GitExe>/usr/bin/git</GitExe>
    <GitInfoImported>true</GitInfoImported>
    <ImportDirectoryBuildTargets>true</ImportDirectoryBuildTargets>
    <_DirectoryBuildTargetsFile>Directory.Build.targets</_DirectoryBuildTargetsFile>
    <_DirectoryBuildTargetsBasePath>/Users/david/GitHub/justinwritescode</_DirectoryBuildTargetsBasePath>
    <DirectoryBuildTargetsPath>/Users/david/GitHub/justinwritescode/Directory.Build.targets</DirectoryBuildTargetsPath>
    <UsingMicrosoftCentralPackageVersionsSdk>true</UsingMicrosoftCentralPackageVersionsSdk>
    <MinVerTagPrefix>v</MinVerTagPrefix>
    <TargetFrameworkIsNetStandard20Compatible>False</TargetFrameworkIsNetStandard20Compatible>
    <TargetFrameworkIsNetStandard21Compatible>False</TargetFrameworkIsNetStandard21Compatible>
    <TargetFrameworkIsNet60Compatible>False</TargetFrameworkIsNet60Compatible>
    <EfCoreVersion>[3.1.27,)</EfCoreVersion>
    <MediatRContractsVersion>[1.0.1,)</MediatRContractsVersion>
    <ThisAssemblyNamespace />
    <ConfigurationSpecificPackagesVersionFile>/Users/david/GitHub/Packages/Versions.Local.props</ConfigurationSpecificPackagesVersionFile>
    <JustInTimeVersioningVersion>0.0.1-Local</JustInTimeVersioningVersion>
    <_JustInTimePackageVersions_pkgs>Imported</_JustInTimePackageVersions_pkgs>
    <Utf8Output>true</Utf8Output>
    <NoCompilerStandardLib>true</NoCompilerStandardLib>
    <InnerBuildProperty>TargetFramework</InnerBuildProperty>
    <InnerBuildPropertyValues>TargetFrameworks</InnerBuildPropertyValues>
    <MicrosoftNETBuildTasksDirectoryRoot>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../tools/</MicrosoftNETBuildTasksDirectoryRoot>
    <MicrosoftNETBuildTasksTFM>net6.0</MicrosoftNETBuildTasksTFM>
    <MicrosoftNETBuildTasksDirectory>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../tools/net6.0/</MicrosoftNETBuildTasksDirectory>
    <MicrosoftNETBuildTasksAssembly>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../tools/net6.0/Microsoft.NET.Build.Tasks.dll</MicrosoftNETBuildTasksAssembly>
    <DefaultImplicitPackages>Microsoft.NETCore.App;NETStandard.Library</DefaultImplicitPackages>
    <DotnetCliToolTargetFramework>netcoreapp2.2</DotnetCliToolTargetFramework>
    <ProjectAssetsCacheFile>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.assets.cache</ProjectAssetsCacheFile>
    <CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>
    <ContentPreprocessorOutputDirectory>obj/net6.0/NuGet/</ContentPreprocessorOutputDirectory>
    <NuGetTargetMoniker>.NETCoreApp,Version=v6.0</NuGetTargetMoniker>
    <EmitAssetsLogMessages>true</EmitAssetsLogMessages>
    <EmitLegacyAssetsFileItems>false</EmitLegacyAssetsFileItems>
    <SupportsRoslynComponentVersioning>true</SupportsRoslynComponentVersioning>
    <_NugetTargetMonikerAndRID>.NETCoreApp,Version=v6.0</_NugetTargetMonikerAndRID>
    <MarkPackageReferencesAsExternallyResolved>true</MarkPackageReferencesAsExternallyResolved>
    <ResolvePackageDependenciesForBuildDependsOn>
      ResolveLockFileReferences;
      ResolveLockFileAnalyzers;
      ResolveLockFileCopyLocalFiles;
      ResolveRuntimePackAssets;
      RunProduceContentAssets;
      IncludeTransitiveProjectReferences
    </ResolvePackageDependenciesForBuildDependsOn>
    <EnableDefaultItems>true</EnableDefaultItems>
    <EnableDefaultCompileItems>true</EnableDefaultCompileItems>
    <EnableDefaultEmbeddedResourceItems>true</EnableDefaultEmbeddedResourceItems>
    <EnableDefaultNoneItems>true</EnableDefaultNoneItems>
    <DefaultExcludesInProjectFolder>;**/.*/**</DefaultExcludesInProjectFolder>
    <TargetLatestRuntimePatch>false</TargetLatestRuntimePatch>
    <_TargetLatestRuntimePatchIsDefault>true</_TargetLatestRuntimePatchIsDefault>
    <VerifyMatchingImplicitPackageVersion>true</VerifyMatchingImplicitPackageVersion>
    <DisableStandardFrameworkResolution>true</DisableStandardFrameworkResolution>
    <AlwaysIncludeCoreFrameworkInRuntimeConfig>true</AlwaysIncludeCoreFrameworkInRuntimeConfig>
    <UserRuntimeConfig>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/runtimeconfig.template.json</UserRuntimeConfig>
    <GenerateSatelliteAssembliesForCore>true</GenerateSatelliteAssembliesForCore>
    <ComputeNETCoreBuildOutputFiles>true</ComputeNETCoreBuildOutputFiles>
    <_GenerateRuntimeConfigurationPropertyInputsCache>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.genruntimeconfig.cache</_GenerateRuntimeConfigurationPropertyInputsCache>
    <GenerateRuntimeConfigDevFile>false</GenerateRuntimeConfigDevFile>
    <ProjectDepsFileName>CsprojPackager.deps.json</ProjectDepsFileName>
    <ProjectDepsFilePath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/CsprojPackager.deps.json</ProjectDepsFilePath>
    <ProjectRuntimeConfigFileName>CsprojPackager.runtimeconfig.json</ProjectRuntimeConfigFileName>
    <ProjectRuntimeConfigFilePath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/CsprojPackager.runtimeconfig.json</ProjectRuntimeConfigFilePath>
    <IncludeMainProjectInDepsFile>true</IncludeMainProjectInDepsFile>
    <GenerateResourceMSBuildArchitecture>CurrentArchitecture</GenerateResourceMSBuildArchitecture>
    <GenerateResourceMSBuildRuntime>CurrentRuntime</GenerateResourceMSBuildRuntime>
    <_NativeLibraryPrefix>lib</_NativeLibraryPrefix>
    <_NativeLibraryExtension>.so</_NativeLibraryExtension>
    <_DotNetHostExecutableName>dotnet</_DotNetHostExecutableName>
    <_DotNetAppHostExecutableNameWithoutExtension>apphost</_DotNetAppHostExecutableNameWithoutExtension>
    <_DotNetAppHostExecutableName>apphost</_DotNetAppHostExecutableName>
    <_DotNetSingleFileHostExecutableNameWithoutExtension>singlefilehost</_DotNetSingleFileHostExecutableNameWithoutExtension>
    <_DotNetComHostLibraryNameWithoutExtension>comhost</_DotNetComHostLibraryNameWithoutExtension>
    <_DotNetComHostLibraryName>comhost</_DotNetComHostLibraryName>
    <_DotNetIjwHostLibraryNameWithoutExtension>Ijwhost</_DotNetIjwHostLibraryNameWithoutExtension>
    <_DotNetIjwHostLibraryName>Ijwhost</_DotNetIjwHostLibraryName>
    <_DotNetHostPolicyLibraryName>libhostpolicy.so</_DotNetHostPolicyLibraryName>
    <_DotNetHostFxrLibraryName>libhostfxr.so</_DotNetHostFxrLibraryName>
    <_DefaultUserProfileRuntimeStorePath>/Users/david/.dotnet/store</_DefaultUserProfileRuntimeStorePath>
    <UserProfileRuntimeStorePath>/Users/david/.dotnet/store</UserProfileRuntimeStorePath>
    <GenerateResourceUsePreserializedResources>true</GenerateResourceUsePreserializedResources>
    <EmbeddedResourceUseDependentUponConvention>true</EmbeddedResourceUseDependentUponConvention>
    <MetadataUpdaterSupport>false</MetadataUpdaterSupport>
    <RunWorkingDirectory />
    <_UseAttributeForTargetFrameworkInfoPropertyNames>true</_UseAttributeForTargetFrameworkInfoPropertyNames>
    <_TargetFrameworkDirectories />
    <FrameworkPathOverride />
    <TargetFrameworkDirectory />
    <NoStdLib>true</NoStdLib>
    <_DesignerDepsFileName>CsprojPackager.designer.deps.json</_DesignerDepsFileName>
    <_DesignerRuntimeConfigFileName>CsprojPackager.designer.runtimeconfig.json</_DesignerRuntimeConfigFileName>
    <_DesignerDepsFilePath>obj/net6.0/CsprojPackager.designer.deps.json</_DesignerDepsFilePath>
    <_DesignerRuntimeConfigFilePath>obj/net6.0/CsprojPackager.designer.runtimeconfig.json</_DesignerRuntimeConfigFilePath>
    <GeneratedAssemblyInfoFile>obj/net6.0/CsprojPackager.AssemblyInfo.cs</GeneratedAssemblyInfoFile>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <GenerateAssemblyCompanyAttribute>true</GenerateAssemblyCompanyAttribute>
    <GenerateAssemblyConfigurationAttribute>true</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyCopyrightAttribute>true</GenerateAssemblyCopyrightAttribute>
    <GenerateAssemblyDescriptionAttribute>true</GenerateAssemblyDescriptionAttribute>
    <GenerateAssemblyFileVersionAttribute>true</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>true</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyProductAttribute>true</GenerateAssemblyProductAttribute>
    <GenerateAssemblyTitleAttribute>true</GenerateAssemblyTitleAttribute>
    <GenerateAssemblyVersionAttribute>true</GenerateAssemblyVersionAttribute>
    <GenerateRepositoryUrlAttribute>true</GenerateRepositoryUrlAttribute>
    <GenerateNeutralResourcesLanguageAttribute>true</GenerateNeutralResourcesLanguageAttribute>
    <GenerateAssemblyMetadataAttributes>true</GenerateAssemblyMetadataAttributes>
    <IncludeSourceRevisionInInformationalVersion>true</IncludeSourceRevisionInInformationalVersion>
    <GenerateInternalsVisibleToAttributes>true</GenerateInternalsVisibleToAttributes>
    <GenerateRequiresPreviewFeaturesAttribute>true</GenerateRequiresPreviewFeaturesAttribute>
    <GeneratedGlobalUsingsFile>obj/net6.0/CsprojPackager.GlobalUsings.g.cs</GeneratedGlobalUsingsFile>
    <_GenerateSupportedRuntimeIntermediateAppConfig>obj/net6.0/CsprojPackager.dll.withSupportedRuntime.config</_GenerateSupportedRuntimeIntermediateAppConfig>
    <PublishReadyToRunUseCrossgen2>true</PublishReadyToRunUseCrossgen2>
    <PublishReadyToRunComposite>false</PublishReadyToRunComposite>
    <PublishReadyToRunUseRuntimePackOptimizationData>true</PublishReadyToRunUseRuntimePackOptimizationData>
    <PublishReadyToRunPerfmapFormatVersion>1</PublishReadyToRunPerfmapFormatVersion>
    <MicrosoftNETCrossgenBuildTasksAssembly>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../tasks/net6.0/Microsoft.NET.Sdk.Crossgen.dll</MicrosoftNETCrossgenBuildTasksAssembly>
    <NETCoreSdkBundledCliToolsProps>/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../../../Microsoft.NETCoreSdk.BundledCliTools.props</NETCoreSdkBundledCliToolsProps>
    <DefaultCopyToPublishDirectoryMetadata>true</DefaultCopyToPublishDirectoryMetadata>
    <_GetChildProjectCopyToPublishDirectoryItems>true</_GetChildProjectCopyToPublishDirectoryItems>
    <IsPublishable>true</IsPublishable>
    <_BeforePublishNoBuildTargets>
      BuildOnlySettings;
      _PreventProjectReferencesFromBuilding;
      ResolveReferences;
      PrepareResourceNames;
      ComputeIntermediateSatelliteAssemblies;
      ComputeEmbeddedApphostPaths;
    </_BeforePublishNoBuildTargets>
    <_CorePublishTargets>
      PrepareForPublish;
      ComputeAndCopyFilesToPublishDirectory;
      ;
      PublishItemsOutputGroup;
    </_CorePublishTargets>
    <_PublishNoBuildAlternativeDependsOn>
      BuildOnlySettings;
      _PreventProjectReferencesFromBuilding;
      ResolveReferences;
      PrepareResourceNames;
      ComputeIntermediateSatelliteAssemblies;
      ComputeEmbeddedApphostPaths;
    ;
      PrepareForPublish;
      ComputeAndCopyFilesToPublishDirectory;
      ;
      PublishItemsOutputGroup;
    </_PublishNoBuildAlternativeDependsOn>
    <CopyBuildOutputToPublishDirectory>true</CopyBuildOutputToPublishDirectory>
    <CopyOutputSymbolsToPublishDirectory>true</CopyOutputSymbolsToPublishDirectory>
    <IncludeSymbolsInSingleFile>false</IncludeSymbolsInSingleFile>
    <PublishItemsOutputGroupDependsOn>
      ;
      ResolveReferences;
      ComputeResolvedFilesToPublishList;
      _ComputeFilesToBundle;
    </PublishItemsOutputGroupDependsOn>
    <_ToolsSettingsFilePath>obj/DotnetToolSettings.xml</_ToolsSettingsFilePath>
    <_PackToolPublishDependency>
      BuildOnlySettings;
      _PreventProjectReferencesFromBuilding;
      ResolveReferences;
      PrepareResourceNames;
      ComputeIntermediateSatelliteAssemblies;
      ComputeEmbeddedApphostPaths;
    ;
      PrepareForPublish;
      ComputeAndCopyFilesToPublishDirectory;
      ;
      PublishItemsOutputGroup;
    </_PackToolPublishDependency>
    <ToolCommandName>CsprojPackager</ToolCommandName>
    <ToolEntryPoint>CsprojPackager.dll</ToolEntryPoint>
    <_ShimInputCacheFile>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.shiminput.cache</_ShimInputCacheFile>
    <_ShimCreatedSentinelFile>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.shimcreated.sentinel</_ShimCreatedSentinelFile>
    <PackagedShimOutputRootDirectory>bin/Local/net6.0/</PackagedShimOutputRootDirectory>
    <RefAssembliesFolderName>refs</RefAssembliesFolderName>
    <PreserveCompilationReferences>true</PreserveCompilationReferences>
    <ImplicitConfigurationDefine>LOCAL</ImplicitConfigurationDefine>
    <IntermediateLinkDir>obj/net6.0/linked/</IntermediateLinkDir>
    <_LinkSemaphore>obj/net6.0/linked/Link.semaphore</_LinkSemaphore>
    <AnalysisLevel>latest</AnalysisLevel>
    <EffectiveAnalysisLevel>6.0</EffectiveAnalysisLevel>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
    <_NETAnalyzersSDKAssemblyVersion>6.0.0</_NETAnalyzersSDKAssemblyVersion>
    <CodeAnalysisRuleIds>CA1000;CA1001;CA1002;CA1003;CA1005;CA1008;CA1010;CA1012;CA1014;CA1016;CA1017;CA1018;CA1019;CA1021;CA1024;CA1027;CA1028;CA1030;CA1031;CA1032;CA1033;CA1034;CA1036;CA1040;CA1041;CA1043;CA1044;CA1045;CA1046;CA1047;CA1050;CA1051;CA1052;CA1054;CA1055;CA1056;CA1058;CA1060;CA1061;CA1062;CA1063;CA1064;CA1065;CA1066;CA1067;CA1068;CA1069;CA1070;CA1200;CA1303;CA1304;CA1305;CA1307;CA1308;CA1309;CA1310;CA1401;CA1416;CA1417;CA1418;CA1419;CA1501;CA1502;CA1505;CA1506;CA1507;CA1508;CA1509;CA1700;CA1707;CA1708;CA1710;CA1711;CA1712;CA1713;CA1715;CA1716;CA1720;CA1721;CA1724;CA1725;CA1727;CA1802;CA1805;CA1806;CA1810;CA1812;CA1813;CA1814;CA1815;CA1816;CA1819;CA1820;CA1821;CA1822;CA1823;CA1824;CA1825;CA1826;CA1827;CA1828;CA1829;CA1830;CA1831;CA1832;CA1833;CA1834;CA1835;CA1836;CA1837;CA1838;CA1839;CA1840;CA1841;CA1842;CA1843;CA1844;CA1845;CA1846;CA1847;CA1848;CA1849;CA2000;CA2002;CA2007;CA2008;CA2009;CA2011;CA2012;CA2013;CA2014;CA2015;CA2016;CA2017;CA2018;CA2100;CA2101;CA2109;CA2119;CA2153;CA2200;CA2201;CA2207;CA2208;CA2211;CA2213;CA2214;CA2215;CA2216;CA2217;CA2218;CA2219;CA2224;CA2225;CA2226;CA2227;CA2229;CA2231;CA2234;CA2235;CA2237;CA2241;CA2242;CA2243;CA2244;CA2245;CA2246;CA2247;CA2248;CA2249;CA2250;CA2251;CA2252;CA2253;CA2254;CA2255;CA2256;CA2257;CA2258;CA2300;CA2301;CA2302;CA2305;CA2310;CA2311;CA2312;CA2315;CA2321;CA2322;CA2326;CA2327;CA2328;CA2329;CA2330;CA2350;CA2351;CA2352;CA2353;CA2354;CA2355;CA2356;CA2361;CA2362;CA3001;CA3002;CA3003;CA3004;CA3005;CA3006;CA3007;CA3008;CA3009;CA3010;CA3011;CA3012;CA3061;CA3075;CA3076;CA3077;CA3147;CA5350;CA5351;CA5358;CA5359;CA5360;CA5361;CA5362;CA5363;CA5364;CA5365;CA5366;CA5367;CA5368;CA5369;CA5370;CA5371;CA5372;CA5373;CA5374;CA5375;CA5376;CA5377;CA5378;CA5379;CA5380;CA5381;CA5382;CA5383;CA5384;CA5385;CA5386;CA5387;CA5388;CA5389;CA5390;CA5391;CA5392;CA5393;CA5394;CA5395;CA5396;CA5397;CA5398;CA5399;CA5400;CA5401;CA5402;CA5403;CA5404;CA5405</CodeAnalysisRuleIds>
    <_SupportedPlatformList>@(SupportedPlatform, ',')</_SupportedPlatformList>
    <SupportedOSPlatformVersion />
    <RunPackageValidationDependsOn>_GetReferencePathFromInnerProjects;</RunPackageValidationDependsOn>
    <_GetReferencePathFromInnerProjectsDependsOn>_GetReferencePathForPackageValidation</_GetReferencePathFromInnerProjectsDependsOn>
    <NuGetizerPackageMetadataImported>true</NuGetizerPackageMetadataImported>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <Using>
      <Visible>false</Visible>
    </Using>
    <PackageReference>
      <Version>
      </Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <PrivateAssets>
      </PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <ProjectReference>
      <ReferenceSourceTarget>ProjectReference</ReferenceSourceTarget>
      <OutputItemType>
      </OutputItemType>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <SetConfiguration>Configuration=Local</SetConfiguration>
      <Targets>
      </Targets>
    </ProjectReference>
    <NoWarn>
      <Category>None</Category>
      <Off>false</Off>
      <Description>No descripion</Description>
    </NoWarn>
    <NuGetSource>
      <ApiKey>
      </ApiKey>
      <Value>Value</Value>
      <PushOnBuild>false</PushOnBuild>
    </NuGetSource>
    <NuGetPushJob>
      <ApiKey>
      </ApiKey>
      <DeleteCommand>
      </DeleteCommand>
      <Version>
      </Version>
      <PackageId>
      </PackageId>
      <PushCommand>
      </PushCommand>
      <PackagePath>
      </PackagePath>
    </NuGetPushJob>
    <_MSBuildProjectReferenceExistent>
      <PackFolder>
      </PackFolder>
    </_MSBuildProjectReferenceExistent>
    <PackageFile>
      <PackageReferencePath>
      </PackageReferencePath>
      <PackageReferencePathProperty>
      </PackageReferencePathProperty>
      <PackFolder>None</PackFolder>
      <Source>Explicit</Source>
      <OriginalItemSpec>
      </OriginalItemSpec>
      <PackageReference>
      </PackageReference>
    </PackageFile>
    <PackFolderKind>
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>
      </PackageFolder>
    </PackFolderKind>
    <FileConstant>
      <Value>
      </Value>
      <AreaPath>
      </AreaPath>
      <Link>
      </Link>
      <Area>
      </Area>
    </FileConstant>
    <TargetPathWithTargetPlatformMoniker>
      <TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>
      <IsNuGetized>true</IsNuGetized>
      <IsPackable>true</IsPackable>
      <TargetFrameworkVersion>6.0</TargetFrameworkVersion>
    </TargetPathWithTargetPlatformMoniker>
    <Compile>
      <BuildAction>Compile</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
      <Pack>true</Pack>
      <CodeLanguage>cs</CodeLanguage>
    </Compile>
    <Content>
      <BuildAction>Content</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
      <Pack>true</Pack>
    </Content>
    <EmbeddedResource>
      <BuildAction>EmbeddedResource</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </EmbeddedResource>
    <None>
      <BuildAction>None</BuildAction>
      <DefaultPackFolder>none</DefaultPackFolder>
    </None>
    <ApplicationDefinition>
      <BuildAction>ApplicationDefinition</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </ApplicationDefinition>
    <Page>
      <BuildAction>Page</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </Page>
    <Resource>
      <BuildAction>Resource</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </Resource>
    <SplashScreen>
      <BuildAction>SplashScreen</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </SplashScreen>
    <DesignData>
      <BuildAction>DesignData</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </DesignData>
    <DesignDataWithDesignTimeCreatableTypes>
      <BuildAction>DesignDataWithDesignTimeCreatableTypes</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </DesignDataWithDesignTimeCreatableTypes>
    <CodeAnalysisDictionary>
      <BuildAction>CodeAnalysisDictionary</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </CodeAnalysisDictionary>
    <AndroidAsset>
      <BuildAction>AndroidAsset</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </AndroidAsset>
    <AndroidResource>
      <BuildAction>AndroidResource</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </AndroidResource>
    <BundleResource>
      <BuildAction>BundleResource</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
    </BundleResource>
    <PackInference>
      <PackExclude>
      </PackExclude>
    </PackInference>
    <InferenceCandidate>
      <DefaultPackFolder>
      </DefaultPackFolder>
      <PackFolder>
      </PackFolder>
      <PackagePath>
      </PackagePath>
      <ShouldPack>
      </ShouldPack>
      <Pack>
      </Pack>
      <PackageReference>
      </PackageReference>
      <TargetPath>
      </TargetPath>
    </InferenceCandidate>
    <_InferredPackageFile>
      <FrameworkSpecific>
      </FrameworkSpecific>
    </_InferredPackageFile>
    <ImplicitPackageReference>
      <PrivateAssets>
      </PrivateAssets>
      <Pack>
      </Pack>
    </ImplicitPackageReference>
    <ReferencePath>
      <Facade>false</Facade>
      <FrameworkFile>false</FrameworkFile>
      <NuGetPackageId>
      </NuGetPackageId>
      <Pack>
      </Pack>
    </ReferencePath>
    <_ReferenceRelatedPaths>
      <Facade>false</Facade>
      <FrameworkFile>false</FrameworkFile>
      <NuGetPackageId>
      </NuGetPackageId>
      <Pack>
      </Pack>
    </_ReferenceRelatedPaths>
    <PackageDependencies>
      <ParentPackage>
      </ParentPackage>
    </PackageDependencies>
    <NuGetDeletePackageCommand>
      <Command>dotnet nuget delete CsprojPackager  -s %(NuGetSource.Identity) --non-interactive</Command>
    </NuGetDeletePackageCommand>
    <NuGetPushPackageCommand>
      <Command>dotnet nuget push  -s %(NuGetSource.Identity) --non-interactive</Command>
    </NuGetPushPackageCommand>
    <GlobalPackageReference>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <ResolvedFileToPublish>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </ResolvedFileToPublish>
    <PackageMetadata>
      <Authors>CsprojPackager</Authors>
      <LicenseExpression>MIT</LicenseExpression>
      <PackageId>CsprojPackager</PackageId>
      <RepositoryType>git</RepositoryType>
      <Description>Package Description</Description>
      <Language>en-US</Language>
    </PackageMetadata>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Author Include="Justin Chase">
      <Email>justin@justinwritescode.com</Email>
    </Author>
  </ItemGroup>
  <ItemGroup>
    <Owner Include="Justin Chase">
      <Email>justin@justinwritescode.com</Email>
    </Owner>
  </ItemGroup>
  <ItemGroup>
    <CompilerVisibleProperty Include="Authors" />
    <CompilerVisibleProperty Include="Owners" />
    <CompilerVisibleProperty Include="Copyright" />
    <CompilerVisibleProperty Include="PackageProjectUrl" />
    <CompilerVisibleProperty Include="PackageLicenseExpression" />
    <CompilerVisibleProperty Include="DebugSourceGenerators" />
    <CompilerVisibleProperty Include="DebugThisAssemblyStrings" />
    <CompilerVisibleProperty Include="DebugThisAssemblyProject" />
    <CompilerVisibleProperty Include="DebugThisAssemblyMetadata" />
    <CompilerVisibleProperty Include="DebugThisAssemblyConstants" />
    <CompilerVisibleProperty Include="DebugThisAssemblyAssemblyInfo" />
    <CompilerVisibleProperty Include="TargetFramework" />
    <CompilerVisibleProperty Include="TargetPlatformMinVersion" />
    <CompilerVisibleProperty Include="UsingMicrosoftNETSdkWeb" />
    <CompilerVisibleProperty Include="ProjectTypeGuids" />
    <CompilerVisibleProperty Include="InvariantGlobalization" />
    <CompilerVisibleProperty Include="PlatformNeutralAssembly" />
    <CompilerVisibleProperty Include="_SupportedPlatformList" />
    <CompilerVisibleProperty Include="RootNamespace" />
    <CompilerVisibleProperty Include="ProjectDir" />
  </ItemGroup>
  <ItemGroup>
    <NoWarn Include="CA1305">
      <Category>Globalization</Category>
      <Off>false</Off>
      <Description>Specify IFormatProvider</Description>
      <Reason>This app is only displaying numbers up to like 60</Reason>
    </NoWarn>
    <NoWarn Include="CA1720">
      <Category>Naming</Category>
      <Off>false</Off>
      <Description>Identifiers should not contain type names</Description>
    </NoWarn>
    <NoWarn Include="CA1845">
      <Category>Performance</Category>
      <Off>false</Off>
      <Description>Use span-based 'string.Concat' instead of 'string.Format'</Description>
    </NoWarn>
    <NoWarn Include="CS1591">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>Missing XML comment for publicly visible type or member</Description>
    </NoWarn>
    <NoWarn Include="CS8601">
      <Category>Design</Category>
      <Off>false</Off>
      <Description>Possible null reference assignment</Description>
    </NoWarn>
    <NoWarn Include="CS8602">
      <Category>Design</Category>
      <Off>false</Off>
      <Description>Dereference of a possibly null reference</Description>
    </NoWarn>
    <NoWarn Include="CS8604">
      <Category>Design</Category>
      <Off>false</Off>
      <Description>Possible null reference argument.</Description>
    </NoWarn>
    <NoWarn Include="CS8632">
      <Category>???</Category>
      <Off>false</Off>
      <Description>The annotation for nullable referene types can only be used in code within a '#nullable' annotations context.</Description>
    </NoWarn>
    <NoWarn Include="IDE0009">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>Member access should be qualified</Description>
    </NoWarn>
    <NoWarn Include="IDE0055">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>Fix Formatting</Description>
    </NoWarn>
    <NoWarn Include="IDE0060">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>Remove unused parameter.</Description>
    </NoWarn>
    <NoWarn Include="IDE0065">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>???</Description>
    </NoWarn>
    <NoWarn Include="IDE0130">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>Namespace does not match folder structure.</Description>
      <Reason>It doesn't have to--and the folder structure makes more sense to organize the code that way</Reason>
    </NoWarn>
    <NoWarn Include="IE0009">
      <Category>Style</Category>
      <Off>false</Off>
      <Description>???</Description>
    </NoWarn>
    <NoWarn Include="MSB4011">
      <Category>Build</Category>
      <Off>false</Off>
      <Description>X cannot be imported again.  It was already imported at Y.</Description>
    </NoWarn>
    <NoWarn Include="NU5128">
      <Category>Usage</Category>
      <Off>false</Off>
      <Description>Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location</Description>
    </NoWarn>
    <NoWarn Include="RS1024">
      <Category>None</Category>
      <Off>false</Off>
      <Description>Compare symbols correctly.</Description>
    </NoWarn>
    <NoWarn Include="VSTHRD111">
      <Category>Reliability</Category>
      <Off>false</Off>
      <Description>Use .ConfigureAwait(bool)</Description>
      <Reason>this is a function, not a UI app</Reason>
    </NoWarn>
  </ItemGroup>
  <ItemGroup>
    <PackageTag Include="justinwritescode" />
  </ItemGroup>
  <ItemGroup>
    <SlnGenCustomProjectTypeGuid Include=".proj">
      <ProjectTypeGuid>2ce5b178-8c95-4bdc-a5aa-c9eb6280a366</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".usings">
      <ProjectTypeGuid>dcda4a0a-0a5e-4522-b6c4-80513d0753cd</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".props">
      <ProjectTypeGuid>156a83f1-abef-4e73-abff-c6a1aa437922</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".targets">
      <ProjectTypeGuid>ebca1dae-54cb-40fe-b05b-b52a498fe919</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".pkgs">
      <ProjectTypeGuid>20d1492d-f7b2-41f2-a4e9-74a420cc8cd1</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".restoreproj">
      <ProjectTypeGuid>76eaafad-9fda-4299-b582-8e3c4ced5a18</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".slnproj">
      <ProjectTypeGuid>34eac930-e0ca-420b-bd8c-86042dd9e676</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".mkdocsproj">
      <ProjectTypeGuid>6ed95d8c-b464-479b-83ff-4e1a3cefd207</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".cstestproj">
      <ProjectTypeGuid>FAE04EC0-301F-11D3-BF4B-00C04F79EFBC</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".publishproj">
      <ProjectTypeGuid>35d4bb16-3398-4e2c-8355-2c9c9680e5bd</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".aproj">
      <ProjectTypeGuid>4cd4fd5b-0f23-4623-ba3f-b31cc4ab93ef</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".dwproj">
      <ProjectTypeGuid>013f468b-6b9a-4cbf-a1a7-ae98fe3e05c3</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".dtproj">
      <ProjectTypeGuid>64c8a15c-207e-459d-951d-ad7e7dac7bcf</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".smdlproj">
      <ProjectTypeGuid>ac8c3b70-cd74-4c8e-9ceb-b8d00702bf3e</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".dbproj">
      <ProjectTypeGuid>ac2f40b5-b3bd-4227-938a-6ecfb8c6e06c</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".modelproj">
      <ProjectTypeGuid>cc0c3c51-6a1b-4414-8cd6-9a45a02aec87</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".dxjsproj">
      <ProjectTypeGuid>a9d77286-c18d-461d-83b7-b2fbe1677888</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".cblproj">
      <ProjectTypeGuid>06141aaa-2f82-4232-a3ef-dcb2027764fd</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".dynamicsproj">
      <ProjectTypeGuid>390dbc7b-b3dd-43d4-a958-806d5ce2dd10</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".vfproj">
      <ProjectTypeGuid>aab86bce-e4cc-4bb0-bbc5-83b1a081b6bb</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".isproj">
      <ProjectTypeGuid>f7c9b907-e976-47d6-8ade-5d8c208a472d</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".xsproj">
      <ProjectTypeGuid>60ca03d9-d475-4da7-85b4-dbe70d7f5ae1</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
    <SlnGenCustomProjectTypeGuid Include=".mkdocsproj">
      <ProjectTypeGuid>0728b154-4ff9-43e1-9619-5e7c5296484f</ProjectTypeGuid>
    </SlnGenCustomProjectTypeGuid>
  </ItemGroup>
  <ItemGroup>
    <SourceRoot Include="/Users/david/.nuget/packages/" />
  </ItemGroup>
  <ItemGroup>
    <ProjectProperty Include="AssemblyName" />
    <ProjectProperty Include="RootNamespace" />
    <ProjectProperty Include="TargetFrameworkIdentifier" />
    <ProjectProperty Include="TargetFrameworkMoniker" />
    <ProjectProperty Include="TargetFrameworkVersion" />
  </ItemGroup>
  <ItemGroup>
    <AvailableItemName Include="PackageFile" />
  </ItemGroup>
  <ItemGroup>
    <PackFolderKind Include="Ignore">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>
      </PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Content">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>contentFiles</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="ContentFiles">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>contentFiles</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="None">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>
      </PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Lib">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>lib</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Build">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>build</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="BuildTransitive">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>buildTransitive</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Tool">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>tools</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Tools">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>tools</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Native">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>native</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Runtime">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>runtimes</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Runtimes">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>runtimes</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Ref">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>ref</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Analyzer">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>analyzers</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Analyzers">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>analyzers</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Source">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>source</PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Dependency">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>
      </PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="Metadata">
      <FrameworkSpecific>false</FrameworkSpecific>
      <PackageFolder>
      </PackageFolder>
    </PackFolderKind>
    <PackFolderKind Include="FrameworkReference">
      <FrameworkSpecific>true</FrameworkSpecific>
      <PackageFolder>
      </PackageFolder>
    </PackFolderKind>
  </ItemGroup>
  <ItemGroup>
    <PackInference Include="Compile">
      <PackExclude>obj/net6.0//**/*.cs</PackExclude>
    </PackInference>
    <PackInference Include="Content">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="EmbeddedResource">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="None">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="ApplicationDefinition">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="Page">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="Resource">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="SplashScreen">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="DesignData">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="DesignDataWithDesignTimeCreatableTypes">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="CodeAnalysisDictionary">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="AndroidAsset">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="AndroidResource">
      <PackExclude>
      </PackExclude>
    </PackInference>
    <PackInference Include="BundleResource">
      <PackExclude>
      </PackExclude>
    </PackInference>
  </ItemGroup>
  <ItemGroup>
    <Using Include="Microsoft.Build.Execution">
      <Visible>false</Visible>
      <Alias>MSBEx</Alias>
    </Using>
    <Using Include="Microsoft.Build.Framework">
      <Visible>false</Visible>
      <Alias>MSBF</Alias>
    </Using>
    <Using Include="Microsoft.Build.Utilities.Task">
      <Visible>false</Visible>
      <Alias>MSBTask</Alias>
    </Using>
    <Using Include="System.Text.Json">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.Text.RegularExpressions">
      <Visible>false</Visible>
    </Using>
    <Using Include="System">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.Collections.Generic">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.IO">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.Linq">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.Net.Http">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.Threading">
      <Visible>false</Visible>
    </Using>
    <Using Include="System.Threading.Tasks">
      <Visible>false</Visible>
    </Using>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Text.Json">
      <Version>[6.0.5,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <PrivateAssets>None</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="MSBuild.Usings">
      <Version>[0.0.1-Local, )</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <PrivateAssets>
      </PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="MinVer">
      <Version>[4.1.0,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="NuGetizer">
      <Version>[0.9.0,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>build; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub">
      <Version>[1.1.1,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="GitInfo">
      <Version>[2.2.0,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>build; analyzers; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="Microsoft.Build.Tasks.Git">
      <Version>[1.1.1,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="ThisAssembly">
      <Version>[1.0.9,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>build; analyzers;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="FluentBuilder">
      <Version>[0.7.1,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>build; analyzers;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.SlnGen">
      <Version>[8.5.17,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="Stef.Validation">
      <Version>0.1.0</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="JustInTimeVersioning">
      <Version>0.0.1-Local</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    <PackageReference Include="Microsoft.Build">
      <Version>[17.3.2,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <PrivateAssets>None</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
      <VersionOverride>[17.3.2,)</VersionOverride>
    </PackageReference>
    <PackageReference Include="Microsoft.Build.Framework">
      <Version>[17.3.2,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <PrivateAssets>None</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
      <VersionOverride>[17.3.2,)</VersionOverride>
    </PackageReference>
    <PackageReference Include="Microsoft.Build.Utilities.Core">
      <Version>[17.3.2,)</Version>
      <ExcludeAssets>ContentFiles</ExcludeAssets>
      <PrivateAssets>None</PrivateAssets>
      <Pack>
      </Pack>
      <GeneratePathProperty>true</GeneratePathProperty>
      <VersionOverride>[17.3.2,)</VersionOverride>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <SourceLinkGitHubHost Include="github.com">
      <ContentUrl>https://raw.githubusercontent.com</ContentUrl>
    </SourceLinkGitHubHost>
  </ItemGroup>
  <ItemGroup>
    <ImplicitPackageReferenceVersion Include="Microsoft.NETCore.App">
      <LatestVersion>1.0.16</LatestVersion>
      <DefaultVersion>1.0.5</DefaultVersion>
      <TargetFrameworkVersion>1.0</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.NETCore.App">
      <LatestVersion>1.1.13</LatestVersion>
      <DefaultVersion>1.1.2</DefaultVersion>
      <TargetFrameworkVersion>1.1</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.NETCore.App">
      <LatestVersion>2.0.9</LatestVersion>
      <DefaultVersion>2.0.0</DefaultVersion>
      <TargetFrameworkVersion>2.0</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.NETCore.App">
      <LatestVersion>2.1.30</LatestVersion>
      <DefaultVersion>2.1.0</DefaultVersion>
      <TargetFrameworkVersion>2.1</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.NETCore.App">
      <LatestVersion>2.2.8</LatestVersion>
      <DefaultVersion>2.2.0</DefaultVersion>
      <TargetFrameworkVersion>2.2</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.AspNetCore.App">
      <LatestVersion>2.1.30</LatestVersion>
      <DefaultVersion>2.1.1</DefaultVersion>
      <TargetFrameworkVersion>2.1</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.AspNetCore.All">
      <LatestVersion>2.1.30</LatestVersion>
      <DefaultVersion>2.1.1</DefaultVersion>
      <TargetFrameworkVersion>2.1</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.AspNetCore.App">
      <LatestVersion>2.2.8</LatestVersion>
      <DefaultVersion>2.2.0</DefaultVersion>
      <TargetFrameworkVersion>2.2</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
    <ImplicitPackageReferenceVersion Include="Microsoft.AspNetCore.All">
      <LatestVersion>2.2.8</LatestVersion>
      <DefaultVersion>2.2.0</DefaultVersion>
      <TargetFrameworkVersion>2.2</TargetFrameworkVersion>
    </ImplicitPackageReferenceVersion>
  </ItemGroup>
  <ItemGroup>
    <KnownFrameworkReference Include="Microsoft.NETCore.App">
      <TargetFramework>net6.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>6.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.NETCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>6.0.10</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86;linux-musl-arm;osx-arm64;maccatalyst-x64;maccatalyst-arm64;linux-s390x</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.NETCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>6.0.10</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.NETCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App">
      <TargetFramework>net6.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>6.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>6.0.10</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>6.0.10</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WPF">
      <TargetFramework>net6.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>6.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>6.0.10</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>6.0.10</TargetingPackVersion>
      <Profile>WPF</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms">
      <TargetFramework>net6.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>6.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>6.0.10</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>6.0.10</TargetingPackVersion>
      <Profile>WindowsForms</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.AspNetCore.App">
      <TargetFramework>net6.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>6.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.AspNetCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>6.0.10</LatestRuntimeFrameworkVersion>
      <RuntimePackExcludedRuntimeIdentifiers>android</RuntimePackExcludedRuntimeIdentifiers>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm;osx-x64;linux-musl-x64;linux-musl-arm64;linux-x64;linux-arm;linux-arm64;linux-musl-arm;win-arm64;osx-arm64;linux-s390x</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.AspNetCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>6.0.10</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.Windows.SDK.NET.Ref">
      <RuntimePackAlwaysCopyLocal>true</RuntimePackAlwaysCopyLocal>
      <TargetFramework>net6.0-windows10.0.17763.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>10.0.17763.27</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.Windows.SDK.NET.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>10.0.17763.27</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>any</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.Windows.SDK.NET.Ref</RuntimePackNamePatterns>
      <TargetingPackVersion>10.0.17763.27</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.Windows.SDK.NET.Ref</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.Windows.SDK.NET.Ref">
      <RuntimePackAlwaysCopyLocal>true</RuntimePackAlwaysCopyLocal>
      <TargetFramework>net6.0-windows10.0.18362.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>10.0.18362.27</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.Windows.SDK.NET.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>10.0.18362.27</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>any</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.Windows.SDK.NET.Ref</RuntimePackNamePatterns>
      <TargetingPackVersion>10.0.18362.27</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.Windows.SDK.NET.Ref</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.Windows.SDK.NET.Ref">
      <RuntimePackAlwaysCopyLocal>true</RuntimePackAlwaysCopyLocal>
      <TargetFramework>net6.0-windows10.0.19041.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>10.0.19041.27</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.Windows.SDK.NET.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>10.0.19041.27</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>any</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.Windows.SDK.NET.Ref</RuntimePackNamePatterns>
      <TargetingPackVersion>10.0.19041.27</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.Windows.SDK.NET.Ref</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.NETCore.App">
      <TargetFramework>net5.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>5.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.NETCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>5.0.17</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86;linux-musl-arm;browser-wasm</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.NETCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>5.0.0</TargetingPackVersion>
      <IsTrimmable>true</IsTrimmable>
      <RuntimeFrameworkName>Microsoft.NETCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App">
      <TargetFramework>net5.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>5.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>5.0.17</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>5.0.0</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WPF">
      <TargetFramework>net5.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>5.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>5.0.17</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>5.0.0</TargetingPackVersion>
      <Profile>WPF</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms">
      <TargetFramework>net5.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>5.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>5.0.17</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>5.0.0</TargetingPackVersion>
      <Profile>WindowsForms</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.AspNetCore.App">
      <TargetFramework>net5.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>5.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.AspNetCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>5.0.17</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm;osx-x64;linux-musl-x64;linux-musl-arm64;linux-x64;linux-arm;linux-arm64;linux-musl-arm;win-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.AspNetCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>5.0.0</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.Windows.SDK.NET.Ref">
      <RuntimePackAlwaysCopyLocal>true</RuntimePackAlwaysCopyLocal>
      <TargetFramework>net5.0-windows10.0.17763.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>10.0.17763.27</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.Windows.SDK.NET.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>10.0.17763.27</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>any</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.Windows.SDK.NET.Ref</RuntimePackNamePatterns>
      <TargetingPackVersion>10.0.17763.27</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.Windows.SDK.NET.Ref</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.Windows.SDK.NET.Ref">
      <RuntimePackAlwaysCopyLocal>true</RuntimePackAlwaysCopyLocal>
      <TargetFramework>net5.0-windows10.0.18362.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>10.0.18362.27</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.Windows.SDK.NET.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>10.0.18362.27</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>any</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.Windows.SDK.NET.Ref</RuntimePackNamePatterns>
      <TargetingPackVersion>10.0.18362.27</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.Windows.SDK.NET.Ref</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.Windows.SDK.NET.Ref">
      <RuntimePackAlwaysCopyLocal>true</RuntimePackAlwaysCopyLocal>
      <TargetFramework>net5.0-windows10.0.19041.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>10.0.19041.27</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.Windows.SDK.NET.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>10.0.19041.27</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>any</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.Windows.SDK.NET.Ref</RuntimePackNamePatterns>
      <TargetingPackVersion>10.0.19041.27</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.Windows.SDK.NET.Ref</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.NETCore.App">
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.1.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.NETCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>3.1.30</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.NETCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.1.0</TargetingPackVersion>
      <IsTrimmable>true</IsTrimmable>
      <RuntimeFrameworkName>Microsoft.NETCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App">
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.1.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>3.1.30</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.1.0</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WPF">
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.1.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>3.1.30</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.1.0</TargetingPackVersion>
      <Profile>WPF</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms">
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.1.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>3.1.30</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.1.0</TargetingPackVersion>
      <Profile>WindowsForms</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.AspNetCore.App">
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.1.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.AspNetCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>3.1.30</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm;osx-x64;linux-musl-x64;linux-musl-arm64;linux-x64;linux-arm;linux-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.AspNetCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.1.10</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.NETCore.App">
      <TargetFramework>netcoreapp3.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.NETCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>3.0.3</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.NETCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.0.0</TargetingPackVersion>
      <IsTrimmable>true</IsTrimmable>
      <RuntimeFrameworkName>Microsoft.NETCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App">
      <TargetFramework>netcoreapp3.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>3.0.3</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.0.0</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WPF">
      <TargetFramework>netcoreapp3.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>3.0.3</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.0.0</TargetingPackVersion>
      <Profile>WPF</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms">
      <TargetFramework>netcoreapp3.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.WindowsDesktop.App.Ref</TargetingPackName>
      <IsWindowsOnly>true</IsWindowsOnly>
      <LatestRuntimeFrameworkVersion>3.0.3</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.WindowsDesktop.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.0.0</TargetingPackVersion>
      <Profile>WindowsForms</Profile>
      <RuntimeFrameworkName>Microsoft.WindowsDesktop.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="Microsoft.AspNetCore.App">
      <TargetFramework>netcoreapp3.0</TargetFramework>
      <DefaultRuntimeFrameworkVersion>3.0.0</DefaultRuntimeFrameworkVersion>
      <TargetingPackName>Microsoft.AspNetCore.App.Ref</TargetingPackName>
      <LatestRuntimeFrameworkVersion>3.0.3</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>win-x64;win-x86;win-arm;osx-x64;linux-musl-x64;linux-musl-arm64;linux-x64;linux-arm;linux-arm64</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.AspNetCore.App.Runtime.**RID**</RuntimePackNamePatterns>
      <TargetingPackVersion>3.0.1</TargetingPackVersion>
      <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>
    </KnownFrameworkReference>
    <KnownFrameworkReference Include="NETStandard.Library">
      <TargetFramework>netstandard2.1</TargetFramework>
      <TargetingPackName>NETStandard.Library.Ref</TargetingPackName>
      <TargetingPackVersion>2.1.0</TargetingPackVersion>
    </KnownFrameworkReference>
  </ItemGroup>
  <ItemGroup>
    <KnownAppHostPack Include="Microsoft.NETCore.App">
      <ExcludedRuntimeIdentifiers>android</ExcludedRuntimeIdentifiers>
      <AppHostRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86;linux-musl-arm;osx-arm64;linux-s390x</AppHostRuntimeIdentifiers>
      <TargetFramework>net6.0</TargetFramework>
      <AppHostPackNamePattern>Microsoft.NETCore.App.Host.**RID**</AppHostPackNamePattern>
      <AppHostPackVersion>6.0.10</AppHostPackVersion>
    </KnownAppHostPack>
    <KnownAppHostPack Include="Microsoft.NETCore.App">
      <AppHostRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86;linux-musl-arm</AppHostRuntimeIdentifiers>
      <TargetFramework>net5.0</TargetFramework>
      <AppHostPackNamePattern>Microsoft.NETCore.App.Host.**RID**</AppHostPackNamePattern>
      <AppHostPackVersion>5.0.17</AppHostPackVersion>
    </KnownAppHostPack>
    <KnownAppHostPack Include="Microsoft.NETCore.App">
      <AppHostRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86</AppHostRuntimeIdentifiers>
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <AppHostPackNamePattern>Microsoft.NETCore.App.Host.**RID**</AppHostPackNamePattern>
      <AppHostPackVersion>3.1.30</AppHostPackVersion>
    </KnownAppHostPack>
    <KnownAppHostPack Include="Microsoft.NETCore.App">
      <AppHostRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86</AppHostRuntimeIdentifiers>
      <TargetFramework>netcoreapp3.0</TargetFramework>
      <AppHostPackNamePattern>Microsoft.NETCore.App.Host.**RID**</AppHostPackNamePattern>
      <AppHostPackVersion>3.0.3</AppHostPackVersion>
    </KnownAppHostPack>
  </ItemGroup>
  <ItemGroup>
    <KnownCrossgen2Pack Include="Microsoft.NETCore.App.Crossgen2">
      <Crossgen2RuntimeIdentifiers>linux-musl-x64;linux-x64;win-x64;linux-arm;linux-arm64;linux-musl-arm;linux-musl-arm64;osx-arm64;osx-x64;win-arm;win-arm64;win-x86</Crossgen2RuntimeIdentifiers>
      <TargetFramework>net6.0</TargetFramework>
      <Crossgen2PackNamePattern>Microsoft.NETCore.App.Crossgen2.**RID**</Crossgen2PackNamePattern>
      <Crossgen2PackVersion>6.0.10</Crossgen2PackVersion>
    </KnownCrossgen2Pack>
    <KnownCrossgen2Pack Include="Microsoft.NETCore.App.Crossgen2">
      <Crossgen2RuntimeIdentifiers>linux-musl-x64;linux-x64;win-x64</Crossgen2RuntimeIdentifiers>
      <TargetFramework>net5.0</TargetFramework>
      <Crossgen2PackNamePattern>Microsoft.NETCore.App.Crossgen2.**RID**</Crossgen2PackNamePattern>
      <Crossgen2PackVersion>5.0.17</Crossgen2PackVersion>
    </KnownCrossgen2Pack>
  </ItemGroup>
  <ItemGroup>
    <KnownRuntimePack Include="Microsoft.NETCore.App">
      <TargetFramework>net6.0</TargetFramework>
      <LatestRuntimeFrameworkVersion>6.0.10</LatestRuntimeFrameworkVersion>
      <RuntimePackRuntimeIdentifiers>linux-arm;linux-arm64;linux-musl-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;win-arm;win-arm64;win-x64;win-x86;linux-musl-arm;osx-arm64;maccatalyst-x64;maccatalyst-arm64;linux-s390x;browser-wasm;ios-arm64;ios-arm;iossimulator-arm64;iossimulator-x64;iossimulator-x86;tvos-arm64;tvossimulator-arm64;tvossimulator-x64;android-arm64;android-arm;android-x64;android-x86</RuntimePackRuntimeIdentifiers>
      <RuntimePackNamePatterns>Microsoft.NETCore.App.Runtime.Mono.**RID**</RuntimePackNamePatterns>
      <RuntimePackLabels>Mono</RuntimePackLabels>
      <RuntimeFrameworkName>Microsoft.NETCore.App</RuntimeFrameworkName>
    </KnownRuntimePack>
  </ItemGroup>
  <ItemGroup>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.22621.0">
      <WindowsSdkPackageVersion>10.0.22621.27</WindowsSdkPackageVersion>
      <MinimumNETVersion>6.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.22000.0">
      <WindowsSdkPackageVersion>10.0.22000.27</WindowsSdkPackageVersion>
      <MinimumNETVersion>6.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.20348.0">
      <WindowsSdkPackageVersion>10.0.20348.27</WindowsSdkPackageVersion>
      <MinimumNETVersion>6.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.19041.0">
      <WindowsSdkPackageVersion>10.0.19041.27</WindowsSdkPackageVersion>
      <MinimumNETVersion>6.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.18362.0">
      <WindowsSdkPackageVersion>10.0.18362.27</WindowsSdkPackageVersion>
      <MinimumNETVersion>6.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.17763.0">
      <WindowsSdkPackageVersion>10.0.17763.27</WindowsSdkPackageVersion>
      <MinimumNETVersion>6.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.22000.0">
      <WindowsSdkPackageVersion>10.0.22000.26</WindowsSdkPackageVersion>
      <MinimumNETVersion>5.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.20348.0">
      <WindowsSdkPackageVersion>10.0.20348.26</WindowsSdkPackageVersion>
      <MinimumNETVersion>5.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.19041.0">
      <WindowsSdkPackageVersion>10.0.19041.26</WindowsSdkPackageVersion>
      <MinimumNETVersion>5.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.18362.0">
      <WindowsSdkPackageVersion>10.0.18362.26</WindowsSdkPackageVersion>
      <MinimumNETVersion>5.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="10.0.17763.0">
      <WindowsSdkPackageVersion>10.0.17763.26</WindowsSdkPackageVersion>
      <MinimumNETVersion>5.0</MinimumNETVersion>
    </WindowsSdkSupportedTargetPlatformVersion>
    <WindowsSdkSupportedTargetPlatformVersion Include="8.0" />
    <WindowsSdkSupportedTargetPlatformVersion Include="7.0" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CsprojPackager.cs">
      <BuildAction>Compile</BuildAction>
      <DefaultPackFolder>content</DefaultPackFolder>
      <Pack>true</Pack>
      <CodeLanguage>cs</CodeLanguage>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <FrameworkReference Include="Microsoft.NETCore.App">
      <IsImplicitlyDefined>true</IsImplicitlyDefined>
      <PrivateAssets>All</PrivateAssets>
      <Pack>false</Pack>
    </FrameworkReference>
  </ItemGroup>
  <ItemGroup>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v1.0">
      <DisplayName>.NET Core 1.0</DisplayName>
      <Alias>netcoreapp1.0</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v1.1">
      <DisplayName>.NET Core 1.1</DisplayName>
      <Alias>netcoreapp1.1</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v2.0">
      <DisplayName>.NET Core 2.0</DisplayName>
      <Alias>netcoreapp2.0</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v2.1">
      <DisplayName>.NET Core 2.1</DisplayName>
      <Alias>netcoreapp2.1</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v2.2">
      <DisplayName>.NET Core 2.2</DisplayName>
      <Alias>netcoreapp2.2</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v3.0">
      <DisplayName>.NET Core 3.0</DisplayName>
      <Alias>netcoreapp3.0</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v3.1">
      <DisplayName>.NET Core 3.1</DisplayName>
      <Alias>netcoreapp3.1</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v5.0">
      <DisplayName>.NET 5.0</DisplayName>
      <Alias>net5.0</Alias>
    </SupportedNETCoreAppTargetFramework>
    <SupportedNETCoreAppTargetFramework Include=".NETCoreApp,Version=v6.0">
      <DisplayName>.NET 6.0</DisplayName>
      <Alias>net6.0</Alias>
    </SupportedNETCoreAppTargetFramework>
  </ItemGroup>
  <ItemGroup>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.0">
      <DisplayName>.NET Standard 1.0</DisplayName>
      <Alias>netstandard1.0</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.1">
      <DisplayName>.NET Standard 1.1</DisplayName>
      <Alias>netstandard1.1</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.2">
      <DisplayName>.NET Standard 1.2</DisplayName>
      <Alias>netstandard1.2</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.3">
      <DisplayName>.NET Standard 1.3</DisplayName>
      <Alias>netstandard1.3</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.4">
      <DisplayName>.NET Standard 1.4</DisplayName>
      <Alias>netstandard1.4</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.5">
      <DisplayName>.NET Standard 1.5</DisplayName>
      <Alias>netstandard1.5</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v1.6">
      <DisplayName>.NET Standard 1.6</DisplayName>
      <Alias>netstandard1.6</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v2.0">
      <DisplayName>.NET Standard 2.0</DisplayName>
      <Alias>netstandard2.0</Alias>
    </SupportedNETStandardTargetFramework>
    <SupportedNETStandardTargetFramework Include=".NETStandard,Version=v2.1">
      <DisplayName>.NET Standard 2.1</DisplayName>
      <Alias>netstandard2.1</Alias>
    </SupportedNETStandardTargetFramework>
  </ItemGroup>
  <ItemGroup>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v2.0">
      <DisplayName>.NET Framework 2.0</DisplayName>
      <Alias>net20</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v3.0">
      <DisplayName>.NET Framework 3.0</DisplayName>
      <Alias>net30</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v3.5">
      <DisplayName>.NET Framework 3.5</DisplayName>
      <Alias>net35</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.0">
      <DisplayName>.NET Framework 4.0</DisplayName>
      <Alias>net40</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.5">
      <DisplayName>.NET Framework 4.5</DisplayName>
      <Alias>net45</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.5.1">
      <DisplayName>.NET Framework 4.5.1</DisplayName>
      <Alias>net451</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.5.2">
      <DisplayName>.NET Framework 4.5.2</DisplayName>
      <Alias>net452</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.6">
      <DisplayName>.NET Framework 4.6</DisplayName>
      <Alias>net46</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.6.1">
      <DisplayName>.NET Framework 4.6.1</DisplayName>
      <Alias>net461</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.6.2">
      <DisplayName>.NET Framework 4.6.2</DisplayName>
      <Alias>net462</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.7">
      <DisplayName>.NET Framework 4.7</DisplayName>
      <Alias>net47</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.7.1">
      <DisplayName>.NET Framework 4.7.1</DisplayName>
      <Alias>net471</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.7.2">
      <DisplayName>.NET Framework 4.7.2</DisplayName>
      <Alias>net472</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.8">
      <DisplayName>.NET Framework 4.8</DisplayName>
      <Alias>net48</Alias>
    </SupportedNETFrameworkTargetFramework>
    <SupportedNETFrameworkTargetFramework Include=".NETFramework,Version=v4.8.1">
      <DisplayName>.NET Framework 4.8.1</DisplayName>
      <Alias>net481</Alias>
    </SupportedNETFrameworkTargetFramework>
  </ItemGroup>
  <ItemGroup>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v1.0">
      <DisplayName>.NET Core 1.0</DisplayName>
      <Alias>netcoreapp1.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v1.1">
      <DisplayName>.NET Core 1.1</DisplayName>
      <Alias>netcoreapp1.1</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v2.0">
      <DisplayName>.NET Core 2.0</DisplayName>
      <Alias>netcoreapp2.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v2.1">
      <DisplayName>.NET Core 2.1</DisplayName>
      <Alias>netcoreapp2.1</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v2.2">
      <DisplayName>.NET Core 2.2</DisplayName>
      <Alias>netcoreapp2.2</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v3.0">
      <DisplayName>.NET Core 3.0</DisplayName>
      <Alias>netcoreapp3.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v3.1">
      <DisplayName>.NET Core 3.1</DisplayName>
      <Alias>netcoreapp3.1</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v5.0">
      <DisplayName>.NET 5.0</DisplayName>
      <Alias>net5.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETCoreApp,Version=v6.0">
      <DisplayName>.NET 6.0</DisplayName>
      <Alias>net6.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.0">
      <DisplayName>.NET Standard 1.0</DisplayName>
      <Alias>netstandard1.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.1">
      <DisplayName>.NET Standard 1.1</DisplayName>
      <Alias>netstandard1.1</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.2">
      <DisplayName>.NET Standard 1.2</DisplayName>
      <Alias>netstandard1.2</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.3">
      <DisplayName>.NET Standard 1.3</DisplayName>
      <Alias>netstandard1.3</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.4">
      <DisplayName>.NET Standard 1.4</DisplayName>
      <Alias>netstandard1.4</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.5">
      <DisplayName>.NET Standard 1.5</DisplayName>
      <Alias>netstandard1.5</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v1.6">
      <DisplayName>.NET Standard 1.6</DisplayName>
      <Alias>netstandard1.6</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v2.0">
      <DisplayName>.NET Standard 2.0</DisplayName>
      <Alias>netstandard2.0</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETStandard,Version=v2.1">
      <DisplayName>.NET Standard 2.1</DisplayName>
      <Alias>netstandard2.1</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v2.0">
      <DisplayName>.NET Framework 2.0</DisplayName>
      <Alias>net20</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v3.0">
      <DisplayName>.NET Framework 3.0</DisplayName>
      <Alias>net30</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v3.5">
      <DisplayName>.NET Framework 3.5</DisplayName>
      <Alias>net35</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.0">
      <DisplayName>.NET Framework 4.0</DisplayName>
      <Alias>net40</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.5">
      <DisplayName>.NET Framework 4.5</DisplayName>
      <Alias>net45</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.5.1">
      <DisplayName>.NET Framework 4.5.1</DisplayName>
      <Alias>net451</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.5.2">
      <DisplayName>.NET Framework 4.5.2</DisplayName>
      <Alias>net452</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.6">
      <DisplayName>.NET Framework 4.6</DisplayName>
      <Alias>net46</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.6.1">
      <DisplayName>.NET Framework 4.6.1</DisplayName>
      <Alias>net461</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.6.2">
      <DisplayName>.NET Framework 4.6.2</DisplayName>
      <Alias>net462</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.7">
      <DisplayName>.NET Framework 4.7</DisplayName>
      <Alias>net47</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.7.1">
      <DisplayName>.NET Framework 4.7.1</DisplayName>
      <Alias>net471</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.7.2">
      <DisplayName>.NET Framework 4.7.2</DisplayName>
      <Alias>net472</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.8">
      <DisplayName>.NET Framework 4.8</DisplayName>
      <Alias>net48</Alias>
    </SupportedTargetFramework>
    <SupportedTargetFramework Include=".NETFramework,Version=v4.8.1">
      <DisplayName>.NET Framework 4.8.1</DisplayName>
      <Alias>net481</Alias>
    </SupportedTargetFramework>
  </ItemGroup>
  <ItemGroup>
    <SupportedPlatform Include="Linux" />
    <SupportedPlatform Include="macOS" />
    <SupportedPlatform Include="Windows" />
  </ItemGroup>
  <ItemGroup>
    <SdkSupportedTargetPlatformIdentifier Include="android">
      <DisplayName>Android</DisplayName>
    </SdkSupportedTargetPlatformIdentifier>
    <SdkSupportedTargetPlatformIdentifier Include="ios">
      <DisplayName>iOS</DisplayName>
    </SdkSupportedTargetPlatformIdentifier>
    <SdkSupportedTargetPlatformIdentifier Include="maccatalyst">
      <DisplayName>Mac Catalyst</DisplayName>
    </SdkSupportedTargetPlatformIdentifier>
    <SdkSupportedTargetPlatformIdentifier Include="macos">
      <DisplayName>macOS</DisplayName>
    </SdkSupportedTargetPlatformIdentifier>
    <SdkSupportedTargetPlatformIdentifier Include="tvos">
      <DisplayName>tvOS</DisplayName>
    </SdkSupportedTargetPlatformIdentifier>
    <SdkSupportedTargetPlatformIdentifier Include="windows">
      <DisplayName>Windows</DisplayName>
    </SdkSupportedTargetPlatformIdentifier>
  </ItemGroup>
  <ItemGroup>
    <_EolNetCoreTargetFrameworkVersions Include="1.0" />
    <_EolNetCoreTargetFrameworkVersions Include="1.1" />
    <_EolNetCoreTargetFrameworkVersions Include="2.0" />
    <_EolNetCoreTargetFrameworkVersions Include="2.1" />
    <_EolNetCoreTargetFrameworkVersions Include="2.2" />
    <_EolNetCoreTargetFrameworkVersions Include="3.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectCapability Include="GenerateDocumentationFile" />
    <ProjectCapability Include="CSharp" />
    <ProjectCapability Include="Managed" />
    <ProjectCapability Include="ReferencesFolder" />
    <ProjectCapability Include="LanguageService" />
    <ProjectCapability Include="RelativePathDerivedDefaultNamespace" />
    <ProjectCapability Include="AssemblyReferences" />
    <ProjectCapability Include="COMReferences" />
    <ProjectCapability Include="ProjectReferences" />
    <ProjectCapability Include="SharedProjectReferences" />
    <ProjectCapability Include="OutputGroups" />
    <ProjectCapability Include="AllTargetOutputGroups" />
    <ProjectCapability Include="VisualStudioWellKnownOutputGroups" />
    <ProjectCapability Include="SingleFileGenerators" />
    <ProjectCapability Include="DeclaredSourceItems" />
    <ProjectCapability Include="UserSourceItems" />
    <ProjectCapability Include="Pack" />
    <ProjectCapability Include="SupportsHotReload" />
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//CSharp.ProjectItemsSchema.xaml" />
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//CSharp.xaml">
      <Context>File</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//CSharp.BrowseObject.xaml">
      <Context>BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//ProjectItemsSchema.xaml" />
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//General.xaml">
      <Context>Project</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//Debugger_General.xaml">
      <Context>Project</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//General.BrowseObject.xaml">
      <Context>BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//General_File.xaml">
      <Context>File</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//SCC.xaml">
      <Context>Invisible</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//Folder.xaml">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//None.xaml">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//Content.xaml">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//EmbeddedResource.xaml">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//SpecialFolder.xaml">
      <Context>File;ProjectSubscriptionService</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//assemblyreference.xaml">
      <Context>;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//ResolvedAssemblyReference.xaml">
      <Context>ProjectSubscriptionService;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//COMReference.xaml">
      <Context>;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//ResolvedCOMReference.xaml">
      <Context>ProjectSubscriptionService;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//ProjectReference.xaml">
      <Context>;BrowseObject</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="/usr/local/share/dotnet/sdk/6.0.402//ResolvedProjectReference.xaml">
      <Context>ProjectSubscriptionService;BrowseObject</Context>
    </PropertyPageSchema>
  </ItemGroup>
  <ItemGroup>
    <DocFileItem Include="obj/CsprojPackager.xml" />
  </ItemGroup>
  <ItemGroup>
    <_AllDirectoriesAbove Include="/" />
    <_AllDirectoriesAbove Include="/Users" />
    <_AllDirectoriesAbove Include="/Users/david" />
    <_AllDirectoriesAbove Include="/Users/david/GitHub" />
    <_AllDirectoriesAbove Include="/Users/david/GitHub/justinwritescode" />
    <_AllDirectoriesAbove Include="/Users/david/GitHub/justinwritescode/src" />
    <_AllDirectoriesAbove Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks" />
    <_AllDirectoriesAbove Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src" />
    <_AllDirectoriesAbove Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager" />
  </ItemGroup>
  <ItemGroup>
    <PotentialEditorConfigFiles Include="/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/GitHub/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/GitHub/justinwritescode/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/GitHub/justinwritescode/src/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/.editorconfig" />
    <PotentialEditorConfigFiles Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/.editorconfig" />
  </ItemGroup>
  <ItemGroup>
    <GlobalAnalyzerConfigFiles Include="/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/GitHub/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/GitHub/justinwritescode/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/GitHub/justinwritescode/src/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/.globalconfig" />
    <GlobalAnalyzerConfigFiles Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/.globalconfig" />
  </ItemGroup>
  <ItemGroup>
    <_OutputPathItem Include="bin/Local/net6.0/" />
  </ItemGroup>
  <ItemGroup>
    <_UnmanagedRegistrationCache Include="obj/CsprojPackager.csproj.UnmanagedRegistration.cache" />
  </ItemGroup>
  <ItemGroup>
    <_ResolveComReferenceCache Include="obj/net6.0/CsprojPackager.csproj.ResolveComReference.cache" />
  </ItemGroup>
  <ItemGroup>
    <AppConfigFileDestination Include="bin/Local/net6.0/CsprojPackager.dll.config" />
  </ItemGroup>
  <ItemGroup>
    <IntermediateAssembly Include="obj/net6.0/CsprojPackager.dll" />
  </ItemGroup>
  <ItemGroup>
    <FinalDocFile Include="bin/Local/net6.0/CsprojPackager.xml" />
  </ItemGroup>
  <ItemGroup>
    <CopyUpToDateMarker Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.csproj.CopyComplete" />
  </ItemGroup>
  <ItemGroup>
    <IntermediateRefAssembly Include="obj/net6.0/refint/CsprojPackager.dll" />
  </ItemGroup>
  <ItemGroup>
    <CreateDirectory Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/refint/" />
    <CreateDirectory Include="obj/net6.0/ref" />
  </ItemGroup>
  <ItemGroup>
    <_DebugSymbolsIntermediatePath Include="obj/net6.0/CsprojPackager.pdb" />
  </ItemGroup>
  <ItemGroup>
    <_DebugSymbolsOutputPath Include="bin/Local/net6.0/CsprojPackager.pdb" />
  </ItemGroup>
  <ItemGroup>
    <_DeploymentManifestEntryPoint Include="obj/net6.0/CsprojPackager.dll">
      <TargetPath>CsprojPackager.dll</TargetPath>
    </_DeploymentManifestEntryPoint>
  </ItemGroup>
  <ItemGroup>
    <ApplicationManifest Include="obj/net6.0/Native.CsprojPackager.manifest">
      <TargetPath>Native.CsprojPackager.manifest</TargetPath>
    </ApplicationManifest>
  </ItemGroup>
  <ItemGroup>
    <_ApplicationManifestFinal Include="bin/Local/net6.0/Native.CsprojPackager.manifest">
      <TargetPath>Native.CsprojPackager.manifest</TargetPath>
    </_ApplicationManifestFinal>
  </ItemGroup>
  <ItemGroup>
    <DeployManifest Include="obj/net6.0/CsprojPackager.application">
      <TargetPath>CsprojPackager.application</TargetPath>
    </DeployManifest>
  </ItemGroup>
  <ItemGroup>
    <BuiltProjectOutputGroupKeyOutput Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.dll">
      <IsKeyOutput>true</IsKeyOutput>
      <FinalOutputPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/CsprojPackager.dll</FinalOutputPath>
      <TargetPath>CsprojPackager.dll</TargetPath>
    </BuiltProjectOutputGroupKeyOutput>
  </ItemGroup>
  <ItemGroup>
    <DebugSymbolsProjectOutputGroupOutput Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.pdb">
      <FinalOutputPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/CsprojPackager.pdb</FinalOutputPath>
      <TargetPath>CsprojPackager.pdb</TargetPath>
    </DebugSymbolsProjectOutputGroupOutput>
  </ItemGroup>
  <ItemGroup>
    <DocumentationProjectOutputGroupOutput Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/CsprojPackager.xml">
      <IsKeyOutput>true</IsKeyOutput>
      <FinalOutputPath>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/bin/Local/net6.0/CsprojPackager.xml</FinalOutputPath>
      <TargetPath>CsprojPackager.xml</TargetPath>
    </DocumentationProjectOutputGroupOutput>
  </ItemGroup>
  <ItemGroup>
    <CompilerVisibleItemMetadata Include="AdditionalFiles">
      <MetadataName>SourceItemType</MetadataName>
    </CompilerVisibleItemMetadata>
    <CompilerVisibleItemMetadata Include="AdditionalFiles">
      <MetadataName>ManifestResourceName</MetadataName>
    </CompilerVisibleItemMetadata>
    <CompilerVisibleItemMetadata Include="AdditionalFiles">
      <MetadataName>SourceItemType</MetadataName>
    </CompilerVisibleItemMetadata>
    <CompilerVisibleItemMetadata Include="Constant">
      <MetadataName>Comment</MetadataName>
    </CompilerVisibleItemMetadata>
    <CompilerVisibleItemMetadata Include="Constant">
      <MetadataName>Value</MetadataName>
    </CompilerVisibleItemMetadata>
  </ItemGroup>
  <ItemGroup>
    <Configuration Include="Testing" />
    <Configuration Include="Local" />
    <Configuration Include="Debug" />
    <Configuration Include="Staging" />
    <Configuration Include="Release" />
  </ItemGroup>
  <ItemGroup>
    <NuGetDeletePackageCommand Include="%(NuGetDeletePackageCommand.Command)">
      <Command>dotnet nuget delete CsprojPackager  -s %(NuGetSource.Identity) --non-interactive</Command>
    </NuGetDeletePackageCommand>
  </ItemGroup>
  <ItemGroup>
    <_OriginalPackageReference Include="Microsoft.Build" />
    <_OriginalPackageReference Include="Microsoft.Build.Framework" />
    <_OriginalPackageReference Include="Microsoft.Build.Utilities.Core" />
    <_OriginalPackageReference Include="System.Text.Json" />
    <_OriginalPackageReference Include="MSBuild.Usings" />
  </ItemGroup>
  <ItemGroup>
    <NetStandard20CompatibleFramework Include="netstandard2.0" />
    <NetStandard20CompatibleFramework Include="netcoreapp2.0" />
    <NetStandard20CompatibleFramework Include="netcoreapp2.1" />
    <NetStandard20CompatibleFramework Include="netcoreapp2.2" />
    <NetStandard20CompatibleFramework Include="net461" />
    <NetStandard20CompatibleFramework Include="net462" />
    <NetStandard20CompatibleFramework Include="net47" />
    <NetStandard20CompatibleFramework Include="net471" />
    <NetStandard20CompatibleFramework Include="net472" />
    <NetStandard20CompatibleFramework Include="net48" />
  </ItemGroup>
  <ItemGroup>
    <NetStandard21CompatibleFramework Include="netcoreapp3.0" />
    <NetStandard21CompatibleFramework Include="netcoreapp3.1" />
    <NetStandard21CompatibleFramework Include="netcoreapp5.0" />
    <NetStandard21CompatibleFramework Include="net6.0" />
  </ItemGroup>
  <ItemGroup>
    <Net60CompatibleFramework Include="net6.0" />
  </ItemGroup>
  <ItemGroup>
    <GlobalPackageReference Include="MinVer">
      <Version>[4.1.0,)</Version>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="NuGetizer">
      <Version>[0.9.0,)</Version>
      <IncludeAssets>build; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="Microsoft.SourceLink.GitHub">
      <Version>[1.1.1,)</Version>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="GitInfo">
      <Version>[2.2.0,)</Version>
      <IncludeAssets>build; analyzers; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="Microsoft.Build.Tasks.Git">
      <Version>[1.1.1,)</Version>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive; compile;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="ThisAssembly">
      <Version>[1.0.9,)</Version>
      <IncludeAssets>build; analyzers;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="FluentBuilder">
      <Version>[0.7.1,)</Version>
      <IncludeAssets>build; analyzers;</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="Microsoft.VisualStudio.SlnGen">
      <Version>[8.5.17,)</Version>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="Stef.Validation">
      <Version>0.1.0</Version>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
    <GlobalPackageReference Include="JustInTimeVersioning">
      <Version>0.0.1-Local</Version>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
  </ItemGroup>
  <ItemGroup>
    <EmbedInBinlog Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/project.assets.json" />
  </ItemGroup>
  <ItemGroup>
    <PreprocessorValue Include="rootnamespace">
      <Value>CsprojPackager</Value>
    </PreprocessorValue>
    <PreprocessorValue Include="assemblyname">
      <Value>CsprojPackager</Value>
    </PreprocessorValue>
    <PreprocessorValue Include="fullpath">
      <Value>/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager</Value>
    </PreprocessorValue>
    <PreprocessorValue Include="outputfilename">
      <Value>CsprojPackager.dll</Value>
    </PreprocessorValue>
    <PreprocessorValue Include="filename">
      <Value>CsprojPackager.csproj</Value>
    </PreprocessorValue>
  </ItemGroup>
  <ItemGroup>
    <GenerateRuntimeConfigurationFilesInputs Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/project.assets.json" />
    <GenerateRuntimeConfigurationFilesInputs Include="/Users/david/GitHub/justinwritescode/src/MSBuild.Sdks/src/CsprojPackager/obj/net6.0/CsprojPackager.assets.cache" />
  </ItemGroup>
  <ItemGroup>
    <RuntimeHostConfigurationOption Include="System.GC.Server">
      <Value>true</Value>
    </RuntimeHostConfigurationOption>
    <RuntimeHostConfigurationOption Include="System.Reflection.Metadata.MetadataUpdater.IsSupported">
      <Value>false</Value>
      <Trim>true</Trim>
    </RuntimeHostConfigurationOption>
  </ItemGroup>
  <ItemGroup>
    <ClsidMap Include="obj/net6.0/CsprojPackager.clsidmap" />
  </ItemGroup>
  <ItemGroup>
    <RegFreeComManifest Include="obj/net6.0/CsprojPackager.X.manifest" />
  </ItemGroup>
  <ItemGroup>
    <AdditionalTargetFrameworkInfoProperty Include="SelfContained" />
    <AdditionalTargetFrameworkInfoProperty Include="_IsExecutable" />
    <AdditionalTargetFrameworkInfoProperty Include="ShouldBeValidatedAsExecutableReference" />
  </ItemGroup>
  <ItemGroup>
    <PackageConflictOverrides Include="NETStandard.Library">
      <OverriddenPackages>
        Microsoft.Win32.Primitives|4.3.0;
        System.AppContext|4.3.0;
        System.Collections|4.3.0;
        System.Collections.Concurrent|4.3.0;
        System.Collections.Immutable|1.4.0;
        System.Collections.NonGeneric|4.3.0;
        System.Collections.Specialized|4.3.0;
        System.ComponentModel|4.3.0;
        System.ComponentModel.EventBasedAsync|4.3.0;
        System.ComponentModel.Primitives|4.3.0;
        System.ComponentModel.TypeConverter|4.3.0;
        System.Console|4.3.0;
        System.Data.Common|4.3.0;
        System.Diagnostics.Contracts|4.3.0;
        System.Diagnostics.Debug|4.3.0;
        System.Diagnostics.FileVersionInfo|4.3.0;
        System.Diagnostics.Process|4.3.0;
        System.Diagnostics.StackTrace|4.3.0;
        System.Diagnostics.TextWriterTraceListener|4.3.0;
        System.Diagnostics.Tools|4.3.0;
        System.Diagnostics.TraceSource|4.3.0;
        System.Diagnostics.Tracing|4.3.0;
        System.Dynamic.Runtime|4.3.0;
        System.Globalization|4.3.0;
        System.Globalization.Calendars|4.3.0;
        System.Globalization.Extensions|4.3.0;
        System.IO|4.3.0;
        System.IO.Compression|4.3.0;
        System.IO.Compression.ZipFile|4.3.0;
        System.IO.FileSystem|4.3.0;
        System.IO.FileSystem.DriveInfo|4.3.0;
        System.IO.FileSystem.Primitives|4.3.0;
        System.IO.FileSystem.Watcher|4.3.0;
        System.IO.IsolatedStorage|4.3.0;
        System.IO.MemoryMappedFiles|4.3.0;
        System.IO.Pipes|4.3.0;
        System.IO.UnmanagedMemoryStream|4.3.0;
        System.Linq|4.3.0;
        System.Linq.Expressions|4.3.0;
        System.Linq.Queryable|4.3.0;
        System.Net.Http|4.3.0;
        System.Net.NameResolution|4.3.0;
        System.Net.Primitives|4.3.0;
        System.Net.Requests|4.3.0;
        System.Net.Security|4.3.0;
        System.Net.Sockets|4.3.0;
        System.Net.WebHeaderCollection|4.3.0;
        System.ObjectModel|4.3.0;
        System.Private.DataContractSerialization|4.3.0;
        System.Reflection|4.3.0;
        System.Reflection.Emit|4.3.0;
        System.Reflection.Emit.ILGeneration|4.3.0;
        System.Reflection.Emit.Lightweight|4.3.0;
        System.Reflection.Extensions|4.3.0;
        System.Reflection.Primitives|4.3.0;
        System.Reflection.TypeExtensions|4.3.0;
        System.Resources.ResourceManager|4.3.0;
        System.Runtime|4.3.0;
        System.Runtime.Extensions|4.3.0;
        System.Runtime.Handles|4.3.0;
        System.Runtime.InteropServices|4.3.0;
        System.Runtime.InteropServices.RuntimeInformation|4.3.0;
        System.Runtime.Loader|4.3.0;
        System.Runtime.Numerics|4.3.0;
        System.Runtime.Serialization.Formatters|4.3.0;
        System.Runtime.Serialization.Json|4.3.0;
        System.Runtime.Serialization.Primitives|4.3.0;
        System.Security.AccessControl|4.4.0;
        System.Security.Claims|4.3.0;
        System.Security.Cryptography.Algorithms|4.3.0;
        System.Security.Cryptography.Csp|4.3.0;
        System.Security.Cryptography.Encoding|4.3.0;
        System.Security.Cryptography.Primitives|4.3.0;
        System.Security.Cryptography.X509Certificates|4.3.0;
        System.Security.Cryptography.Xml|4.4.0;
        System.Security.Principal|4.3.0;
        System.Security.Principal.Windows|4.4.0;
        System.Text.Encoding|4.3.0;
        System.Text.Encoding.Extensions|4.3.0;
        System.Text.RegularExpressions|4.3.0;
        System.Threading|4.3.0;
        System.Threading.Overlapped|4.3.0;
        System.Threading.Tasks|4.3.0;
        System.Threading.Tasks.Extensions|4.3.0;
        System.Threading.Tasks.Parallel|4.3.0;
        System.Threading.Thread|4.3.0;
        System.Threading.ThreadPool|4.3.0;
        System.Threading.Timer|4.3.0;
        System.ValueTuple|4.3.0;
        System.Xml.ReaderWriter|4.3.0;
        System.Xml.XDocument|4.3.0;
        System.Xml.XmlDocument|4.3.0;
        System.Xml.XmlSerializer|4.3.0;
        System.Xml.XPath|4.3.0;
        System.Xml.XPath.XDocument|4.3.0;
      </OverriddenPackages>
    </PackageConflictOverrides>
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../analyzers/Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll">
      <IsImplicitlyDefined>true</IsImplicitlyDefined>
    </Analyzer>
    <Analyzer Include="/usr/local/share/dotnet/sdk/6.0.402/Sdks/Microsoft.NET.Sdk/targets/../analyzers/Microsoft.CodeAnalysis.NetAnalyzers.dll">
      <IsImplicitlyDefined>true</IsImplicitlyDefined>
    </Analyzer>
  </ItemGroup>
  <Target Name="NoWarn">
    <Telemetry EventData="NoWarn=$(NoWarn)" EventName="NoWarn" />
  </Target>
  <Target Name="_GetPackFolders" Returns="@(PackFolderKind)" />
  <Target Name="AllProjectOutputGroups" DependsOnTargets="&#xD;&#xA;            BuiltProjectOutputGroup;&#xD;&#xA;            DebugSymbolsProjectOutputGroup;&#xD;&#xA;            DocumentationProjectOutputGroup;&#xD;&#xA;            SatelliteDllsProjectOutputGroup;&#xD;&#xA;            SourceFilesProjectOutputGroup;&#xD;&#xA;            ContentFilesProjectOutputGroup;&#xD;&#xA;            SGenFilesOutputGroup" />
  <Target Name="RunResolvePackageDependencies" Condition=" '$(DesignTimeBuild)' != 'true' Or Exists('$(ProjectAssetsFile)')">
    <CheckForTargetInAssetsFile Condition=" '$(DesignTimeBuild)' != 'true'" RuntimeIdentifier="$(RuntimeIdentifier)" TargetFramework="$(TargetFramework)" AssetsFilePath="$(ProjectAssetsFile)" />
    <ResolvePackageDependencies ContinueOnError="ErrorAndContinue" ProjectPath="$(MSBuildProjectFullPath)" TargetFramework="$(TargetFramework)" EmitLegacyAssetsFileItems="$(EmitLegacyAssetsFileItems)" ProjectAssetsFile="$(ProjectAssetsFile)" ProjectLanguage="$(Language)">
      <Output TaskParameter="PackageDefinitions" ItemName="PackageDefinitions" />
      <Output TaskParameter="PackageDependencies" ItemName="PackageDependencies" />
      <Output TaskParameter="TargetDefinitions" ItemName="TargetDefinitions" />
      <Output TaskParameter="FileDefinitions" ItemName="FileDefinitions" />
      <Output TaskParameter="FileDependencies" ItemName="FileDependencies" />
    </ResolvePackageDependencies>
  </Target>
  <Target Name="InitializeSourceControlInformation" />
  <Target Name="PackageCsproj">
    <CsprojPackager.Packager ProjectFile="$(MSBuildProjectFullPath)" />
  </Target>
  <Target Name="_CheckForUnsupportedTargetFramework" Condition="'$(_UnsupportedTargetFrameworkError)' == 'true'">
    <NETSdkError Condition="!$(TargetFramework.Contains(';'))" ResourceName="CannotInferTargetFrameworkIdentifierAndVersion" FormatArguments="$([MSBuild]::Escape('$(TargetFramework)'))" />
    <NETSdkError Condition="$(TargetFramework.Contains(';'))" ResourceName="TargetFrameworkWithSemicolon" FormatArguments="$([MSBuild]::Escape('$(TargetFramework)'))" />
  </Target>
  <Target Name="_CheckForUnsupportedTargetPlatformIdentifier" Condition="'$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == '')">
    <NETSdkError Condition="'$(TargetPlatformSupported)' != 'true'" ResourceName="UnsupportedTargetPlatformIdentifier" FormatArguments="$(TargetPlatformIdentifier)" />
  </Target>
  <Target Name="_CollectTargetFrameworkForTelemetry">
    <AllowEmptyTelemetry EventData="TargetFrameworkVersion=$([MSBuild]::Escape('$(TargetFrameworkMoniker)'));RuntimeIdentifier=$(RuntimeIdentifier);SelfContained=$(SelfContained);UseApphost=$(UseApphost);OutputType=$(OutputType)" EventName="targetframeworkeval" />
  </Target>
  <Target Name="_CheckForUnsupportedNETCoreVersion" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(NETCoreAppMaximumVersion)' != ''">
    <NETSdkError Condition="'$(_TargetFrameworkVersionWithoutV)' &gt; '$(NETCoreAppMaximumVersion)'" ResourceName="UnsupportedTargetFrameworkVersion" FormatArguments=".NET;$(_TargetFrameworkVersionWithoutV);$(NETCoreAppMaximumVersion)" />
  </Target>
  <Target Name="_CheckForUnsupportedCppNETCoreVersion">
    <NETSdkError Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' &lt; '3.1' and ('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true')" ResourceName="CppRequiresTFMVersion31" />
  </Target>
  <Target Name="_CheckForUnsupportedNETStandardVersion" Condition="'$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != ''">
    <NETSdkError Condition="'$(_TargetFrameworkVersionWithoutV)' &gt; '$(NETStandardMaximumVersion)'" ResourceName="UnsupportedTargetFrameworkVersion" FormatArguments=".NET Standard;$(_TargetFrameworkVersionWithoutV);$(NETStandardMaximumVersion)" />
  </Target>
  <Target Name="_CheckForUnsupportedTargetFrameworkAndFeatureCombination" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <NETSdkError Condition="'$(UsingNETSdkDefaults)' != 'true'" ResourceName="NETFrameworkWithoutUsingNETSdkDefaults" />
  </Target>
  <Target Name="_CheckForSupportedOSPlatformVersionHigherThanTargetPlatformVersion" Condition="'$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0))">
    <NETSdkError Condition="'$(SupportedOSPlatformVersion)' != '' and $(TargetPlatformVersion) != '' and $([MSBuild]::VersionGreaterThan($(SupportedOSPlatformVersion), $(TargetPlatformVersion)))" ResourceName="CannotHaveSupportedOSPlatformVersionHigherThanTargetPlatformVersion" FormatArguments="$(SupportedOSPlatformVersion);$(TargetPlatformVersion)" />
  </Target>
  <Target Name="_NormalizeTargetPlatformVersion" Condition="'$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true')" />
  <Target Name="_CheckForInvalidTargetPlatformVersion" Condition="'$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true')" DependsOnTargets="_NormalizeTargetPlatformVersion">
    <NetSdkError Condition="'$(TargetPlatformVersionSupported)' != 'true'" ResourceName="InvalidTargetPlatformVersion" FormatArguments="$(TargetPlatformVersion);$(TargetPlatformIdentifier);$(_ValidTargetPlatformVersions)" />
  </Target>
  <Target Name="_CheckBrowserWorkloadNeededButNotAvailable" Condition="'$(RuntimeIdentifier)' == 'browser-wasm' and '$(BrowserWorkloadDisabled)' != 'true' and '$(WasmNativeWorkload)' != 'true'">
    <Warning Condition="@(NativeFileReference-&gt;Count()) &gt; 0" Text="%40(NativeFileReference) is not empty, but the native references won't be linked in, because neither %24(WasmBuildNative), nor %24(RunAOTCompilation) are 'true'. NativeFileReference=@(NativeFileReference)" />
  </Target>
  <Target Name="_ErrorDisabledWorkload" Condition="'$(BrowserWorkloadDisabled)' == 'true'">
    <Error Condition="'$(RunAOTCompilation)' == 'true'" Text="WebAssembly workloads, required for AOT, are only supported for projects targeting net6.0+ . Set %24(RunAOTCompilation)=false to disable it." />
    <Error Condition="@(NativeFileReference-&gt;Count()) &gt; 0" Text="WebAssembly workloads, required for linking native files (from %40(NativeFileReference)), are only supported for projects targeting net6.0+ ." />
  </Target>
  <Target Name="GetSuggestedWorkloads" Condition="@(MissingWorkloadPack) != ''" Returns="@(SuggestedWorkload)">
    <ShowMissingWorkloads NETCoreSdkVersion="$(NETCoreSdkVersion)" GenerateErrorsForMissingWorkloads="false" MissingWorkloadPacks="@(MissingWorkloadPack)" NetCoreRoot="$(NetCoreRoot)">
      <Output TaskParameter="SuggestedWorkloads" ItemName="SuggestedWorkload" />
    </ShowMissingWorkloads>
  </Target>
  <Target Name="_CheckForMissingWorkload" Condition="'@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true'">
    <ShowMissingWorkloads NETCoreSdkVersion="$(NETCoreSdkVersion)" GenerateErrorsForMissingWorkloads="true" MissingWorkloadPacks="@(MissingWorkloadPack)" NetCoreRoot="$(NetCoreRoot)" />
  </Target>
  <Target Name="_GetRequiredWorkloads" DependsOnTargets="GetSuggestedWorkloads;PrepareProjectReferences" Returns="@(_ResolvedSuggestedWorkload)">
    <MSBuild Condition="'%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != ''" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences);TargetFramework;TargetFrameworks" Projects="@(_MSBuildProjectReferenceExistent)" Targets="_GetRequiredWorkloads" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="SuggestedWorkloadFromReference" />
    </MSBuild>
  </Target>
  <Target Name="_CheckForUnsupportedAppHostUsage" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(HasRuntimeOutput)' == 'true'">
    <NETSdkError Condition="'$(SelfContained)' == 'true' and '$(RuntimeIdentifier)' == ''" ResourceName="CannotHaveSelfContainedWithoutRuntimeIdentifier" />
    <NETSdkError Condition="'$(SelfContained)' == 'true' and '$(UseAppHost)' != 'true' and '$(_RuntimeIdentifierUsesAppHost)' == 'true'" ResourceName="CannotUseSelfContainedWithoutAppHost" />
    <NETSdkError Condition="'$(SelfContained)' != 'true' and '$(UseAppHost)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' &lt; '2.1'" ResourceName="FrameworkDependentAppHostRequiresVersion21" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' &lt; '3.0'" ResourceName="PublishSingleFileRequiresVersion30" />
    <NETSdkWarning Condition="'$(PublishReadyToRun)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' &lt; '3.0'" ResourceName="PublishReadyToRunRequiresVersion30" />
    <NETSdkWarning Condition="'$(PublishTrimmed)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' &lt; '3.0'" ResourceName="PublishTrimmedRequiresVersion30" />
    <NetSdkError Condition="('$(UseWindowsForms)' == 'true') and ('$(PublishTrimmed)' == 'true') and ('$(_SuppressWinFormsTrimError)' != 'true')" ResourceName="TrimmingWindowsFormsIsNotSupported" />
    <NetSdkError Condition="('$(UseWpf)' == 'true') and ('$(PublishTrimmed)' == 'true') and ('$(_SuppressWpfTrimError)' != 'true')" ResourceName="TrimmingWpfIsNotSupported" />
  </Target>
  <Target Name="_CheckForUnsupportedHostingUsage" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <NETSdkWarning Condition="'$(SelfContained)' == 'true' and '$(EnableComHosting)' == 'true'" ResourceName="NoSupportComSelfContained" />
  </Target>
  <Target Name="_CheckForMismatchingPlatform" Condition="'$(RuntimeIdentifier)' != '' and '$(PlatformTarget)' != ''">
    <NETSdkError Condition="'$(PlatformTarget)' != 'AnyCPU' and !$(RuntimeIdentifier.ToUpperInvariant().Contains($(PlatformTarget.ToUpperInvariant())))" ResourceName="CannotHaveRuntimeIdentifierPlatformMismatchPlatformTarget" FormatArguments="$(RuntimeIdentifier);$(PlatformTarget)" />
  </Target>
  <Target Name="_CheckForLanguageAndFeatureCombinationSupport">
    <NETSdkError Condition="('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(OutputType) != 'library' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp'" ResourceName="NoSupportCppNonDynamicLibraryDotnetCore" />
    <NETSdkError Condition="('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(EnableComHosting) == 'true'" ResourceName="NoSupportCppEnableComHosting" />
    <NETSdkError Condition="('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(SelfContained) == 'true'" ResourceName="NoSupportCppSelfContained" />
  </Target>
  <Target Name="_CheckForNETCoreSdkIsPreview" Condition=" '$(_NETCoreSdkIsPreview)' == 'true' AND '$(SuppressNETCoreSdkPreviewMessage)' != 'true' ">
    <ShowPreviewMessage />
  </Target>
  <Target Name="AdjustDefaultPlatformTargetForNetFrameworkExeWithNoNativeCopyLocalItems" Condition="'$(_UsingDefaultPlatformTarget)' == 'true' and&#xD;&#xA;                     '$(_UsingDefaultRuntimeIdentifier)' == 'true'">
    <GetDefaultPlatformTargetForNetFramework NativeCopyLocalItems="@(NativeCopyLocalItems)" PackageDependencies="@(PackageDependencies)">
      <Output TaskParameter="DefaultPlatformTarget" ItemName="PlatformTarget" />
    </GetDefaultPlatformTargetForNetFramework>
  </Target>
  <Target Name="_CheckForEolTargetFrameworks" Condition="'@(_EolNetCoreTargetFrameworkVersions-&gt;AnyHaveMetadataValue('Identity', '$(_TargetFrameworkVersionWithoutV)'))' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(CheckEolTargetFramework)' == 'true'">
    <NETSdkWarning ResourceName="TargetFrameworkIsEol" FormatArguments="$(TargetFramework.ToLowerInvariant());https://aka.ms/dotnet-core-support" />
  </Target>
  <Target Name="GenerateTargetPlatformDefineConstants" Condition=" '$(DisableImplicitFrameworkDefines)' != 'true' and '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) " />
  <Target Name="GenerateNETCompatibleDefineConstants" Condition=" '$(DisableImplicitFrameworkDefines)' != 'true' and ('$(TargetFrameworkIdentifier)' == '.NETCoreApp' or '$(TargetFrameworkIdentifier)' == '.NETFramework' or '$(TargetFrameworkIdentifier)' == '.NETStandard')" />
  <Target Name="GeneratePlatformCompatibleDefineConstants" Condition=" '$(DisableImplicitFrameworkDefines)' != 'true' and '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) " />
  <Target Name="AddImplicitDefineConstants" Condition=" '$(DisableImplicitFrameworkDefines)' != 'true' " DependsOnTargets="GenerateTargetPlatformDefineConstants;GenerateNETCompatibleDefineConstants;GeneratePlatformCompatibleDefineConstants" />
  <Target Name="CreateManifestResourceNames" Condition="'@(EmbeddedResource)' != ''" DependsOnTargets="$(CreateManifestResourceNamesDependsOn)">
    <CreateCSharpManifestResourceName Condition="'%(EmbeddedResource.ManifestResourceName)' == '' and ('%(EmbeddedResource.WithCulture)' == 'false' or '%(EmbeddedResource.Type)' == 'Resx')" ResourceFiles="@(EmbeddedResource)" RootNamespace="$(RootNamespace)" UseDependentUponConvention="$(EmbeddedResourceUseDependentUponConvention)">
      <Output TaskParameter="ResourceFilesWithManifestResourceNames" ItemName="_Temporary" />
    </CreateCSharpManifestResourceName>
    <CreateCSharpManifestResourceName Condition="'%(EmbeddedResource.ManifestResourceName)' == '' and '%(EmbeddedResource.WithCulture)' == 'true' and '%(EmbeddedResource.Type)' == 'Non-Resx'" PrependCultureAsDirectory="false" ResourceFiles="@(EmbeddedResource)" RootNamespace="$(RootNamespace)" UseDependentUponConvention="$(EmbeddedResourceUseDependentUponConvention)">
      <Output TaskParameter="ResourceFilesWithManifestResourceNames" ItemName="_Temporary" />
    </CreateCSharpManifestResourceName>
  </Target>
  <Target Name="ResolveCodeAnalysisRuleSet" Condition="'$(CodeAnalysisRuleSet)' != ''">
    <ResolveCodeAnalysisRuleSet CodeAnalysisRuleSetDirectories="$(CodeAnalysisRuleSetDirectories)" MSBuildProjectDirectory="$(MSBuildProjectDirectory)" CodeAnalysisRuleSet="$(CodeAnalysisRuleSet)">
      <Output TaskParameter="ResolvedCodeAnalysisRuleSet" ItemName="ResolvedCodeAnalysisRuleSet" />
    </ResolveCodeAnalysisRuleSet>
  </Target>
  <Target Name="XamlPreCompile" Condition="'@(Page)' != '' Or '@(ApplicationDefinition)' != ''" DependsOnTargets="$(CoreCompileDependsOn);GenerateMSBuildEditorConfigFile" Inputs="$(MSBuildAllProjects);&#xD;&#xA;                @(Compile);&#xD;&#xA;                @(_CoreCompileResourceInputs);&#xD;&#xA;                $(ApplicationIcon);&#xD;&#xA;                $(AssemblyOriginatorKeyFile);&#xD;&#xA;                @(ReferencePath);&#xD;&#xA;                @(CompiledLicenseFile);&#xD;&#xA;                @(LinkResource);&#xD;&#xA;                @(EmbeddedDocumentation);&#xD;&#xA;                $(Win32Resource);&#xD;&#xA;                $(Win32Manifest);&#xD;&#xA;                @(CustomAdditionalCompileInputs);&#xD;&#xA;                @(Page);&#xD;&#xA;                @(ApplicationDefinition);&#xD;&#xA;                $(ResolvedCodeAnalysisRuleSet)" Outputs="@(DocFileItem);&#xD;&#xA;                 @(XamlIntermediateAssembly);&#xD;&#xA;                 @(_DebugSymbolsIntermediatePath);&#xD;&#xA;                 $(NonExistentFile);&#xD;&#xA;                 @(CustomAdditionalCompileOutputs)" Returns="">
    <Csc Condition=" '%(_CoreCompileResourceInputs.WithCulture)' != 'true' " Nullable="$(Nullable)" MainEntryPoint="$(StartupObject)" UseHostCompilerIfAvailable="$(UseHostCompilerIfAvailable)" Resources="@(_CoreCompileResourceInputs);@(CompiledLicenseFile)" SkipAnalyzers="true" DebugType="$(DebugType)" ApplicationConfiguration="$(AppConfigForCompiler)" References="@(ReferencePath)" DocumentationFile="@(DocFileItem)" ErrorReport="$(ErrorReport)" LangVersion="$(LangVersion)" Sources="@(Compile)" Utf8Output="$(Utf8Output)" UseSharedCompilation="$(UseSharedCompilation)" AddModules="@(AddModules)" HighEntropyVA="$(HighEntropyVA)" Prefer32Bit="$(Prefer32Bit)" PreferredUILang="$(PreferredUILang)" PdbFile="$(PdbFile)" AnalyzerConfigFiles="@(EditorConfigFiles)" ReportAnalyzer="$(ReportAnalyzer)" CodePage="$(CodePage)" Win32Manifest="$(Win32Manifest)" DelaySign="$(DelaySign)" ErrorLog="$(ErrorLog)" TreatWarningsAsErrors="$(TreatWarningsAsErrors)" WarningsAsErrors="$(WarningsAsErrors)" AdditionalFiles="@(AdditionalFiles)" ResponseFiles="$(CompilerResponseFile)" ToolExe="$(CscToolExe)" FileAlignment="$(FileAlignment)" ModuleAssemblyName="$(ModuleAssemblyName)" Platform="$(PlatformTarget)" CheckForOverflowUnderflow="$(CheckForOverflowUnderflow)" LinkResources="@(LinkResource)" Analyzers="@(Analyzer)" AdditionalLibPaths="$(AdditionalLibPaths)" GenerateFullPaths="$(GenerateFullPaths)" ToolPath="$(CscToolPath)" AllowUnsafeBlocks="$(AllowUnsafeBlocks)" KeyFile="$(KeyOriginatorFile)" NoStandardLib="$(NoCompilerStandardLib)" ErrorEndLocation="$(ErrorEndLocation)" EnvironmentVariables="$(CscEnvironment)" OutputAssembly="@(XamlIntermediateAssembly)" EmitDebugInformation="$(DebugSymbols)" WarningLevel="$(WarningLevel)" VsSessionGuid="$(VsSessionGuid)" NoConfig="true" TargetType="$(OutputType)" WarningsNotAsErrors="$(WarningsNotAsErrors)" NoLogo="$(NoLogo)" Optimize="$(Optimize)" DefineConstants="$(DefineConstants)" Win32Icon="$(ApplicationIcon)" DisabledWarnings="$(NoWarn)" BaseAddress="$(BaseAddress)" NoWin32Manifest="$(NoWin32Manifest)" KeyContainer="$(KeyContainerName)" Win32Resource="$(Win32Resource)" CodeAnalysisRuleSet="$(ResolvedCodeAnalysisRuleSet)" SubsystemVersion="$(SubsystemVersion)" />
  </Target>
  <Target Name="ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies" Condition="'@(ReferencePathWithRefAssemblies)' == ''" />
  <Target Name="_BeforeVBCSCoreCompile" DependsOnTargets="ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies" />
  <Target Name="_ComputeSkipAnalyzers">
    <ShowMessageForImplicitlySkipAnalyzers Condition="'$(_ImplicitlySkipAnalyzers)' == 'true'" />
  </Target>
  <Target Name="_TouchLastBuildWithSkipAnalyzers" Condition="'$(_SkipAnalyzers)' == 'true'">
    <Touch Files="$(_LastBuildWithSkipAnalyzers)" AlwaysCreate="true" />
  </Target>
  <Target Name="GenerateMSBuildEditorConfigFile" DependsOnTargets="PrepareForBuild;GenerateMSBuildEditorConfigFileShouldRun;GenerateMSBuildEditorConfigFileCore" />
  <Target Name="GenerateMSBuildEditorConfigFileShouldRun" />
  <Target Name="GenerateMSBuildEditorConfigFileCore" Condition="'$(_GeneratedEditorConfigShouldRun)' == 'true'" Outputs="$(GeneratedMSBuildEditorConfigFile)">
    <GenerateMSBuildEditorConfig FileName="$(GeneratedMSBuildEditorConfigFile)" MetadataItems="@(_GeneratedEditorConfigMetadata)" PropertyItems="@(_GeneratedEditorConfigProperty)" />
  </Target>
  <Target Name="InitializeSourceRootMappedPaths" DependsOnTargets="_InitializeSourceRootMappedPathsFromSourceControl" Returns="@(SourceRoot)">
    <Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots Deterministic="$(DeterministicSourcePaths)" SourceRoots="@(SourceRoot)">
      <Output TaskParameter="MappedSourceRoots" ItemName="_MappedSourceRoot" />
    </Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots>
  </Target>
  <Target Name="_InitializeSourceRootMappedPathsFromSourceControl" Condition="'$(SourceControlInformationFeatureSupported)' == 'true'" DependsOnTargets="InitializeSourceControlInformation" />
  <Target Name="_SetPathMapFromSourceRoots" Condition="'$(DeterministicSourcePaths)' == 'true'" DependsOnTargets="InitializeSourceRootMappedPaths" />
  <Target Name="CopyAdditionalFiles" />
  <Target Name="CreateCompilerGeneratedFilesOutputPath" Condition="'$(EmitCompilerGeneratedFiles)' == 'true' and !('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true')">
    <Warning Condition="'$(CompilerGeneratedFilesOutputPath)' == ''" Text="EmitCompilerGeneratedFiles was true, but no CompilerGeneratedFilesOutputPath was provided. CompilerGeneratedFilesOutputPath must be set in order to emit generated files." />
    <MakeDir Condition="'$(CompilerGeneratedFilesOutputPath)' != ''" Directories="$(CompilerGeneratedFilesOutputPath)" />
  </Target>
  <Target Name="CoreCompile" DependsOnTargets="$(CoreCompileDependsOn);_BeforeVBCSCoreCompile" Inputs="$(MSBuildAllProjects);&#xD;&#xA;                  @(Compile);&#xD;&#xA;                  @(_CoreCompileResourceInputs);&#xD;&#xA;                  $(ApplicationIcon);&#xD;&#xA;                  $(KeyOriginatorFile);&#xD;&#xA;                  @(ReferencePathWithRefAssemblies);&#xD;&#xA;                  @(CompiledLicenseFile);&#xD;&#xA;                  @(LinkResource);&#xD;&#xA;                  @(EmbeddedDocumentation);&#xD;&#xA;                  $(Win32Resource);&#xD;&#xA;                  $(Win32Manifest);&#xD;&#xA;                  @(CustomAdditionalCompileInputs);&#xD;&#xA;                  $(ResolvedCodeAnalysisRuleSet);&#xD;&#xA;                  @(AdditionalFiles);&#xD;&#xA;                  @(EmbeddedFiles);&#xD;&#xA;                  @(EditorConfigFiles)" Outputs="@(DocFileItem);&#xD;&#xA;                   @(IntermediateAssembly);&#xD;&#xA;                   @(IntermediateRefAssembly);&#xD;&#xA;                   @(_DebugSymbolsIntermediatePath);&#xD;&#xA;                   $(NonExistentFile);&#xD;&#xA;                   @(CustomAdditionalCompileOutputs)" Returns="@(CscCommandLineArgs)">
    <Csc Condition="'%(_CoreCompileResourceInputs.WithCulture)' != 'true'" Nullable="$(Nullable)" MainEntryPoint="$(StartupObject)" UseHostCompilerIfAvailable="$(UseHostCompilerIfAvailable)" Resources="@(_CoreCompileResourceInputs);@(CompiledLicenseFile)" SkipAnalyzers="$(_SkipAnalyzers)" SkipCompilerExecution="$(SkipCompilerExecution)" DebugType="$(DebugType)" PathMap="$(PathMap)" ApplicationConfiguration="$(AppConfigForCompiler)" References="@(ReferencePathWithRefAssemblies)" Deterministic="$(Deterministic)" DocumentationFile="@(DocFileItem)" EmbeddedFiles="@(EmbeddedFiles)" DisableSdkPath="$(DisableSdkPath)" ChecksumAlgorithm="$(ChecksumAlgorithm)" ErrorReport="$(ErrorReport)" LangVersion="$(LangVersion)" Sources="@(Compile)" Utf8Output="$(Utf8Output)" UseSharedCompilation="$(UseSharedCompilation)" Features="$(Features)" RefOnly="$(ProduceOnlyReferenceAssembly)" AddModules="@(AddModules)" ProvideCommandLineArgs="$(ProvideCommandLineArgs)" HighEntropyVA="$(HighEntropyVA)" Prefer32Bit="$(Prefer32Bit)" PreferredUILang="$(PreferredUILang)" PdbFile="$(PdbFile)" AnalyzerConfigFiles="@(EditorConfigFiles)" ReportAnalyzer="$(ReportAnalyzer)" RuntimeMetadataVersion="$(RuntimeMetadataVersion)" SharedCompilationId="$(SharedCompilationId)" CodePage="$(CodePage)" Win32Manifest="$(Win32Manifest)" DelaySign="$(DelaySign)" SourceLink="$(SourceLink)" ErrorLog="$(ErrorLog)" TreatWarningsAsErrors="$(TreatWarningsAsErrors)" WarningsAsErrors="$(WarningsAsErrors)" AdditionalFiles="@(AdditionalFiles)" ResponseFiles="$(CompilerResponseFile)" PublicSign="$(PublicSign)" ToolExe="$(CscToolExe)" FileAlignment="$(FileAlignment)" ModuleAssemblyName="$(ModuleAssemblyName)" Platform="$(PlatformTarget)" CheckForOverflowUnderflow="$(CheckForOverflowUnderflow)" OutputRefAssembly="@(IntermediateRefAssembly)" LinkResources="@(LinkResource)" Analyzers="@(Analyzer)" AdditionalLibPaths="$(AdditionalLibPaths)" Instrument="$(Instrument)" GenerateFullPaths="$(GenerateFullPaths)" ToolPath="$(CscToolPath)" AllowUnsafeBlocks="$(AllowUnsafeBlocks)" KeyFile="$(KeyOriginatorFile)" NoStandardLib="$(NoCompilerStandardLib)" ErrorEndLocation="$(ErrorEndLocation)" EnvironmentVariables="$(CscEnvironment)" OutputAssembly="@(IntermediateAssembly)" EmitDebugInformation="$(DebugSymbols)" WarningLevel="$(WarningLevel)" VsSessionGuid="$(VsSessionGuid)" NoConfig="true" TargetType="$(OutputType)" WarningsNotAsErrors="$(WarningsNotAsErrors)" NoLogo="$(NoLogo)" Optimize="$(Optimize)" EmbedAllSources="$(EmbedAllSources)" DefineConstants="$(DefineConstants)" Win32Icon="$(ApplicationIcon)" DisabledWarnings="$(NoWarn)" GeneratedFilesOutputPath="$(CompilerGeneratedFilesOutputPath)" BaseAddress="$(BaseAddress)" NoWin32Manifest="$(NoWin32Manifest)" KeyContainer="$(KeyContainerName)" Win32Resource="$(Win32Resource)" CodeAnalysisRuleSet="$(ResolvedCodeAnalysisRuleSet)" SubsystemVersion="$(SubsystemVersion)">
      <Output TaskParameter="CommandLineArgs" ItemName="CscCommandLineArgs" />
    </Csc>
    <CallTarget Condition="'$(TargetsTriggeredByCompilation)' != ''" Targets="$(TargetsTriggeredByCompilation)" />
  </Target>
  <Target Name="_AddOutputPathToGlobalPropertiesToRemove" />
  <Target Name="_CheckForInvalidConfigurationAndPlatform">
    <Error Condition=" '$(_InvalidConfigurationError)' == 'true' " Text="$(_InvalidConfigurationMessageText)" />
    <Warning Condition=" '$(_InvalidConfigurationWarning)' == 'true' " Text="$(_InvalidConfigurationMessageText)" />
    <Message Condition="'$(DesignTimeBuild)' != 'true'" Importance="Low" Text="Configuration=$(Configuration)" />
    <Message Condition="'$(DesignTimeBuild)' != 'true'" Importance="Low" Text="Platform=$(Platform)" />
    <Error Condition="'$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)')" Text="The OutDir property must end with a trailing slash." />
    <Error Condition="'$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)')" Text="The IntermediateOutputPath must end with a trailing slash." />
    <Error Condition="'$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)')" Text="The BaseIntermediateOutputPath must end with a trailing slash." />
    <Error Condition=" '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' " Code="MSB3540" Text="The value of the property &quot;MSBuildProjectExtensionsPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650" />
    <Warning Condition=" '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' " Code="MSB3539" Text="The value of the property &quot;BaseIntermediateOutputPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the &quot;MSBuildProjectExtensionsPath&quot; instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650" />
  </Target>
  <Target Name="Build" Condition=" '$(_InvalidConfigurationWarning)' != 'true' " DependsOnTargets="$(BuildDependsOn)" Returns="@(TargetPathWithTargetPlatformMoniker)" />
  <Target Name="BeforeBuild" />
  <Target Name="AfterBuild" />
  <Target Name="CoreBuild" DependsOnTargets="$(CoreBuildDependsOn)" />
  <Target Name="Rebuild" Condition=" '$(_InvalidConfigurationWarning)' != 'true' " DependsOnTargets="$(RebuildDependsOn)" Returns="$(TargetPath)" />
  <Target Name="BeforeRebuild" />
  <Target Name="AfterRebuild" />
  <Target Name="BuildGenerateSources" DependsOnTargets="BuildGenerateSourcesTraverse;$(BuildGenerateSourcesAction)" />
  <Target Name="BuildGenerateSourcesTraverse" DependsOnTargets="PrepareProjectReferences">
    <MSBuild Condition="'$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != '' and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true'" ContinueOnError="!$(BuildingProject)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework);" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="BuildGenerateSources" BuildInParallel="$(BuildInParallel)" />
  </Target>
  <Target Name="BuildCompile" DependsOnTargets="BuildCompileTraverse;$(BuildCompileAction)" />
  <Target Name="BuildCompileTraverse" DependsOnTargets="PrepareProjectReferences">
    <MSBuild Condition="'$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''  and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true'" ContinueOnError="!$(BuildingProject)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="BuildCompile" BuildInParallel="$(BuildInParallel)" />
  </Target>
  <Target Name="BuildLink" DependsOnTargets="BuildLinkTraverse;$(BuildLinkAction)" />
  <Target Name="BuildLinkTraverse" DependsOnTargets="PrepareProjectReferences">
    <MSBuild Condition="'$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''  and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true'" ContinueOnError="!$(BuildingProject)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="BuildLink" BuildInParallel="$(BuildInParallel)" />
  </Target>
  <Target Name="CopyRunEnvironmentFiles" DependsOnTargets="PrepareForBuild;SetWin32ManifestProperties;_CopyAppConfigFile;_CleanRecordFileWrites" />
  <Target Name="Run">
    <Exec Command="$(RunCommand) $(RunArguments)" WorkingDirectory="$(RunWorkingDirectory)" />
  </Target>
  <Target Name="BuildOnlySettings" />
  <Target Name="PrepareForBuild" DependsOnTargets="$(PrepareForBuildDependsOn)">
    <FindAppConfigFile Condition="'$(AppConfig)'==''" PrimaryList="@(None)" SecondaryList="@(Content)" TargetPath="$(TargetFileName).config">
      <Output TaskParameter="AppConfigFile" ItemName="AppConfigWithTargetPath" />
      <Output TaskParameter="AppConfigFile" ItemName="AppConfig" />
    </FindAppConfigFile>
    <MakeDir ContinueOnError="True" Directories="$(OutDir);$(IntermediateOutputPath);@(DocFileItem->'%(RelativeDir)');@(CreateDirectory)" />
  </Target>
  <Target Name="GetFrameworkPaths" />
  <Target Name="GetReferenceAssemblyPaths" />
  <Target Name="GetTargetFrameworkMoniker" Returns="$(TargetFrameworkMoniker)" />
  <Target Name="GetTargetFrameworkMonikerDisplayName" DependsOnTargets="GetFrameworkPaths;GetReferenceAssemblyPaths" Returns="$(TargetFrameworkMonikerDisplayName)" />
  <Target Name="GetTargetFrameworkDirectories" DependsOnTargets="GetFrameworkPaths;GetReferenceAssemblyPaths" Returns="$(TargetFrameworkDirectory)" />
  <Target Name="AssignLinkMetadata" Condition=" '$(SynthesizeLinkMetadata)' == 'true' ">
    <AssignLinkMetadata Condition="'@(None)' != '' and '%(None.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)'" Items="@(None)">
      <Output TaskParameter="OutputItems" ItemName="_Temp" />
    </AssignLinkMetadata>
    <AssignLinkMetadata Condition="'@(Content)' != '' and '%(Content.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)'" Items="@(Content)">
      <Output TaskParameter="OutputItems" ItemName="_Temp" />
    </AssignLinkMetadata>
    <AssignLinkMetadata Condition="'@(Page)' != '' and '%(Page.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)'" Items="@(Page)">
      <Output TaskParameter="OutputItems" ItemName="_Temp" />
    </AssignLinkMetadata>
    <AssignLinkMetadata Condition="'@(ApplicationDefinition)' != '' and '%(ApplicationDefinition.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)'" Items="@(ApplicationDefinition)">
      <Output TaskParameter="OutputItems" ItemName="_Temp" />
    </AssignLinkMetadata>
    <AssignLinkMetadata Condition="'@(EmbeddedResource)' != '' and '%(EmbeddedResource.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)'" Items="@(EmbeddedResource)">
      <Output TaskParameter="OutputItems" ItemName="_Temp" />
    </AssignLinkMetadata>
  </Target>
  <Target Name="PreBuildEvent" Condition="'$(PreBuildEvent)'!=''" DependsOnTargets="$(PreBuildEventDependsOn)">
    <Exec Command="$(PreBuildEvent)" WorkingDirectory="$(OutDir)" />
  </Target>
  <Target Name="UnmanagedUnregistration" Condition="(('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or&#xD;&#xA;                    ('$(_AssemblyTimestampBeforeCompile)' == '')) and&#xD;&#xA;                   Exists('@(_UnmanagedRegistrationCache)')" DependsOnTargets="$(UnmanagedUnregistrationDependsOn)">
    <UnregisterAssembly MSBuildArchitecture="$(UnregisterAssemblyMSBuildArchitecture)" MSBuildRuntime="$(UnregisterAssemblyMSBuildRuntime)" AssemblyListFile="@(_UnmanagedRegistrationCache)" />
  </Target>
  <Target Name="GetTargetFrameworkVersion" Returns="$(TargetFrameworkVersion)" />
  <Target Name="ResolveReferences" DependsOnTargets="$(ResolveReferencesDependsOn)" Returns="@(ReferencePath)" />
  <Target Name="BeforeResolveReferences" />
  <Target Name="AfterResolveReferences" />
  <Target Name="AssignProjectConfiguration" Condition="'$(CurrentSolutionConfigurationContents)' != '' or '@(ProjectReference)'!=''">
    <AssignProjectConfiguration OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration="$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)" ShouldUnsetParentConfigurationAndPlatform="$(ShouldUnsetParentConfigurationAndPlatform)" CurrentProject="$(MSBuildProjectFullPath)" VcxToDefaultPlatformMapping="$(VcxToDefaultPlatformMapping)" AddSyntheticProjectReferencesForSolutionDependencies="$(AddSyntheticProjectReferencesForSolutionDependencies)" CurrentProjectConfiguration="$(Configuration)" ProjectReferences="@(ProjectReference)" ResolveConfigurationPlatformUsingMappings="false" CurrentProjectPlatform="$(Platform)" SolutionConfigurationContents="$(CurrentSolutionConfigurationContents)" OutputType="$(OutputType)" DefaultToVcxPlatformMapping="$(DefaultToVcxPlatformMapping)">
      <Output TaskParameter="AssignedProjects" ItemName="_ProjectReferenceWithConfiguration" />
      <Output TaskParameter="UnassignedProjects" ItemName="_ProjectReferenceWithConfiguration" />
      <Output TaskParameter="AssignedProjects" ItemName="ProjectReferenceWithConfiguration" />
      <Output TaskParameter="UnassignedProjects" ItemName="ProjectReferenceWithConfiguration" />
    </AssignProjectConfiguration>
  </Target>
  <Target Name="_SplitProjectReferencesByFileExistence">
    <ResolveNonMSBuildProjectOutput Condition="'$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!=''" PreresolvedProjectOutputs="$(VSIDEResolvedNonMSBuildProjectOutputs)" ProjectReferences="@(ProjectReferenceWithConfiguration)">
      <Output TaskParameter="ResolvedOutputPaths" ItemName="_ResolvedProjectReferencePaths" />
      <Output TaskParameter="UnresolvedProjectReferences" ItemName="_MSBuildProjectReference" />
    </ResolveNonMSBuildProjectOutput>
  </Target>
  <Target Name="_GetProjectReferencePlatformProperties" Condition="'$(EnableDynamicPlatformResolution)' == 'true'&#xD;&#xA;                     and '$(BuildingInsideVisualStudio)' != 'true'&#xD;&#xA;                     and '@(_MSBuildProjectReferenceExistent)' != ''">
    <GetCompatiblePlatform Condition="'@(_ProjectReferencePlatformPossibilities)' != ''" AnnotatedProjects="@(_ProjectReferencePlatformPossibilities)" CurrentProjectPlatform="$(Platform)" PlatformLookupTable="$(PlatformLookupTable)">
      <Output TaskParameter="AssignedProjectsWithPlatform" ItemName="_ProjectsWithPlatformAssignment" />
    </GetCompatiblePlatform>
  </Target>
  <Target Name="_GetProjectReferenceTargetFrameworkProperties" DependsOnTargets="_AddOutputPathToGlobalPropertiesToRemove">
    <MSBuild Condition="'%(_MSBuildProjectReferenceExistent.SkipGetTargetFrameworkProperties)' != 'true'" ContinueOnError="!$(BuildingProject)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove);TargetFramework;RuntimeIdentifier$(_GlobalPropertiesToRemoveFromProjectReferences)" SkipNonexistentTargets="true" Projects="@(_MSBuildProjectReferenceExistent)" Targets="GetTargetFrameworks" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_ProjectReferenceTargetFrameworkPossibilities" />
    </MSBuild>
    <GetReferenceNearestTargetFrameworkTask Condition="'@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''&#xD;&#xA;                                                        And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' == 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true'" CurrentProjectTargetPlatform="$(TargetPlatformMoniker)" AnnotatedProjectReferences="@(_ProjectReferenceTargetFrameworkPossibilities)" FallbackTargetFrameworks="$(AssetTargetFallback)" CurrentProjectTargetFramework="$(ReferringTargetFrameworkForProjectReferences)" CurrentProjectName="$(MSBuildProjectName)">
      <Output TaskParameter="AssignedProjects" ItemName="AnnotatedProjects" />
    </GetReferenceNearestTargetFrameworkTask>
    <GetReferenceNearestTargetFrameworkTask Condition="'@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''&#xD;&#xA;                                                        And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true'" AnnotatedProjectReferences="@(_ProjectReferenceTargetFrameworkPossibilities)" FallbackTargetFrameworks="$(AssetTargetFallback)" CurrentProjectTargetFramework="$(ReferringTargetFrameworkForProjectReferences)" CurrentProjectName="$(MSBuildProjectName)">
      <Output TaskParameter="AssignedProjects" ItemName="AnnotatedProjects" />
    </GetReferenceNearestTargetFrameworkTask>
  </Target>
  <Target Name="GetTargetFrameworks" DependsOnTargets="GetTargetFrameworksWithPlatformForSingleTargetFramework" Returns="@(_ThisProjectBuildMetadata)">
    <Error Condition="'$(IsCrossTargetingBuild)' == 'true'" Text="Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build" />
    <CombineXmlElements XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')" RootElementName="AdditionalProjectProperties">
      <Output TaskParameter="Result" ItemName="_AdditionalPropertiesFromProject" />
    </CombineXmlElements>
  </Target>
  <Target Name="GetTargetFrameworksWithPlatformForSingleTargetFramework" Returns="@(_TargetFrameworkInfo)">
    <CombineTargetFrameworkInfoProperties RootElementName="$(TargetFramework)" PropertiesAndValues="@(_AdditionalTargetFrameworkInfoPropertyWithValue)" UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)">
      <Output TaskParameter="Result" ItemName="_AdditionalTargetFrameworkInfoProperties" />
    </CombineTargetFrameworkInfoProperties>
  </Target>
  <Target Name="GetTargetFrameworkProperties" />
  <Target Name="PrepareProjectReferences" DependsOnTargets="$(PrepareProjectReferencesDependsOn)" />
  <Target Name="ResolveProjectReferences" DependsOnTargets="PrepareProjectReferences" Returns="@(_ResolvedNativeProjectReferencePaths);@(_ResolvedProjectReferencePaths)">
    <MSBuild Condition="'%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != ''" ContinueOnError="!$(BuildingProject)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="GetTargetPath" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProjectReferencePaths" Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)'=='true'" />
      <Output TaskParameter="TargetOutputs" ItemName="%(_MSBuildProjectReferenceExistent.OutputItemType)" Condition="'%(_MSBuildProjectReferenceExistent.OutputItemType)' != ''" />
    </MSBuild>
    <MSBuild Condition="'%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != ''" ContinueOnError="$(ContinueOnError)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform);  %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="%(_MSBuildProjectReferenceExistent.Targets)" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProjectReferencePaths" Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)'=='true' or '$(DesignTimeBuild)' == 'true'" />
      <Output TaskParameter="TargetOutputs" ItemName="%(_MSBuildProjectReferenceExistent.OutputItemType)" Condition="'%(_MSBuildProjectReferenceExistent.OutputItemType)' != ''" />
    </MSBuild>
    <MSBuild Condition="'%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingProject)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != ''" ContinueOnError="$(ContinueOnError)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" SkipNonexistentTargets="true" Projects="@(_MSBuildProjectReferenceExistent)" Targets="GetNativeManifest" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="NativeReference" Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)' == 'true'" />
    </MSBuild>
    <Warning Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != ''" Text="The referenced project '%(_MSBuildProjectReferenceNonexistent.Identity)' does not exist." />
  </Target>
  <Target Name="ResolveProjectReferencesDesignTime" DependsOnTargets="ResolveProjectReferences;ResolveAssemblyReferences" Returns="@(_ProjectReferencesFromRAR);@(_ResolvedNativeProjectReferencePaths)" />
  <Target Name="ExpandSDKReferencesDesignTime" DependsOnTargets="ExpandSDKReferences" Returns="@(ReferencesFromSDK)" />
  <Target Name="GetTargetPath" DependsOnTargets="$(GetTargetPathDependsOn)" Returns="@(TargetPathWithTargetPlatformMoniker)" />
  <Target Name="GetTargetPathWithTargetPlatformMoniker" DependsOnTargets="$(GetTargetPathWithTargetPlatformMonikerDependsOn)" Returns="@(TargetPathWithTargetPlatformMoniker)" />
  <Target Name="GetNativeManifest" Returns="@(ComputedApplicationManifest)" />
  <Target Name="ResolveNativeReferences" Condition="'@(NativeReference)'!=''" DependsOnTargets="ResolveProjectReferences">
    <ResolveNativeReference NativeReferences="@(NativeReference)" AdditionalSearchPaths="$(ReferencePath);$(OutDir)">
      <Output TaskParameter="ContainingReferenceFiles" ItemName="NativeReferenceFile" />
      <Output TaskParameter="ContainedPrerequisiteAssemblies" ItemName="_DeploymentNativePrerequisite" />
      <Output TaskParameter="ContainedComComponents" ItemName="ComClassReference" />
      <Output TaskParameter="ContainedTypeLibraries" ItemName="COMReferenceFromNative" />
      <Output TaskParameter="ContainedLooseTlbFiles" ItemName="COMFileReference" />
      <Output TaskParameter="ContainedLooseEtcFiles" ItemName="_DeploymentLooseManifestFile" />
    </ResolveNativeReference>
  </Target>
  <Target Name="ResolveAssemblyReferences" DependsOnTargets="$(ResolveAssemblyReferencesDependsOn)" Returns="@(ReferencePath)">
    <ResolveAssemblyReference Condition="'@(Reference)'!='' or '@(_ResolvedProjectReferencePaths)'!='' or '@(_ExplicitReference)' != ''" ContinueOnError="$(ContinueOnError)" SupportsBindingRedirectGeneration="$(GenerateBindingRedirectsOutputType)" ResolvedSDKReferences="@(ResolvedSDKReference)" AssemblyFiles="@(_ResolvedProjectReferencePaths);@(_ExplicitReference)" CandidateAssemblyFiles="@(Content);@(None)" ProfileName="$(TargetFrameworkProfile)" TargetFrameworkMonikerDisplayName="$(TargetFrameworkMonikerDisplayName)" TargetFrameworkDirectories="@(_ReferenceInstalledAssemblyDirectory)" Assemblies="@(Reference)" FullTargetFrameworkSubsetNames="$(FullReferenceAssemblyNames)" IgnoreDefaultInstalledAssemblySubsetTables="$(IgnoreInstalledAssemblySubsetTables)" FindSatellites="$(ResolveAssemblyReferencesFindRelatedSatellites)" AssemblyInformationCacheOutputPath="$(AssemblyInformationCacheOutputPath)" TargetedRuntimeVersion="$(TargetedRuntimeVersion)" WarnOrErrorOnTargetArchitectureMismatch="$(ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch)" FullFrameworkAssemblyTables="@(FullFrameworkAssemblyTables)" AssemblyInformationCachePaths="$(AssemblyInformationCachePaths)" CopyLocalDependenciesWhenParentReferenceInGac="$(CopyLocalDependenciesWhenParentReferenceInGac)" IgnoreVersionForFrameworkReferences="$(IgnoreVersionForFrameworkReferences)" DoNotCopyLocalIfInGac="$(DoNotCopyLocalIfInGac)" IgnoreTargetFrameworkAttributeVersionMismatch="$(ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch)" TargetFrameworkSubsets="@(_ReferenceInstalledAssemblySubsets)" InstalledAssemblySubsetTables="@(InstalledAssemblySubsetTables)" AllowedAssemblyExtensions="$(AllowedReferenceAssemblyFileExtensions)" FullFrameworkFolders="$(_FullFrameworkReferenceAssemblyPaths)" FindDependencies="$(_FindDependencies)" FindSerializationAssemblies="$(ResolveAssemblyReferencesFindSerializationAssemblies)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" FindRelatedFiles="$(ResolveAssemblyReferencesFindRelatedFiles)" SearchPaths="$(AssemblySearchPaths)" InstalledAssemblyTables="@(InstalledAssemblyTables);@(RedistList)" AutoUnify="$(AutoUnifyAssemblyReferences)" AppConfigFile="@(_ResolveAssemblyReferencesApplicationConfigFileForExes)" StateFile="$(ResolveAssemblyReferencesStateFile)" AllowedRelatedFileExtensions="$(AllowedReferenceRelatedFileExtensions)" FindDependenciesOfExternallyResolvedReferences="$(FindDependenciesOfExternallyResolvedReferences)" IgnoreDefaultInstalledAssemblyTables="$(IgnoreDefaultInstalledAssemblyTables)" OutputUnresolvedAssemblyConflicts="$(ResolveAssemblyReferenceOutputUnresolvedAssemblyConflicts)" TargetFrameworkVersion="$(TargetFrameworkVersion)" LatestTargetFrameworkDirectories="@(LatestTargetFrameworkDirectories)" Silent="$(ResolveAssemblyReferencesSilent)" TargetProcessorArchitecture="$(ProcessorArchitecture)">
      <Output TaskParameter="ResolvedFiles" ItemName="ReferencePath" />
      <Output TaskParameter="ResolvedFiles" ItemName="_ResolveAssemblyReferenceResolvedFiles" />
      <Output TaskParameter="ResolvedDependencyFiles" ItemName="ReferenceDependencyPaths" />
      <Output TaskParameter="RelatedFiles" ItemName="_ReferenceRelatedPaths" />
      <Output TaskParameter="SatelliteFiles" ItemName="ReferenceSatellitePaths" />
      <Output TaskParameter="SerializationAssemblyFiles" ItemName="_ReferenceSerializationAssemblyPaths" />
      <Output TaskParameter="ScatterFiles" ItemName="_ReferenceScatterPaths" />
      <Output TaskParameter="CopyLocalFiles" ItemName="ReferenceCopyLocalPaths" />
      <Output TaskParameter="SuggestedRedirects" ItemName="SuggestedBindingRedirects" />
      <Output TaskParameter="FilesWritten" ItemName="FileWrites" />
      <Output TaskParameter="DependsOnSystemRuntime" ItemName="DependsOnSystemRuntime" />
      <Output TaskParameter="DependsOnNETStandard" ItemName="_DependsOnNETStandard" />
      <Output TaskParameter="UnresolvedAssemblyConflicts" ItemName="ResolveAssemblyReferenceUnresolvedAssemblyConflicts" />
    </ResolveAssemblyReference>
  </Target>
  <Target Name="FindReferenceAssembliesForReferences" DependsOnTargets="ResolveReferences" />
  <Target Name="GenerateBindingRedirects" Condition="'$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true'" DependsOnTargets="_GenerateSuggestedBindingRedirectsCache" Inputs="$(MSBuildAllProjects);@(AppConfigFile);$(ResolveAssemblyReferencesStateFile);$(SuggestedBindingRedirectsCacheFile)" Outputs="$(_GenerateBindingRedirectsIntermediateAppConfig)">
    <GenerateBindingRedirects SuggestedRedirects="@(SuggestedBindingRedirects)" OutputAppConfigFile="$(_GenerateBindingRedirectsIntermediateAppConfig)" TargetName="$(TargetFileName).config" AppConfigFile="@(AppConfigWithTargetPath)">
      <Output TaskParameter="OutputAppConfigFile" ItemName="FileWrites" />
    </GenerateBindingRedirects>
  </Target>
  <Target Name="GenerateBindingRedirectsUpdateAppConfig" Condition="'$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)')" />
  <Target Name="GetInstalledSDKLocations" Condition="'@(SDKReference)' != ''" DependsOnTargets="$(GetInstalledSDKLocationsDependsOn)" Returns="@(InstalledSDKLocations)">
    <GetInstalledSDKLocations SDKDirectoryRoots="$(SDKReferenceDirectoryRoot)" SDKExtensionDirectoryRoots="$(SDKExtensionDirectoryRoot)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" TargetPlatformVersion="$(TargetPlatformVersion)" SDKRegistryRoot="$(SDKReferenceRegistryRoot)">
      <Output TaskParameter="InstalledSDKs" ItemName="InstalledSDKLocations" />
    </GetInstalledSDKLocations>
    <GetInstalledSDKLocations Condition="'$(SupportWindows81SDKs)' == 'true' and '$(TargetPlatformIdentifierWindows81)' != '' and '$(TargetPlatformVersionWindows81)' != ''" SDKDirectoryRoots="$(SDKReferenceDirectoryRoot)" SDKExtensionDirectoryRoots="" TargetPlatformIdentifier="$(TargetPlatformIdentifierWindows81)" WarnWhenNoSDKsFound="false" TargetPlatformVersion="$(TargetPlatformVersionWindows81)" SDKRegistryRoot="$(SDKReferenceRegistryRoot)">
      <Output TaskParameter="InstalledSDKs" ItemName="InstalledSDKLocations" />
    </GetInstalledSDKLocations>
    <GetInstalledSDKLocations Condition="'$(SupportWindowsPhone81SDKs)' == 'true' and '$(TargetPlatformIdentifierWindowsPhone81)' != '' and '$(TargetPlatformVersionWindowsPhone81)' != ''" SDKDirectoryRoots="$(SDKReferenceDirectoryRoot)" SDKExtensionDirectoryRoots="" TargetPlatformIdentifier="$(TargetPlatformIdentifierWindowsPhone81)" WarnWhenNoSDKsFound="false" TargetPlatformVersion="$(TargetPlatformVersionWindowsPhone81)" SDKRegistryRoot="$(SDKReferenceRegistryRoot)">
      <Output TaskParameter="InstalledSDKs" ItemName="InstalledSDKLocations" />
    </GetInstalledSDKLocations>
  </Target>
  <Target Name="ResolveSDKReferences" DependsOnTargets="$(ResolveSDKReferencesDependsOn)" Returns="@(ResolvedSDKReference)">
    <ResolveSDKReference Condition="'@(SDKReference)'!=''" ContinueOnError="$(ContinueOnError)" TargetedSDKArchitecture="$(TargetedSDKArchitecture)" WarnOnMissingPlatformVersion="$(SDKReferenceWarnOnMissingMaxPlatformVersion)" SDKReferences="@(SDKReference)" TargetedSDKConfiguration="$(TargetedSDKConfiguration)" References="@(Reference)" Prefer32Bit="$(Prefer32Bit)" ProjectName="$(MSBuildProjectName)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" InstalledSDKs="@(InstalledSDKLocations)" LogResolutionErrorsAsWarnings="$(LogSDKReferenceResolutionErrorsAsWarnings)" TargetPlatformVersion="$(TargetPlatformVersion)" RuntimeReferenceOnlySDKDependencies="@(RuntimeReferenceOnlySDKDependencies)">
      <Output TaskParameter="ResolvedSDKReferences" ItemName="ResolvedSDKReference" />
    </ResolveSDKReference>
  </Target>
  <Target Name="ResolveSDKReferencesDesignTime" DependsOnTargets="ResolveSDKReferences" Returns="@(ResolvedSDKReference)" />
  <Target Name="FindInvalidProjectReferences" Condition="'$(FindInvalidProjectReferences)' == 'true'" DependsOnTargets="$(FindInvalidProjectReferencesDependsOn)">
    <FindInvalidProjectReferences TargetPlatformIdentifier="$(TargetPlatformIdentifier)" ProjectReferences="@(TargetPathWithTargetPlatformMoniker)" TargetPlatformVersion="$(TargetPlatformVersion)">
      <Output TaskParameter="InvalidReferences" ItemName="InvalidProjectReferences" />
    </FindInvalidProjectReferences>
  </Target>
  <Target Name="GetReferenceTargetPlatformMonikers" DependsOnTargets="PrepareProjectReferences">
    <MSBuild ContinueOnError="!$(BuildingProject)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="GetTargetPathWithTargetPlatformMoniker" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="TargetPathWithTargetPlatformMoniker" />
    </MSBuild>
  </Target>
  <Target Name="ExpandSDKReferences" DependsOnTargets="$(ExpandSDKReferencesDependsOn)" Returns="@(ReferencesFromSDK)">
    <GetSDKReferenceFiles Condition="'@(ResolvedSDKReference)'!=''" LogReferenceConflictWithinSDKAsWarning="$(GetSDKReferenceFilesLogReferenceConflictsWithinSDKAsWarning)" ResolvedSDKReferences="@(ResolvedSDKReference)" LogRedistConflictWithinSDKAsWarning="$(GetSDKReferenceFilesLogRedistConflictsWithinSDKAsWarning)" LogReferenceConflictBetweenSDKsAsWarning="$(GetSDKReferenceFilesLogReferenceConflictsBetweenSDKsAsWarning)" LogRedistConflictBetweenSDKsAsWarning="$(GetSDKReferenceFilesLogRedistConflictsBetweenSDKsAsWarning)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" LogCacheFileExceptions="$(GetSDKReferenceFilesLogCacheFileExceptions)" LogRedistFilesList="$(GetSDKReferenceFilesLogRedistFilesList)" TargetSDKVersion="$(SDKVersion)" TargetSDKIdentifier="$(SDKIdentifier)" LogReferencesList="$(GetSDKReferenceFilesLogReferencesList)" ReferenceExtensions="$(ExpandSDKAllowedReferenceExtensions)" TargetPlatformVersion="$(TargetPlatformVersion)" CacheFileFolderPath="$(GetSDKReferenceFilesCacheFolder)">
      <Output TaskParameter="References" ItemName="ReferencePath" />
      <Output TaskParameter="References" ItemName="ReferencesFromSDK" />
      <Output TaskParameter="References" ItemName="_ResolveAssemblyReferenceResolvedFiles" />
      <Output TaskParameter="CopyLocalFiles" ItemName="ReferenceCopyLocalPaths" />
      <Output TaskParameter="RedistFiles" ItemName="ResolvedRedistFiles" />
    </GetSDKReferenceFiles>
  </Target>
  <Target Name="ExportWindowsMDFile" Condition="'$(ExportWinMDFile)' == 'true'" DependsOnTargets="Compile" Inputs="@(IntermediateAssembly);@(DocFileItem);@(_DebugSymbolsIntermediatePath);@(ReferencePathWithRefAssemblies);$(MSBuildAllProjects)" Outputs="$(_IntermediateWindowsMetadataPath);$(WinMDExpOutputPdb);$(WinMDOutputDocumentationFile)">
    <WinMDExp OutputDocumentationFile="$(WinMDOutputDocumentationFile)" References="@(ReferencePathWithRefAssemblies)" InputDocumentationFile="@(DocFileItem)" InputPDBFile="@(_DebugSymbolsIntermediatePath)" UTF8Output="$(WinMdExpUTF8Ouput)" OutputWindowsMetadataFile="$(_IntermediateWindowsMetadataPath)" WinMDModule="@(IntermediateAssembly)" TreatWarningsAsErrors="$(TreatWarningsAsErrors)" AssemblyUnificationPolicy="$(WinMDExpAssemblyUnificationPolicy)" OutputPDBFile="$(WinMDExpOutputPdb)" SdkToolsPath="$(WinMdExpToolPath)" EnvironmentVariables="$(WinMDExpEnvironment)" DisabledWarnings="$(WinMdExpNoWarn)">
      <Output TaskParameter="OutputWindowsMetadataFile" ItemName="FileWrites" />
    </WinMDExp>
  </Target>
  <Target Name="ResolveAssemblyReferencesDesignTime" DependsOnTargets="ResolveProjectReferences;ResolveAssemblyReferences" Returns="@(_ReferencesFromRAR)" />
  <Target Name="DesignTimeResolveAssemblyReferences" Condition="'$(DesignTimeReference)'!=''" DependsOnTargets="$(DesignTimeResolveAssemblyReferencesDependsOn)">
    <ResolveAssemblyReference ResolvedSDKReferences="@(ResolvedSDKReference)" CandidateAssemblyFiles="@(Content);@(None);@(_RARResolvedReferencePath)" ProfileName="$(TargetFrameworkProfile)" TargetFrameworkMonikerDisplayName="$(TargetFrameworkMonikerDisplayName)" TargetFrameworkDirectories="@(_DesignTimeReferenceInstalledAssemblyDirectory)" Assemblies="@(_DesignTimeReferenceAssemblies)" FullTargetFrameworkSubsetNames="$(FullReferenceAssemblyNames)" IgnoreDefaultInstalledAssemblySubsetTables="$(IgnoreInstalledAssemblySubsetTables)" FindSatellites="$(DesignTimeFindSatellites)" TargetedRuntimeVersion="$(TargetedRuntimeVersion)" FullFrameworkAssemblyTables="@(FullFrameworkAssemblyTables)" IgnoreVersionForFrameworkReferences="$(DesignTimeIgnoreVersionForFrameworkReferences)" IgnoreTargetFrameworkAttributeVersionMismatch="$(DesignTimeIgnoreTargetFrameworkAttributeVersionMismatch)" TargetFrameworkSubsets="@(_ReferenceInstalledAssemblySubsets)" InstalledAssemblySubsetTables="@(InstalledAssemblySubsetTables)" AllowedAssemblyExtensions="$(AllowedReferenceAssemblyFileExtensions)" FullFrameworkFolders="$(_FullFrameworkReferenceAssemblyPaths)" FindDependencies="$(DesignTimeFindDependencies)" FindSerializationAssemblies="$(DesignTimeFindSerializationAssemblies)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" FindRelatedFiles="$(DesignTimeFindRelatedFiles)" SearchPaths="$(DesignTimeAssemblySearchPaths)" AutoUnify="$(DesignTimeAutoUnify)" StateFile="$(DesignTimeResolveAssemblyReferencesStateFile)" TargetFrameworkVersion="$(TargetFrameworkVersion)" Silent="$(DesignTimeSilentResolution)" TargetProcessorArchitecture="$(ProcessorArchitecture)">
      <Output TaskParameter="ResolvedFiles" ItemName="DesignTimeReferencePath" />
      <Output TaskParameter="FilesWritten" ItemName="FileWrites" />
    </ResolveAssemblyReference>
  </Target>
  <Target Name="ResolveComReferences" Condition="'@(COMReference)'!='' or '@(COMFileReference)'!=''" DependsOnTargets="PrepareForBuild;ResolveKeySource;ResolveAssemblyReferences" Returns="@(ReferencePath)">
    <MakeDir Directories="$(InteropOutputPath)" />
    <ResolveComReference ContinueOnError="$(ContinueOnError)" MSBuildArchitecture="$(ResolveComReferenceMSBuildArchitecture)" TypeLibNames="@(COMReference)" ResolvedAssemblyReferences="@(ReferencePath)" WrapperOutputDirectory="$(InteropOutputPath)" DelaySign="$(DelaySign)" IncludeVersionInInteropName="$(IncludeVersionInInteropName)" SdkToolsPath="$(ResolveComReferenceToolPath)" StateFile="@(_ResolveComReferenceCache)" KeyFile="$(KeyOriginatorFile)" NoClassMembers="$(ComReferenceNoClassMembers)" EnvironmentVariables="$(ResolveComReferenceEnvironment)" ExecuteAsTool="$(ComReferenceExecuteAsTool)" TargetFrameworkVersion="$(TargetFrameworkVersion)" Silent="$(ResolveComReferenceSilent)" TypeLibFiles="@(COMFileReference)" KeyContainer="$(KeyContainerName)" TargetProcessorArchitecture="$(ProcessorArchitecture)">
      <Output TaskParameter="ResolvedFiles" ItemName="ReferencePath" />
      <Output TaskParameter="ResolvedFiles" ItemName="ComReferenceWrappers" />
      <Output TaskParameter="ResolvedFiles" ItemName="FileWrites" />
      <Output TaskParameter="ResolvedModules" ItemName="ResolvedIsolatedComModules" />
    </ResolveComReference>
  </Target>
  <Target Name="ResolveComReferencesDesignTime" DependsOnTargets="ResolveComReferences" Returns="@(ComReferenceWrappers)" />
  <Target Name="ResolveFrameworkReferences" Condition="'@(FrameworkReference)' != ''" DependsOnTargets="ProcessFrameworkReferences;ResolvePackageAssets" Returns="@(ResolvedFrameworkReference)">
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(TargetingPack)">
      <Output TaskParameter="Output" ItemName="ResolvedTargetingPack" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(AppHostPack)">
      <Output TaskParameter="Output" ItemName="ResolvedAppHostPack" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(SingleFileHostPack)">
      <Output TaskParameter="Output" ItemName="ResolvedSingleFileHostPack" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(Crossgen2Pack)">
      <Output TaskParameter="Output" ItemName="ResolvedCrossgen2Pack" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(PackAsToolShimAppHostPack)">
      <Output TaskParameter="Output" ItemName="_ApphostsForShimRuntimeIdentifiersGetPackageDirectory" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(ComHostPack)">
      <Output TaskParameter="Output" ItemName="ResolvedComHostPack" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(IjwHostPack)">
      <Output TaskParameter="Output" ItemName="ResolvedIjwHostPack" />
    </GetPackageDirectory>
    <GetPackageDirectory PackageFolders="@(AssetsFilePackageFolder)" Items="@(RuntimePack)">
      <Output TaskParameter="Output" ItemName="ResolvedRuntimePack" />
    </GetPackageDirectory>
    <ResolveFrameworkReferences FrameworkReferences="@(FrameworkReference)" ResolvedRuntimePacks="@(ResolvedRuntimePack)" ResolvedTargetingPacks="@(ResolvedTargetingPack)">
      <Output TaskParameter="ResolvedFrameworkReferences" ItemName="ResolvedFrameworkReference" />
    </ResolveFrameworkReferences>
  </Target>
  <Target Name="PrepareResources" DependsOnTargets="$(PrepareResourcesDependsOn)" />
  <Target Name="PrepareResourceNames" DependsOnTargets="$(PrepareResourceNamesDependsOn)" />
  <Target Name="AssignTargetPaths" DependsOnTargets="$(AssignTargetPathsDependsOn)">
    <AssignTargetPath Files="@(EmbeddedResource)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_Temporary" />
    </AssignTargetPath>
    <AssignTargetPath Files="@(Content)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="ContentWithTargetPath" />
    </AssignTargetPath>
    <AssignTargetPath Files="@(None)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_NoneWithTargetPath" />
    </AssignTargetPath>
    <AssignTargetPath Files="@(BaseApplicationManifest)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_DeploymentBaseManifestWithTargetPath" />
    </AssignTargetPath>
    <AssignTargetPath Condition="'@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest'" Files="@(None)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_DeploymentBaseManifestWithTargetPath" />
    </AssignTargetPath>
  </Target>
  <Target Name="GetItemTargetPaths" DependsOnTargets="AssignTargetPaths" Returns="&#xD;&#xA;      @(EmbeddedResource);&#xD;&#xA;      @(ContentWithTargetPath);&#xD;&#xA;      @(_NoneWithTargetPath);&#xD;&#xA;      @(_DeploymentBaseManifestWithTargetPath);&#xD;&#xA;      " />
  <Target Name="SplitResourcesByCulture" DependsOnTargets="AssignTargetPaths">
    <Warning Condition="'@(ResxWithNoCulture)'!=''" Code="MSB9000" Text="ResxWithNoCulture item type is deprecated. Use EmbeddedResource items instead." />
    <Warning Condition="'@(ResxWithCulture)'!=''" Code="MSB9001" Text="ResxWithCulture item type is deprecated. Use EmbeddedResource items instead." />
    <Warning Condition="'@(NonResxWithCulture)'!=''" Code="MSB9002" Text="NonResxWithCulture item type is deprecated. Use EmbeddedResource items instead." />
    <Warning Condition="'@(NonResxWithNoCulture)'!=''" Code="MSB9003" Text="NonResxWithNoCulture item type is deprecated. Use EmbeddedResource items instead." />
    <AssignCulture Condition="'%(Extension)'!='.licx'" Files="@(EmbeddedResource)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="_MixedResourceWithCulture" />
      <Output TaskParameter="AssignedFilesWithNoCulture" ItemName="_MixedResourceWithNoCulture" />
    </AssignCulture>
  </Target>
  <Target Name="CreateCustomManifestResourceNames" DependsOnTargets="$(CreateCustomManifestResourceNamesDependsOn)" />
  <Target Name="ResGen" DependsOnTargets="$(ResGenDependsOn)" />
  <Target Name="BeforeResGen" />
  <Target Name="AfterResGen" />
  <Target Name="CoreResGen" DependsOnTargets="$(CoreResGenDependsOn)">
    <GenerateResource Condition="'%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' != 'CLR2'" MSBuildArchitecture="$(GenerateResourceMSBuildArchitecture)" MSBuildRuntime="$(GenerateResourceMSBuildRuntime)" UsePreserializedResources="$(GenerateResourceUsePreserializedResources)" References="@(ReferencePathWithRefAssemblies)" Sources="@(EmbeddedResource)" AdditionalInputs="$(MSBuildAllProjects)" UseSourcePath="$(UseSourcePath)" StronglyTypedFileName="%(EmbeddedResource.StronglyTypedFileName)" NeverLockTypeAssemblies="$(GenerateResourceNeverLockTypeAssemblies)" SdkToolsPath="$(ResgenToolPath)" StronglyTypedLanguage="%(EmbeddedResource.StronglyTypedLanguage)" StateFile="$(IntermediateOutputPath)$(MSBuildProjectFile).GenerateResource.cache" PublicClass="%(EmbeddedResource.PublicClass)" EnvironmentVariables="$(ResGenEnvironment)" OutputResources="@(EmbeddedResource->'$(IntermediateOutputPath)%(ManifestResourceName).resources')" ExecuteAsTool="$(ResGenExecuteAsTool)" StronglyTypedNamespace="%(EmbeddedResource.StronglyTypedNamespace)" StronglyTypedManifestPrefix="%(EmbeddedResource.StronglyTypedManifestPrefix)" StronglyTypedClassName="%(EmbeddedResource.StronglyTypedClassName)">
      <Output TaskParameter="FilesWritten" ItemName="FileWrites" />
      <Output TaskParameter="StronglyTypedFileName" ItemName="Compile" />
      <Output TaskParameter="Sources" ItemName="_Temporary" />
    </GenerateResource>
    <GenerateResource Condition="'%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' == 'CLR2'" MSBuildArchitecture="$(GenerateResourceMSBuildArchitecture)" MSBuildRuntime="$(GenerateResourceMSBuildRuntime)" References="@(ReferencePath)" Sources="@(EmbeddedResource)" AdditionalInputs="$(MSBuildAllProjects)" UseSourcePath="$(UseSourcePath)" StronglyTypedFileName="%(EmbeddedResource.StronglyTypedFileName)" NeverLockTypeAssemblies="$(GenerateResourceNeverLockTypeAssemblies)" StronglyTypedLanguage="%(EmbeddedResource.StronglyTypedLanguage)" StateFile="$(IntermediateOutputPath)$(MSBuildProjectFile).GenerateResource.cache" PublicClass="%(EmbeddedResource.PublicClass)" OutputResources="@(EmbeddedResource->'$(IntermediateOutputPath)%(ManifestResourceName).resources')" StronglyTypedNamespace="%(EmbeddedResource.StronglyTypedNamespace)" StronglyTypedManifestPrefix="%(EmbeddedResource.StronglyTypedManifestPrefix)" StronglyTypedClassName="%(EmbeddedResource.StronglyTypedClassName)">
      <Output TaskParameter="FilesWritten" ItemName="FileWrites" />
      <Output TaskParameter="StronglyTypedFileName" ItemName="Compile" />
      <Output TaskParameter="Sources" ItemName="_Temporary" />
    </GenerateResource>
  </Target>
  <Target Name="CompileLicxFiles" Condition="'@(_LicxFile)'!=''" DependsOnTargets="$(CompileLicxFilesDependsOn)" Inputs="$(MSBuildAllProjects);@(_LicxFile);@(ReferencePathWithRefAssemblies);@(ReferenceDependencyPaths)" Outputs="$(IntermediateOutputPath)$(TargetFileName).licenses">
    <LC MSBuildArchitecture="$(LCMSBuildArchitecture)" OutputDirectory="$(IntermediateOutputPath)" Sources="@(_LicxFile)" OutputLicense="$(IntermediateOutputPath)$(TargetFileName).licenses" ReferencedAssemblies="@(ReferencePathWithRefAssemblies);@(ReferenceDependencyPaths)" SdkToolsPath="$(TargetFrameworkSDKToolsDirectory)" LicenseTarget="$(TargetFileName)" ToolPath="$(LCToolPath)" EnvironmentVariables="$(LCEnvironment)" TargetFrameworkVersion="$(TargetFrameworkVersion)" NoLogo="$(NoLogo)">
      <Output TaskParameter="OutputLicense" ItemName="CompiledLicenseFile" />
      <Output TaskParameter="OutputLicense" ItemName="FileWrites" />
    </LC>
  </Target>
  <Target Name="ResolveKeySource" Condition="$(SignManifests) == 'true' or $(SignAssembly) == 'true'">
    <ResolveKeySource ContinueOnError="!$(BuildingProject)" CertificateThumbprint="$(ManifestCertificateThumbprint)" SuppressAutoClosePasswordPrompt="$(BuildingInsideVisualStudio)" ShowImportDialogDespitePreviousFailures="$(BuildingProject)" KeyFile="$(AssemblyOriginatorKeyFile)" CertificateFile="$(ManifestKeyFile)">
      <Output TaskParameter="ResolvedKeyFile" ItemName="KeyOriginatorFile" Condition=" '$(SignAssembly)' == 'true' " />
      <Output TaskParameter="ResolvedKeyContainer" ItemName="KeyContainerName" Condition=" '$(SignAssembly)' == 'true' " />
      <Output TaskParameter="ResolvedThumbprint" ItemName="_DeploymentResolvedManifestCertificateThumbprint" Condition=" '$(SignManifests)' == 'true' " />
    </ResolveKeySource>
  </Target>
  <Target Name="Compile" DependsOnTargets="$(CompileDependsOn)" />
  <Target Name="_GenerateCompileInputs">
    <Warning Condition="'@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'==''" Code="MSB9004" Text="ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName." />
    <Warning Condition="'@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'==''" Code="MSB9005" Text="ManifestNonResxWithNoCultureOnDisk item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Non-Resx', and optional LogicalName." />
  </Target>
  <Target Name="GenerateTargetFrameworkMonikerAttribute" Condition="'$(GenerateTargetFrameworkAttribute)' == 'true'" DependsOnTargets="PrepareForBuild;GetReferenceAssemblyPaths" Inputs="$(MSBuildToolsPath)\Microsoft.Common.targets" Outputs="$(TargetFrameworkMonikerAssemblyAttributesPath)">
    <WriteLinesToFile Condition="'@(Compile)' != '' and '$(TargetFrameworkMonikerAssemblyAttributeText)' != ''" ContinueOnError="true" File="$(TargetFrameworkMonikerAssemblyAttributesPath)" Lines="$(TargetFrameworkMonikerAssemblyAttributeText)" Overwrite="true" />
  </Target>
  <Target Name="GenerateAdditionalSources" Condition="'@(AssemblyAttributes)' != '' and '$(GenerateAdditionalSources)' == 'true'" DependsOnTargets="PrepareForBuild;GetReferenceAssemblyPaths" Inputs="$(MSBuildAllProjects)" Outputs="$(AssemblyAttributesPath)">
    <WriteCodeFragment OutputFile="$(AssemblyAttributesPath)" AssemblyAttributes="@(AssemblyAttributes)" Language="$(Language)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
  </Target>
  <Target Name="BeforeCompile" />
  <Target Name="AfterCompile" />
  <Target Name="_TimeStampBeforeCompile" Condition="'$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')" />
  <Target Name="_GenerateSuggestedBindingRedirectsCache" Condition="'$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true'" DependsOnTargets="ResolveAssemblyReferences">
    <Hash ItemsToHash="@(SuggestedBindingRedirects)">
      <Output TaskParameter="HashResult" ItemName="SuggestedBindingRedirectsHash" />
    </Hash>
    <WriteLinesToFile File="$(SuggestedBindingRedirectsCacheFile)" WriteOnlyWhenDifferent="true" Lines="$(SuggestedBindingRedirectsHash)" Overwrite="true" />
  </Target>
  <Target Name="_GenerateCompileDependencyCache" Condition="'$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true'" DependsOnTargets="ResolveAssemblyReferences">
    <Hash IgnoreCase="$([MSBuild]::ValueOrDefault(`$(CoreCompileCacheIgnoreCase)`, `true`))" ItemsToHash="@(CoreCompileCache)">
      <Output TaskParameter="HashResult" ItemName="CoreCompileDependencyHash" />
    </Hash>
    <WriteLinesToFile File="$(IntermediateOutputPath)$(MSBuildProjectFile).CoreCompileInputs.cache" WriteOnlyWhenDifferent="True" Lines="$(CoreCompileDependencyHash)" Overwrite="True" />
  </Target>
  <Target Name="_TimeStampAfterCompile" Condition="'$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')" />
  <Target Name="_ComputeNonExistentFileProperty" Condition="('$(BuildingInsideVisualStudio)' == 'true') and ('$(BuildingOutOfProcess)' != 'true') and (('$(BuildingProject)' == 'false') or ('$(UseHostCompilerIfAvailable)' == 'true'))" />
  <Target Name="GenerateSerializationAssemblies" Condition="'$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto')" DependsOnTargets="AssignTargetPaths;Compile;ResolveKeySource" Inputs="$(MSBuildAllProjects);@(IntermediateAssembly)" Outputs="$(IntermediateOutputPath)$(_SGenDllName)">
    <SGen MSBuildArchitecture="$(SGenMSBuildArchitecture)" BuildAssemblyName="$(TargetFileName)" References="@(ReferencePath)" UseKeep="$(SGenUseKeep)" Types="$(SGenSerializationTypes)" DelaySign="$(DelaySign)" Platform="$(SGenPlatformTarget)" UseProxyTypes="$(SGenUseProxyTypes)" SdkToolsPath="$(TargetFrameworkSDKToolsDirectory)" BuildAssemblyPath="$(IntermediateOutputPath)" ToolPath="$(SGenToolPath)" KeyFile="$(KeyOriginatorFile)" EnvironmentVariables="$(SGenEnvironment)" ShouldGenerateSerializer="$(SGenShouldGenerateSerializer)" SerializationAssembly="$(IntermediateOutputPath)$(_SGenDllName)" KeyContainer="$(KeyContainerName)">
      <Output TaskParameter="SerializationAssembly" ItemName="SerializationAssembly" />
    </SGen>
  </Target>
  <Target Name="CreateSatelliteAssemblies" DependsOnTargets="$(CreateSatelliteAssembliesDependsOn)" />
  <Target Name="_GenerateSatelliteAssemblyInputs">
    <Warning Condition="'@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'==''" Code="MSB9006" Text="ManifestResourceWithCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='true', Type='Resx', and optional LogicalName." />
    <Warning Condition="'@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'==''" Code="MSB9007" Text="ManifestNonResxWithCultureOnDisk item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='true', Type='Non-Resx', and optional LogicalName." />
  </Target>
  <Target Name="GenerateSatelliteAssemblies" Condition="'@(_SatelliteAssemblyResourceInputs)' != '' and '$(GenerateSatelliteAssembliesForCore)' != 'true'" Inputs="$(MSBuildAllProjects);@(_SatelliteAssemblyResourceInputs);$(IntermediateOutputPath)$(TargetName)$(TargetExt)" Outputs="$(IntermediateOutputPath)%(Culture)\$(TargetName).resources.dll">
    <MakeDir Directories="@(EmbeddedResource->'$(IntermediateOutputPath)%(Culture)')" />
    <AL MainEntryPoint="$(Satellite_MainEntryPoint)" FileVersion="$(Satellite_FileVersion)" EvidenceFile="$(Satellite_EvidenceFile)" TemplateFile="$(IntermediateOutputPath)$(TargetName)$(TargetExt)" ProductVersion="$(Satellite_ProductVersion)" EmbedResources="@(_SatelliteAssemblyResourceInputs)" DelaySign="$(DelaySign)" CompanyName="$(Satellite_CompanyName)" ResponseFiles="@(AlResponseFile)" SourceModules="@(Satellite_SourceModule)" Version="$(Satellite_Version)" ToolExe="$(AlToolExe)" Platform="$(PlatformTarget)" Copyright="$(Satellite_Copyright)" LinkResources="@(Satellite_LinkResource)" Description="$(Satellite_Description)" ProductName="$(Satellite_ProductName)" SdkToolsPath="$(_ALExeToolPath)" GenerateFullPaths="$(Satellite_GenerateFullPaths)" Trademark="$(Satellite_Trademark)" ToolPath="$(AlToolPath)" KeyFile="$(KeyOriginatorFile)" EnvironmentVariables="$(AlEnvironment)" OutputAssembly="$(IntermediateOutputPath)%(Culture)\$(TargetName).resources.dll" Flags="$(Satellite_Flags)" TargetType="$(Satellite_TargetType)" Culture="%(Culture)" Win32Icon="$(Satellite_Win32Icon)" AlgorithmId="$(Satellite_AlgorithmId)" Title="$(Satellite_Title)" BaseAddress="$(Satellite_BaseAddress)" Configuration="$(Satellite_Configuration)" KeyContainer="$(KeyContainerName)" Win32Resource="$(Satellite_Win32Resource)">
      <Output TaskParameter="OutputAssembly" ItemName="FileWrites" />
    </AL>
  </Target>
  <Target Name="ComputeIntermediateSatelliteAssemblies" Condition="@(EmbeddedResource->'%(WithCulture)') != ''" DependsOnTargets="$(ComputeIntermediateSatelliteAssembliesDependsOn)" />
  <Target Name="SetWin32ManifestProperties" Condition="'$(Win32Manifest)'==''" DependsOnTargets="ResolveComReferences;ResolveNativeReferences;_SetExternalWin32ManifestProperties;_SetEmbeddedWin32ManifestProperties" />
  <Target Name="_SetExternalWin32ManifestProperties" Condition="'$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!=''" />
  <Target Name="_SetEmbeddedWin32ManifestProperties" Condition="'$(GenerateClickOnceManifests)'!='true' and '@(NativeReference)'=='' and '@(ResolvedIsolatedComModules)'==''">
    <GetFrameworkPath Condition="'$(ApplicationManifest)'=='' and '$(NoWin32Manifest)'!='true'">
      <Output TaskParameter="FrameworkVersion40Path" ItemName="_FrameworkVersion40Path" />
    </GetFrameworkPath>
  </Target>
  <Target Name="_GenerateResolvedDeploymentManifestEntryPoint">
    <ResolveManifestFiles SigningManifests="$(SignManifests)" DeploymentManifestEntryPoint="@(ApplicationManifest)" PublishFiles="@(_DeploymentPublishFileOfTypeManifestEntryPoint)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)">
      <Output TaskParameter="OutputDeploymentManifestEntryPoint" ItemName="_DeploymentResolvedDeploymentManifestEntryPoint" />
    </ResolveManifestFiles>
  </Target>
  <Target Name="GenerateManifests" Condition="'$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='' or '$(GenerateAppxManifest)' == 'true'" DependsOnTargets="$(GenerateManifestsDependsOn)" />
  <Target Name="GenerateApplicationManifest" DependsOnTargets="&#xD;&#xA;            _DeploymentSetClickOnceVersions;&#xD;&#xA;            _DeploymentGenerateLauncher;&#xD;&#xA;            _DeploymentComputeNativeManifestInfo;&#xD;&#xA;            _DeploymentComputeClickOnceManifestInfo;&#xD;&#xA;            ResolveComReferences;&#xD;&#xA;            ResolveNativeReferences;&#xD;&#xA;            _GenerateResolvedDeploymentManifestEntryPoint" Inputs="&#xD;&#xA;            $(MSBuildAllProjects);&#xD;&#xA;            @(AppConfigWithTargetPath);&#xD;&#xA;            $(_DeploymentBaseManifest);&#xD;&#xA;            @(ResolvedIsolatedComModules);&#xD;&#xA;            @(_DeploymentManifestDependencies);&#xD;&#xA;            @(_DeploymentResolvedManifestEntryPoint);&#xD;&#xA;            @(_DeploymentManifestFiles)" Outputs="@(ApplicationManifest)">
    <RequiresFramework35SP1Assembly Assemblies="@(_DeploymentManifestDependencies)" Files="@(_DeploymentManifestFiles)" SuiteName="$(SuiteName)" ErrorReportUrl="$(_DeploymentFormattedErrorReportUrl)" SigningManifests="$(SignManifests)" EntryPoint="@(_DeploymentResolvedManifestEntryPoint)" ReferencedAssemblies="@(Reference)" DeploymentManifestEntryPoint="@(_DeploymentResolvedDeploymentManifestEntryPoint)" TargetFrameworkVersion="$(TargetFrameworkVersion)" CreateDesktopShortcut="$(CreateDesktopShortcut)">
      <Output TaskParameter="RequiresMinimumFramework35SP1" ItemName="_DeploymentRequiresMinimumFramework35SP1" />
    </RequiresFramework35SP1Assembly>
    <GenerateApplicationManifest IconFile="@(_DeploymentManifestIconFile)" MaxTargetPath="$(MaxTargetPath)" SupportUrl="$(_DeploymentFormattedSupportUrl)" IsolatedComReferences="@(ResolvedIsolatedComModules)" Files="@(_DeploymentManifestFiles)" SuiteName="$(SuiteName)" Product="$(ProductName)" ConfigFile="@(AppConfigWithTargetPath)" OSVersion="$(OSVersion)" ErrorReportUrl="$(_DeploymentFormattedErrorReportUrl)" OutputManifest="@(ApplicationManifest)" AssemblyName="$(_DeploymentApplicationManifestIdentity)" ManifestType="$(_DeploymentManifestType)" LauncherBasedDeployment="$(_DeploymentLauncherBased)" TargetFrameworkSubset="$(TargetFrameworkSubset)" HostInBrowser="$(HostInBrowser)" Publisher="$(PublisherName)" TargetFrameworkProfile="$(TargetFrameworkProfile)" TargetCulture="$(TargetCulture)" Platform="$(_DeploymentPlatformTarget)" Description="$(Description)" RequiresMinimumFramework35SP1="$(_DeploymentRequiresMinimumFramework35SP1)" EntryPoint="@(_DeploymentResolvedManifestEntryPoint)" FileAssociations="@(FileAssociation)" TrustInfoFile="@(_DeploymentIntermediateTrustInfoFile)" InputManifest="$(_DeploymentBaseManifest)" ClrVersion="$(ClrVersion)" AssemblyVersion="$(_DeploymentManifestVersion)" TargetFrameworkVersion="$(_DeploymentManifestTargetFrameworkVersion)" UseApplicationTrust="$(UseApplicationTrust)" Dependencies="@(_DeploymentManifestDependencies)">
      <Output TaskParameter="OutputManifest" ItemName="FileWrites" />
    </GenerateApplicationManifest>
  </Target>
  <Target Name="_DeploymentSetClickOnceVersions" Condition="'$(GenerateClickOnceManifests)'=='true'" />
  <Target Name="_DeploymentGenerateLauncher" Condition="'$(GenerateClickOnceManifests)'=='true' and '$(_DeploymentLauncherBased)' == 'true'">
    <GenerateLauncher VisualStudioVersion="$(VisualStudioVersion)" AssemblyName="$(_DeploymentApplicationManifestIdentity)" EntryPoint="@(EntryPointForLauncher)" OutputPath="$(IntermediateOutputPath)">
      <Output TaskParameter="OutputEntryPoint" ItemName="_DeploymentManifestLauncherEntryPoint" />
    </GenerateLauncher>
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)'=='true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="@(_DeploymentManifestLauncherEntryPoint)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)'=='true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="@(_DeploymentManifestEntryPoint)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)'=='true' and '$(UseAppHost)' == 'true' and '$(PublishSingleFile)' != 'true' and '$(_IsExecutable)' == 'true' and exists('$(AppHostIntermediatePath)')" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="$(AppHostIntermediatePath)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
  </Target>
  <Target Name="_DeploymentComputeNativeManifestInfo" Condition="'$(GenerateClickOnceManifests)'!='true'">
    <ResolveManifestFiles NativeAssemblies="@(NativeReferenceFile);@(_DeploymentNativePrerequisite)">
      <Output TaskParameter="OutputAssemblies" ItemName="_DeploymentManifestDependencies" />
    </ResolveManifestFiles>
    <GetAssemblyIdentity AssemblyFiles="@(IntermediateAssembly)">
      <Output TaskParameter="Assemblies" ItemName="_IntermediateAssemblyIdentity" />
    </GetAssemblyIdentity>
  </Target>
  <Target Name="_DeploymentComputeClickOnceManifestInfo" Condition="'$(GenerateClickOnceManifests)'=='true'" DependsOnTargets="$(DeploymentComputeClickOnceManifestInfoDependsOn)">
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)'=='true' and '$(_DeploymentLauncherBased)' == 'true' and '$(PublishSingleFile)' == 'true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="$(PublishedSingleFilePath)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)' == 'true' and '$(PublishReadyToRun)' == 'true' and '$(PublishSingleFile)' != 'true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="@(_ClickOnceTargetFile)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
    <Copy SourceFiles="@(_DeploymentManifestEntryPoint)" DestinationFolder="$(PublishDir)">
      <Output TaskParameter="DestinationFiles" ItemName="_DeploymentClickOnceApplicationExecutable" />
    </Copy>
    <SignFile Condition="'$(_DeploymentResolvedManifestCertificateThumbprint)'!='' and '$(_DeploymentSignClickOnceManifests)'=='true' and '$(TargetExt)' == '.exe'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="@(_DeploymentClickOnceApplicationExecutable)" TimestampUrl="$(ManifestTimestampUrl)" />
    <ResolveManifestFiles IsSelfContainedPublish="$(SelfContained)" Files="@(_ClickOnceFiles)" ManagedAssemblies="@(_ManifestManagedReferences)" RuntimePackAssets="@(RuntimePackAsset)" AssemblyName="$(_DeploymentApplicationManifestIdentity)" SigningManifests="$(SignManifests)" IsSingleFilePublish="$(PublishSingleFile)" LauncherBasedDeployment="$(_DeploymentLauncherBased)" TargetCulture="$(TargetCulture)" EntryPoint="@(_DeploymentClickOnceApplicationExecutable)" ExtraFiles="@(_DebugSymbolsIntermediatePath);$(IntermediateOutputPath)$(TargetName).xml;@(_ReferenceRelatedPaths)" PublishFiles="@(PublishFile)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" NativeAssemblies="@(NativeReferenceFile);@(_DeploymentNativePrerequisite)" SatelliteAssemblies="@(_SatelliteAssemblies)">
      <Output TaskParameter="OutputAssemblies" ItemName="_DeploymentManifestDependenciesUnfiltered" />
      <Output TaskParameter="OutputFiles" ItemName="_DeploymentManifestFiles" />
      <Output TaskParameter="OutputEntryPoint" ItemName="_DeploymentResolvedManifestEntryPoint" />
    </ResolveManifestFiles>
    <FormatVersion Revision="$(ApplicationRevision)" Version="$(ApplicationVersion)">
      <Output TaskParameter="OutputVersion" ItemName="_DeploymentManifestVersion" />
    </FormatVersion>
    <FormatUrl InputUrl="$(_DeploymentUrl)">
      <Output TaskParameter="OutputUrl" ItemName="_DeploymentFormattedDeploymentUrl" />
    </FormatUrl>
    <FormatUrl InputUrl="$(SupportUrl)">
      <Output TaskParameter="OutputUrl" ItemName="_DeploymentFormattedSupportUrl" />
    </FormatUrl>
    <FormatUrl InputUrl="$(ErrorReportUrl)">
      <Output TaskParameter="OutputUrl" ItemName="_DeploymentFormattedErrorReportUrl" />
    </FormatUrl>
  </Target>
  <Target Name="_DeploymentGenerateTrustInfo" Condition="'$(TargetZone)'!=''" Inputs="&#xD;&#xA;            $(MSBuildAllProjects);&#xD;&#xA;            $(_DeploymentBaseManifest);&#xD;&#xA;            " Outputs="@(_DeploymentIntermediateTrustInfoFile)">
    <GenerateTrustInfo ExcludedPermissions="$(ExcludedPermissions)" TargetZone="$(TargetZone)" ApplicationDependencies="@(ReferencePath);@(ReferenceDependencyPaths)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" TrustInfoFile="@(_DeploymentIntermediateTrustInfoFile)" BaseManifest="$(_DeploymentBaseManifest)">
      <Output TaskParameter="TrustInfoFile" ItemName="FileWrites" />
    </GenerateTrustInfo>
  </Target>
  <Target Name="GenerateDeploymentManifest" DependsOnTargets="GenerateApplicationManifest" Inputs="&#xD;&#xA;            $(MSBuildAllProjects);&#xD;&#xA;            @(ApplicationManifest)&#xD;&#xA;            " Outputs="@(DeployManifest)">
    <GenerateDeploymentManifest Condition="'$(GenerateClickOnceManifests)'=='true'" UpdateUnit="$(_DeploymentBuiltUpdateIntervalUnits)" MaxTargetPath="$(MaxTargetPath)" SupportUrl="$(_DeploymentFormattedSupportUrl)" SuiteName="$(SuiteName)" Product="$(ProductName)" Install="$(Install)" ErrorReportUrl="$(_DeploymentFormattedErrorReportUrl)" MinimumRequiredVersion="$(_DeploymentBuiltMinimumRequiredVersion)" OutputManifest="@(DeployManifest)" AssemblyName="$(_DeploymentDeployManifestIdentity)" UpdateMode="$(UpdateMode)" MapFileExtensions="$(MapFileExtensions)" UpdateEnabled="$(UpdateEnabled)" LauncherBasedDeployment="$(_DeploymentLauncherBased)" Publisher="$(PublisherName)" TargetCulture="$(TargetCulture)" Platform="$(_DeploymentPlatformTarget)" TargetFrameworkMoniker="$(_DeploymentManifestTargetFrameworkMoniker)" Description="$(Description)" UpdateInterval="$(_DeploymentBuiltUpdateInterval)" EntryPoint="@(_DeploymentResolvedDeploymentManifestEntryPoint)" AssemblyVersion="$(_DeploymentManifestVersion)" DeploymentUrl="$(_DeploymentFormattedDeploymentUrl)" TrustUrlParameters="$(TrustUrlParameters)" TargetFrameworkVersion="$(_DeploymentManifestTargetFrameworkVersion)" CreateDesktopShortcut="$(CreateDesktopShortcut)" DisallowUrlActivation="$(DisallowUrlActivation)">
      <Output TaskParameter="OutputManifest" ItemName="FileWrites" />
    </GenerateDeploymentManifest>
  </Target>
  <Target Name="PrepareForRun" DependsOnTargets="$(PrepareForRunDependsOn)" />
  <Target Name="CopyFilesToOutputDirectory" DependsOnTargets="&#xD;&#xA;            ComputeIntermediateSatelliteAssemblies;&#xD;&#xA;            _CopyFilesMarkedCopyLocal;&#xD;&#xA;            _CopySourceItemsToOutputDirectory;&#xD;&#xA;            _CopyAppConfigFile;&#xD;&#xA;            _CopyManifestFiles;&#xD;&#xA;            _CheckForCompileOutputs;&#xD;&#xA;            _SGenCheckForOutputs">
    <Copy Condition="'$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true'" ErrorIfLinkFails="$(ErrorIfLinkFailsForCopyFilesToOutputDirectory)" UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" SourceFiles="@(IntermediateAssembly)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="MainAssembly" />
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <CopyRefAssembly Condition="'$(ProduceReferenceAssembly)' == 'true' and '$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true'" DestinationPath="$(TargetRefPath)" SourcePath="@(IntermediateRefAssembly)">
      <Output TaskParameter="DestinationPath" ItemName="ReferenceAssembly" />
      <Output TaskParameter="DestinationPath" ItemName="FileWrites" />
    </CopyRefAssembly>
    <Message Condition="'$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)'!='true'" Importance="High" Text="$(MSBuildProjectName) -&gt; @(MainAssembly->'%(FullPath)')" />
    <Copy Condition="'@(AddModules)' != ''" UseHardlinksIfPossible="$(CreateHardLinksForCopyAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyAdditionalFilesIfPossible)" SourceFiles="@(AddModules)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Copy Condition="'$(_SGenDllCreated)'=='true'" ErrorIfLinkFails="$(ErrorIfLinkFailsForCopyFilesToOutputDirectory)" UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" DestinationFiles="$(OutDir)$(_SGenDllName)" SourceFiles="$(IntermediateOutputPath)$(_SGenDllName)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Copy Condition="'$(_DebugSymbolsProduced)'=='true' and '$(SkipCopyingSymbolsToOutputDirectory)' != 'true' and '$(CopyOutputSymbolsToOutputDirectory)'=='true'" ErrorIfLinkFails="$(ErrorIfLinkFailsForCopyFilesToOutputDirectory)" UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" DestinationFiles="@(_DebugSymbolsOutputPath)" SourceFiles="@(_DebugSymbolsIntermediatePath)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Copy Condition="'$(_DocumentationFileProduced)'=='true' and '$(CopyDocumentationFileToOutputDirectory)'=='true'" ErrorIfLinkFails="$(ErrorIfLinkFailsForCopyFilesToOutputDirectory)" UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" DestinationFiles="@(FinalDocFile)" SourceFiles="@(DocFileItem)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Copy Condition="'@(IntermediateSatelliteAssembliesWithTargetPath)' != ''" ErrorIfLinkFails="$(ErrorIfLinkFailsForCopyFilesToOutputDirectory)" UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" DestinationFiles="@(IntermediateSatelliteAssembliesWithTargetPath->'$(OutDir)%(Culture)\$(TargetName).resources.dll')" SourceFiles="@(IntermediateSatelliteAssembliesWithTargetPath)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Copy Condition="'@(ReferenceComWrappersToCopyLocal)' != '' or '@(ResolvedIsolatedComModules)' != '' or '@(_DeploymentLooseManifestFile)' != '' or '@(NativeReferenceFile)' != '' " UseHardlinksIfPossible="$(CreateHardLinksForCopyAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyAdditionalFilesIfPossible)" SourceFiles="@(ReferenceComWrappersToCopyLocal); @(ResolvedIsolatedComModules); @(_DeploymentLooseManifestFile); @(NativeReferenceFile)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWritesShareable" />
    </Copy>
    <Copy Condition="'$(SkipCopyWinMDArtifact)' != 'true' and '@(WinMDExpArtifacts)' != ''" ErrorIfLinkFails="$(ErrorIfLinkFailsForCopyFilesToOutputDirectory)" UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" SourceFiles="@(WinMDExpArtifacts)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
      <Output TaskParameter="DestinationFiles" ItemName="FinalWinmdExpArtifacts" />
    </Copy>
    <Message Condition="'$(SkipCopyWinMDArtifact)' != 'true' and '$(_WindowsMetadataOutputPath)' != ''" Importance="High" Text="$(MSBuildProjectName) -&gt; $([System.IO.Path]::GetFullPath('$(_WindowsMetadataOutputPath)'))" />
  </Target>
  <Target Name="_CopyFilesMarkedCopyLocal" Condition="'@(ReferenceCopyLocalPaths)' != ''">
    <Copy Condition="'$(UseCommonOutputDirectory)' != 'true'" UseHardlinksIfPossible="$(CreateHardLinksForCopyLocalIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyLocalIfPossible)" DestinationFiles="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" SourceFiles="@(ReferenceCopyLocalPaths)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWritesShareable" />
      <Output TaskParameter="CopiedFiles" ItemName="ReferencesCopiedInThisBuild" />
      <Output TaskParameter="WroteAtLeastOneFile" ItemName="WroteAtLeastOneFile" />
    </Copy>
    <Touch Condition="'@(ReferencesCopiedInThisBuild)' != '' and '$(WroteAtLeastOneFile)' == 'true'" Files="@(CopyUpToDateMarker)" AlwaysCreate="true" />
  </Target>
  <Target Name="_CopySourceItemsToOutputDirectory" DependsOnTargets="&#xD;&#xA;            GetCopyToOutputDirectoryItems;&#xD;&#xA;            _CopyOutOfDateSourceItemsToOutputDirectory;&#xD;&#xA;            _CopyOutOfDateSourceItemsToOutputDirectoryAlways" />
  <Target Name="_PopulateCommonStateForGetCopyToOutputDirectoryItems" />
  <Target Name="_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences" DependsOnTargets="_PopulateCommonStateForGetCopyToOutputDirectoryItems;_AddOutputPathToGlobalPropertiesToRemove" Returns="@(_TransitiveItemsToCopyToOutputDirectory)">
    <MSBuild Condition="'@(_MSBuildProjectReferenceExistent)' != '' and '$(_GetChildProjectCopyToOutputDirectoryItems)' == 'true' and '%(_MSBuildProjectReferenceExistent.Private)' != 'false' and '$(UseCommonOutputDirectory)' != 'true'" ContinueOnError="$(ContinueOnError)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" SkipNonexistentTargets="true" Projects="@(_MSBuildProjectReferenceExistent)" Targets="$(_RecursiveTargetForContentCopying)" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_AllChildProjectItemsWithTargetPath" />
    </MSBuild>
    <AssignTargetPath Files="@(_CompileItemsToCopy)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_CompileItemsToCopyWithTargetPath" />
    </AssignTargetPath>
  </Target>
  <Target Name="_GetCopyToOutputDirectoryItemsFromThisProject" DependsOnTargets="AssignTargetPaths;_PopulateCommonStateForGetCopyToOutputDirectoryItems" Returns="@(_ThisProjectItemsToCopyToOutputDirectory)">
    <AssignTargetPath Files="@(_CompileItemsToCopy)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_CompileItemsToCopyWithTargetPath" />
    </AssignTargetPath>
  </Target>
  <Target Name="GetCopyToOutputDirectoryItems" DependsOnTargets="$(GetCopyToOutputDirectoryItemsDependsOn)" Returns="@(AllItemsFullPathWithTargetPath)">
    <CallTarget Targets="_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences">
      <Output TaskParameter="TargetOutputs" ItemName="_TransitiveItemsToCopyToOutputDirectory" />
    </CallTarget>
    <CallTarget Targets="_GetCopyToOutputDirectoryItemsFromThisProject">
      <Output TaskParameter="TargetOutputs" ItemName="_ThisProjectItemsToCopyToOutputDirectory" />
    </CallTarget>
  </Target>
  <Target Name="GetCopyToPublishDirectoryItems" DependsOnTargets="AssignTargetPaths;&#xD;&#xA;                            DefaultCopyToPublishDirectoryMetadata;&#xD;&#xA;                            _SplitProjectReferencesByFileExistence;&#xD;&#xA;                            _GetProjectReferenceTargetFrameworkProperties" Returns="@(AllPublishItemsFullPathWithTargetPath)">
    <MSBuild Condition="'@(_MSBuildProjectReferenceExistent)' != '' and '$(_GetChildProjectCopyToPublishDirectoryItems)' == 'true' and '%(_MSBuildProjectReferenceExistent.Private)' != 'false'" ContinueOnError="$(ContinueOnError)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="GetCopyToPublishDirectoryItems" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_AllChildProjectPublishItemsWithTargetPath" />
    </MSBuild>
    <AssignTargetPath Files="@(_CompileItemsToPublish)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_CompileItemsToPublishWithTargetPath" />
    </AssignTargetPath>
  </Target>
  <Target Name="_CopyOutOfDateSourceItemsToOutputDirectory" Condition=" '@(_SourceItemsToCopyToOutputDirectory)' != '' " Inputs="@(_SourceItemsToCopyToOutputDirectory)" Outputs="@(_SourceItemsToCopyToOutputDirectory->'$(OutDir)%(TargetPath)')">
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)" DestinationFiles="@(_SourceItemsToCopyToOutputDirectory->'$(OutDir)%(TargetPath)')" SourceFiles="@(_SourceItemsToCopyToOutputDirectory)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_CopyOutOfDateSourceItemsToOutputDirectoryAlways" Condition=" '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' ">
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)" DestinationFiles="@(_SourceItemsToCopyToOutputDirectoryAlways->'$(OutDir)%(TargetPath)')" SourceFiles="@(_SourceItemsToCopyToOutputDirectoryAlways)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_CopyAppConfigFile" Condition=" '@(AppConfigWithTargetPath)' != '' " Inputs="@(AppConfigWithTargetPath)" Outputs="@(AppConfigWithTargetPath->'$(OutDir)%(TargetPath)')">
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)" DestinationFiles="@(AppConfigWithTargetPath->'$(OutDir)%(TargetPath)')" SourceFiles="@(AppConfigWithTargetPath)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_CopyManifestFiles" Condition=" '$(_DeploymentCopyApplicationManifest)'=='true' or '$(GenerateClickOnceManifests)'=='true' " DependsOnTargets="PrepareForBuild">
    <Copy Condition="'$(GenerateClickOnceManifests)'=='true' or '$(_DeploymentCopyApplicationManifest)'=='true'" UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)" SourceFiles="@(ApplicationManifest)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="_DeploymentMainApplicationManifest" />
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Message Condition="'$(_DeploymentCopyApplicationManifest)'=='true'" Importance="Normal" Text="$(MSBuildProjectName) -&gt; @(_DeploymentMainApplicationManifest->'%(FullPath)')" />
    <Copy Condition="'$(GenerateClickOnceManifests)'=='true'" UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)" SourceFiles="@(DeployManifest)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="_DeploymentMainDeployManifest" />
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Message Condition="'$(GenerateClickOnceManifests)'=='true'" Importance="Normal" Text="$(MSBuildProjectName) -&gt; @(_DeploymentMainDeployManifest->'%(FullPath)')" />
  </Target>
  <Target Name="_CheckForCompileOutputs" />
  <Target Name="_SGenCheckForOutputs" Condition="'$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto')" />
  <Target Name="UnmanagedRegistration" Condition="'$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'" DependsOnTargets="$(UnmanagedRegistrationDependsOn)">
    <RegisterAssembly Condition="!Exists('@(_UnmanagedRegistrationCache)')" MSBuildArchitecture="$(RegisterAssemblyMSBuildArchitecture)" MSBuildRuntime="$(RegisterAssemblyMSBuildRuntime)" Assemblies="@(_OutputPathItem->'%(FullPath)$(TargetFileName)')" AssemblyListFile="@(_UnmanagedRegistrationCache)" TypeLibFiles="@(_OutputPathItem->'%(FullPath)$(TargetName).tlb')" CreateCodeBase="true" />
  </Target>
  <Target Name="IncrementalClean" DependsOnTargets="$(IncrementalCleanDependsOn);_CleanGetCurrentAndPriorFileWrites">
    <FindUnderPath Files="@(_CleanOrphanFileWrites)" Path="$(OutDir)">
      <Output TaskParameter="InPath" ItemName="_CleanOrphanFileWritesInOutput" />
    </FindUnderPath>
    <FindUnderPath Files="@(_CleanOrphanFileWrites)" Path="$(IntermediateOutputPath)">
      <Output TaskParameter="InPath" ItemName="_CleanOrphanFileWritesInIntermediate" />
    </FindUnderPath>
    <Delete TreatErrorsAsWarnings="true" Files="@(_CleanOrphanFileWritesInIntermediate);@(_CleanOrphanFileWritesInOutput)">
      <Output TaskParameter="DeletedFiles" ItemName="_CleanOrphanFilesDeleted" />
    </Delete>
    <RemoveDuplicates Inputs="@(_CleanRemainingFileWritesAfterIncrementalClean)">
      <Output TaskParameter="Filtered" ItemName="_CleanUniqueRemainingFileWritesAfterIncrementalClean" />
    </RemoveDuplicates>
    <WriteLinesToFile Condition="'@(_CleanUnfilteredPriorFileWrites)'!='@(_CleanUniqueRemainingFileWritesAfterIncrementalClean)'" File="$(IntermediateOutputPath)$(CleanFile)" Lines="@(_CleanUniqueRemainingFileWritesAfterIncrementalClean)" Overwrite="true" />
  </Target>
  <Target Name="_CleanGetCurrentAndPriorFileWrites" DependsOnTargets="_CheckForCompileOutputs;_SGenCheckForOutputs">
    <ReadLinesFromFile File="$(IntermediateOutputPath)$(CleanFile)">
      <Output TaskParameter="Lines" ItemName="_CleanUnfilteredPriorFileWrites" />
    </ReadLinesFromFile>
    <ConvertToAbsolutePath Paths="@(_ResolveAssemblyReferenceResolvedFiles)">
      <Output TaskParameter="AbsolutePaths" ItemName="_ResolveAssemblyReferenceResolvedFilesAbsolute" />
    </ConvertToAbsolutePath>
    <FindUnderPath Files="@(FileWritesShareable)" Path="$(MSBuildProjectDirectory)" UpdateToAbsolutePaths="true">
      <Output TaskParameter="InPath" ItemName="FileWrites" />
    </FindUnderPath>
    <FindUnderPath Files="@(FileWrites)" Path="$(OutDir)" UpdateToAbsolutePaths="true">
      <Output TaskParameter="InPath" ItemName="_CleanCurrentFileWritesInOutput" />
    </FindUnderPath>
    <FindUnderPath Files="@(FileWrites)" Path="$(IntermediateOutputPath)" UpdateToAbsolutePaths="true">
      <Output TaskParameter="InPath" ItemName="_CleanCurrentFileWritesInIntermediate" />
    </FindUnderPath>
    <RemoveDuplicates Inputs="@(_CleanCurrentFileWritesWithNoReferences)">
      <Output TaskParameter="Filtered" ItemName="_CleanCurrentFileWrites" />
    </RemoveDuplicates>
  </Target>
  <Target Name="Clean" Condition=" '$(_InvalidConfigurationWarning)' != 'true' " DependsOnTargets="$(CleanDependsOn)" />
  <Target Name="BeforeClean" />
  <Target Name="AfterClean" />
  <Target Name="CleanReferencedProjects" DependsOnTargets="PrepareProjectReferences">
    <MSBuild Condition="'$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != ''" ContinueOnError="$(ContinueOnError)" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="Clean" BuildInParallel="$(BuildInParallel)" />
  </Target>
  <Target Name="CoreClean" DependsOnTargets="$(CoreCleanDependsOn)">
    <Delete TreatErrorsAsWarnings="true" Files="@(Clean)" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)$(CleanFile)">
      <Output TaskParameter="Lines" ItemName="_CleanPriorFileWrites" />
    </ReadLinesFromFile>
    <FindUnderPath Files="@(_CleanPriorFileWrites)" Path="$(OutDir)">
      <Output TaskParameter="InPath" ItemName="_CleanPriorFileWritesInOutput" />
    </FindUnderPath>
    <FindUnderPath Files="@(_CleanPriorFileWrites)" Path="$(IntermediateOutputPath)">
      <Output TaskParameter="InPath" ItemName="_CleanPriorFileWritesInIntermediate" />
    </FindUnderPath>
    <Delete TreatErrorsAsWarnings="true" Files="@(_CleanPriorFileWritesInOutput);@(_CleanPriorFileWritesInIntermediate)">
      <Output TaskParameter="DeletedFiles" ItemName="_CleanPriorFileWritesDeleted" />
    </Delete>
    <RemoveDuplicates Inputs="@(_CleanRemainingFileWritesAfterClean)">
      <Output TaskParameter="Filtered" ItemName="_CleanUniqueRemainingFileWrites" />
    </RemoveDuplicates>
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <WriteLinesToFile File="$(IntermediateOutputPath)$(CleanFile)" Lines="@(_CleanUniqueRemainingFileWrites)" Overwrite="true" />
  </Target>
  <Target Name="_CleanRecordFileWrites" DependsOnTargets="_CleanGetCurrentAndPriorFileWrites">
    <RemoveDuplicates Inputs="@(_CleanPriorFileWrites);@(_CleanCurrentFileWrites)">
      <Output TaskParameter="Filtered" ItemName="_CleanUniqueFileWrites" />
    </RemoveDuplicates>
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <WriteLinesToFile File="$(IntermediateOutputPath)$(CleanFile)" Lines="@(_CleanUniqueFileWrites)" Overwrite="true" />
  </Target>
  <Target Name="CleanPublishFolder">
    <RemoveDir Condition="'$(PublishDir)'=='$(OutputPath)app.publish\' and Exists('$(PublishDir)')" Directories="$(PublishDir)" />
  </Target>
  <Target Name="PostBuildEvent" Condition="'$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)')" DependsOnTargets="$(PostBuildEventDependsOn)">
    <Exec Command="$(PostBuildEvent)" WorkingDirectory="$(OutDir)" />
  </Target>
  <Target Name="Publish" Condition="$(IsPublishable) == 'true'" DependsOnTargets="_PublishBuildAlternative;_PublishNoBuildAlternative">
    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; $([System.IO.Path]::GetFullPath('$(PublishDir)'))" />
    <AllowEmptyTelemetry EventData="PublishReadyToRun=$(PublishReadyToRun);PublishTrimmed=$(PublishTrimmed);PublishSingleFile=$(PublishSingleFile)" EventName="PublishProperties" />
  </Target>
  <Target Name="_DeploymentUnpublishable">
    <Message Text="Skipping unpublishable project." />
  </Target>
  <Target Name="SetGenerateManifests">
    <Error Condition="'$(OutputType)'!='winexe' and '$(OutputType)'!='exe' and '$(OutputType)'!='appcontainerexe'" Text="Publish is only valid for 'Windows Application' or 'Console Application' project types." />
    <Error Condition="'$(_DeploymentSignClickOnceManifests)'=='true' and '$(ManifestCertificateThumbprint)'=='' and '$(ManifestKeyFile)'==''" Text="A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project." />
  </Target>
  <Target Name="PublishOnly" DependsOnTargets="$(PublishOnlyDependsOn)" />
  <Target Name="BeforePublish" />
  <Target Name="AfterPublish" />
  <Target Name="PublishBuild" DependsOnTargets="$(PublishBuildDependsOn)" />
  <Target Name="_CopyFilesToPublishFolder">
    <FormatVersion FormatType="Path" Revision="$(ApplicationRevision)" Version="$(ApplicationVersion)">
      <Output TaskParameter="OutputVersion" ItemName="_DeploymentApplicationVersionFragment" />
    </FormatVersion>
    <Copy Condition="'$(PublishSingleFile)' != 'true'" UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" DestinationFiles="@(_ApplicationManifestFinal->'$(_DeploymentApplicationDir)%(TargetPath)');&#xD;&#xA;                @(_DeploymentManifestEntryPoint->'$(_DeploymentApplicationDir)%(TargetPath)$(_DeploymentFileMappingExtension)');&#xD;&#xA;                @(_DeploymentManifestFiles->'$(_DeploymentApplicationDir)%(TargetPath)$(_DeploymentFileMappingExtension)');&#xD;&#xA;                @(ReferenceComWrappersToCopyLocal->'$(_DeploymentApplicationDir)%(FileName)%(Extension)$(_DeploymentFileMappingExtension)');&#xD;&#xA;                @(ResolvedIsolatedComModules->'$(_DeploymentApplicationDir)%(FileName)%(Extension)$(_DeploymentFileMappingExtension)');&#xD;&#xA;                @(_DeploymentLooseManifestFile->'$(_DeploymentApplicationDir)%(FileName)%(Extension)$(_DeploymentFileMappingExtension)')" SourceFiles="@(_ApplicationManifestFinal);&#xD;&#xA;                @(_DeploymentResolvedManifestEntryPoint);&#xD;&#xA;                @(_DeploymentManifestFiles);&#xD;&#xA;                @(ReferenceComWrappersToCopyLocal);&#xD;&#xA;                @(ResolvedIsolatedComModules);&#xD;&#xA;                @(_DeploymentLooseManifestFile)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" />
    <Copy Condition="'$(PublishSingleFile)' != 'true' and '%(_DeploymentManifestDependencies.DependencyType)'=='Install'" UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" DestinationFiles="@(_DeploymentManifestDependencies->'$(_DeploymentApplicationDir)%(TargetPath)$(_DeploymentFileMappingExtension)')" SourceFiles="@(_DeploymentManifestDependencies)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" />
    <Copy Condition="'$(PublishSingleFile)' != 'true'" UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" DestinationFiles="@(_ReferenceScatterPaths->'$(_DeploymentApplicationDir)%(Filename)%(Extension)$(_DeploymentFileMappingExtension)')" SourceFiles="@(_ReferenceScatterPaths)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" />
    <Copy Condition="'$(PublishSingleFile)' == 'true'" UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" DestinationFiles="@(_ApplicationManifestFinal->'$(_DeploymentApplicationDir)%(TargetPath)');&#xD;&#xA;                 @(_DeploymentManifestEntryPoint->'$(_DeploymentApplicationDir)%(TargetPath)$(_DeploymentFileMappingExtension)');&#xD;&#xA;                 @(PublishedSingleFileToBeCopied->'$(_DeploymentApplicationDir)%(TargetPath)$(_DeploymentFileMappingExtension)')" SourceFiles="@(_ApplicationManifestFinal);&#xD;&#xA;                 @(_DeploymentResolvedManifestEntryPoint);&#xD;&#xA;                 @(PublishedSingleFileToBeCopied);" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" />
    <FormatUrl InputUrl="$(_DeploymentApplicationUrl)">
      <Output TaskParameter="OutputUrl" ItemName="_DeploymentFormattedApplicationUrl" />
    </FormatUrl>
    <FormatUrl InputUrl="$(_DeploymentComponentsUrl)">
      <Output TaskParameter="OutputUrl" ItemName="_DeploymentFormattedComponentsUrl" />
    </FormatUrl>
  </Target>
  <Target Name="_DeploymentGenerateBootstrapper">
    <GenerateBootstrapper Condition="'$(BootstrapperEnabled)'=='true'" ApplicationFile="$(TargetDeployManifestFileName)" FallbackCulture="$(FallbackCulture)" SupportUrl="$(_DeploymentFormattedSupportUrl)" ComponentsUrl="$(_DeploymentFormattedComponentsUrl)" VisualStudioVersion="$(VisualStudioVersion)" ApplicationName="$(AssemblyName)" BootstrapperItems="@(BootstrapperPackage)" Path="$(GenerateBootstrapperSdkPath)" ComponentsLocation="$(BootstrapperComponentsLocation)" OutputPath="$(PublishDir)" ApplicationUrl="$(_DeploymentFormattedApplicationUrl)" Culture="$(TargetCulture)" />
  </Target>
  <Target Name="_DeploymentSignClickOnceDeployment">
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)'=='true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" DisallowMansignTimestampFallback="$(DisallowMansignTimestampFallback)" SigningTarget="$(_DeploymentApplicationDir)$(_DeploymentTargetApplicationManifestFileName)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
    <UpdateManifest OutputManifest="$(PublishDir)$(TargetDeployManifestFileName)" ApplicationPath="$(_DeploymentApplicationFolderName)\$(_DeploymentTargetApplicationManifestFileName)" ApplicationManifest="$(_DeploymentApplicationDir)$(_DeploymentTargetApplicationManifestFileName)" InputManifest="$(OutDir)$(TargetDeployManifestFileName)" TargetFrameworkVersion="$(_DeploymentManifestTargetFrameworkVersion)">
      <Output TaskParameter="OutputManifest" ItemName="PublishedDeployManifest" />
    </UpdateManifest>
    <SignFile Condition="'$(_DeploymentSignClickOnceManifests)'=='true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" DisallowMansignTimestampFallback="$(DisallowMansignTimestampFallback)" SigningTarget="$(PublishDir)$(TargetDeployManifestFileName)" TimestampUrl="$(ManifestTimestampUrl)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
    <SignFile Condition="'$(BootstrapperEnabled)'=='true' and '$(_DeploymentSignClickOnceManifests)'=='true'" CertificateThumbprint="$(_DeploymentResolvedManifestCertificateThumbprint)" SigningTarget="$(PublishDir)\setup.exe" TimestampUrl="$(ManifestTimestampUrl)" />
  </Target>
  <Target Name="BuiltProjectOutputGroup" DependsOnTargets="$(BuiltProjectOutputGroupDependsOn)" Returns="@(BuiltProjectOutputGroupOutput)" />
  <Target Name="DebugSymbolsProjectOutputGroup" DependsOnTargets="$(DebugSymbolsProjectOutputGroupDependsOn)" Returns="@(DebugSymbolsProjectOutputGroupOutput)" />
  <Target Name="DocumentationProjectOutputGroup" DependsOnTargets="$(DocumentationProjectOutputGroupDependsOn)" Returns="@(DocumentationProjectOutputGroupOutput)" />
  <Target Name="SatelliteDllsProjectOutputGroup" DependsOnTargets="$(SatelliteDllsProjectOutputGroupDependsOn)" Returns="@(SatelliteDllsProjectOutputGroupOutput)" />
  <Target Name="SourceFilesProjectOutputGroup" DependsOnTargets="$(SourceFilesProjectOutputGroupDependsOn)" Returns="@(SourceFilesProjectOutputGroupOutput)">
    <AssignTargetPath Files="@(Compile)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_CompileWithTargetPath" />
    </AssignTargetPath>
  </Target>
  <Target Name="GetCompile" Returns="@(Compile)" />
  <Target Name="ContentFilesProjectOutputGroup" DependsOnTargets="$(ContentFilesProjectOutputGroupDependsOn)" Returns="@(ContentFilesProjectOutputGroupOutput)" />
  <Target Name="SGenFilesOutputGroup" DependsOnTargets="$(SGenFilesOutputGroupDependsOn)" Returns="@(SGenFilesOutputGroupOutput)" />
  <Target Name="GetResolvedSDKReferences" DependsOnTargets="ResolveSDKReferences" Returns="@(ResolvedSDKReference)" />
  <Target Name="CollectReferencedNuGetPackages" Returns="@(ReferencedNuGetPackages)" />
  <Target Name="GenerateSupportedTargetFrameworkAlias" Returns="@(SupportedTargetFrameworkAlias)">
    <GenerateSupportedTargetFrameworkAlias TargetPlatformMoniker="$(TargetPlatformMoniker)" SupportedTargetFramework="@(SupportedTargetFramework)" UseWpf="$(UseWpf)" UseWindowsForms="$(UseWindowsForms)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)">
      <Output TaskParameter="SupportedTargetFrameworkAlias" ItemName="SupportedTargetFrameworkAlias" />
    </GenerateSupportedTargetFrameworkAlias>
  </Target>
  <Target Name="PriFilesOutputGroup" Condition="'@(_ReferenceRelatedPaths)' != ''" DependsOnTargets="BuildOnlySettings;PrepareForBuild;AssignTargetPaths;ResolveReferences" Returns="@(PriFilesOutputGroupOutput)" />
  <Target Name="SDKRedistOutputGroup" DependsOnTargets="$(SDKRedistOutputGroupDependsOn)" Returns="@(SDKRedistOutputGroupOutput)" />
  <Target Name="AllProjectOutputGroupsDependencies" DependsOnTargets="&#xD;&#xA;            BuiltProjectOutputGroupDependencies;&#xD;&#xA;            DebugSymbolsProjectOutputGroupDependencies;&#xD;&#xA;            SatelliteDllsProjectOutputGroupDependencies;&#xD;&#xA;            DocumentationProjectOutputGroupDependencies;&#xD;&#xA;            SGenFilesOutputGroupDependencies" />
  <Target Name="BuiltProjectOutputGroupDependencies" DependsOnTargets="$(BuiltProjectOutputGroupDependenciesDependsOn)" Returns="@(BuiltProjectOutputGroupDependency)" />
  <Target Name="DebugSymbolsProjectOutputGroupDependencies" Condition="'$(DebugSymbols)'!='false'" DependsOnTargets="$(DebugSymbolsProjectOutputGroupDependenciesDependsOn)" Returns="@(DebugSymbolsProjectOutputGroupDependency)" />
  <Target Name="SatelliteDllsProjectOutputGroupDependencies" DependsOnTargets="$(SatelliteDllsProjectOutputGroupDependenciesDependsOn)" Returns="@(SatelliteDllsProjectOutputGroupDependency)" />
  <Target Name="DocumentationProjectOutputGroupDependencies" Condition="'$(DocumentationFile)'!=''" DependsOnTargets="$(DocumentationProjectOutputGroupDependenciesDependsOn)" Returns="@(DocumentationProjectOutputGroupDependency)" />
  <Target Name="SGenFilesOutputGroupDependencies" DependsOnTargets="$(SGenFilesOutputGroupDependenciesDependsOn)" Returns="@(SGenFilesOutputGroupDependency)" />
  <Target Name="ReferenceCopyLocalPathsOutputGroup" DependsOnTargets="$(ReferenceCopyLocalPathsOutputGroupDependsOn)" Returns="@(ReferenceCopyLocalPathsOutputGroupOutput)" />
  <Target Name="DesignerRuntimeImplementationProjectOutputGroup" DependsOnTargets="$(DesignerRuntimeImplementationProjectOutputGroupDependsOn)" Returns="@(DesignerRuntimeImplementationProjectOutputGroupOutput)" />
  <Target Name="GetPotentialEditorConfigFiles" Returns="@(PotentialEditorConfigFiles)" />
  <Target Name="CleanAppxPackage" />
  <Target Name="GetPackagingOutputs" />
  <Target Name="Restore" DependsOnTargets="_GenerateRestoreGraph">
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <RestoreTask Interactive="$(NuGetInteractive)" RestoreDisableParallel="$(RestoreDisableParallel)" RestorePackagesConfig="$(RestorePackagesConfig)" RestoreIgnoreFailedSources="$(RestoreIgnoreFailedSources)" RestoreRecursive="$(RestoreRecursive)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestoreForce="$(RestoreForce)" HideWarningsAndErrors="$(HideWarningsAndErrors)" RestoreForceEvaluate="$(RestoreForceEvaluate)" RestoreNoCache="$(RestoreNoCache)" />
  </Target>
  <Target Name="GenerateRestoreGraphFile" DependsOnTargets="_GenerateRestoreGraph">
    <Error Condition="$(RestoreGraphOutputPath) == ''" Text="Missing RestoreGraphOutputPath property!" />
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <WriteRestoreGraphTask RestoreRecursive="$(RestoreRecursive)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestoreGraphOutputPath="$(RestoreGraphOutputPath)" />
  </Target>
  <Target Name="CollectPackageReferences" Returns="@(PackageReference)">
    <CheckForDuplicateNuGetItemsTask Condition="'$(DisableCheckingDuplicateNuGetItems)' != 'true' " ContinueOnError="$(CollectPackageReferencesContinueOnError)" Items="@(PackageReference)" TreatWarningsAsErrors="$(TreatWarningsAsErrors)" WarningsAsErrors="$(WarningsAsErrors)" NoWarn="$(NoWarn)" MSBuildProjectFullPath="$(MSBuildProjectFullPath)" ItemName="PackageReference" LogCode="NU1504">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedPackageReferences" />
    </CheckForDuplicateNuGetItemsTask>
  </Target>
  <Target Name="CollectCentralPackageVersions" Returns="@(PackageVersion)">
    <CheckForDuplicateNuGetItemsTask Condition="'$(DisableCheckingDuplicateNuGetItems)' != 'true' " ContinueOnError="$(CollectCentralPackageVersionsContinueOnError)" Items="@(PackageVersion)" TreatWarningsAsErrors="$(TreatWarningsAsErrors)" WarningsAsErrors="$(WarningsAsErrors)" NoWarn="$(NoWarn)" MSBuildProjectFullPath="$(MSBuildProjectFullPath)" ItemName="PackageVersion" LogCode="NU1506">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedPackageVersions" />
    </CheckForDuplicateNuGetItemsTask>
  </Target>
  <Target Name="CollectPackageDownloads" Returns="@(PackageDownload)">
    <CheckForDuplicateNuGetItemsTask Condition="'$(DisableCheckingDuplicateNuGetItems)' != 'true' " ContinueOnError="$(CollectPackageDownloadsContinueOnError)" Items="@(PackageDownload)" TreatWarningsAsErrors="$(TreatWarningsAsErrors)" WarningsAsErrors="$(WarningsAsErrors)" NoWarn="$(NoWarn)" MSBuildProjectFullPath="$(MSBuildProjectFullPath)" ItemName="PackageDownload" LogCode="NU1505">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedPackageDownloads" />
    </CheckForDuplicateNuGetItemsTask>
  </Target>
  <Target Name="CollectFrameworkReferences" Returns="@(_FrameworkReferenceForRestore)" />
  <Target Name="_LoadRestoreGraphEntryPoints" Returns="@(RestoreGraphProjectInputItems)">
    <GetRestoreSolutionProjectsTask Condition=" $(MSBuildProjectFullPath.EndsWith('.metaproj')) == 'true' AND @(RestoreGraphProjectInputItems) == '' " ProjectReferences="@(ProjectReference)" SolutionFilePath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="OutputProjectReferences" ItemName="RestoreGraphProjectInputItems" />
    </GetRestoreSolutionProjectsTask>
  </Target>
  <Target Name="_FilterRestoreGraphProjectInputItems" DependsOnTargets="_LoadRestoreGraphEntryPoints" Returns="@(FilteredRestoreGraphProjectInputItems)">
    <RemoveDuplicates Inputs="@(_FilteredRestoreGraphProjectInputItemsTmp)">
      <Output TaskParameter="Filtered" ItemName="FilteredRestoreGraphProjectInputItemsWithoutDuplicates" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentTargets="true" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Targets="_IsProjectRestoreSupported" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Targets="_IsProjectRestoreSupported">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <WarnForInvalidProjectsTask Condition=" '$(DisableWarnForInvalidRestoreProjects)' != 'true' AND '$(HideWarningsAndErrors)' != 'true' " ValidProjects="@(FilteredRestoreGraphProjectInputItems)" AllProjects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" />
  </Target>
  <Target Name="_GenerateRestoreGraph" DependsOnTargets="_FilterRestoreGraphProjectInputItems;_GetAllRestoreProjectPathItems" Returns="@(_RestoreGraphEntry)">
    <Message Importance="low" Text="Generating dg file" />
    <Message Importance="low" Text="%(_RestoreProjectPathItems.Identity)" />
    <MSBuild Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="@(_GenerateRestoreGraphProjectEntryInput)" Targets="_GenerateRestoreGraphProjectEntry" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
    <MSBuild Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="@(_RestoreProjectPathItems)" Targets="_GenerateProjectRestoreGraph" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreGraphProjectEntry" DependsOnTargets="_GenerateRestoreSpecs;_GenerateDotnetCliToolReferenceSpecs" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreSpecs" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreGraphEntry)">
    <Message Importance="low" Text="Restore entry point $(MSBuildProjectFullPath)" />
  </Target>
  <Target Name="_GenerateDotnetCliToolReferenceSpecs" DependsOnTargets="_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <GetRestoreDotnetCliToolsTask Condition=" '$(RestoreDotnetCliToolReferences)' == '' OR '$(RestoreDotnetCliToolReferences)' == 'true' " RestoreFallbackFolders="$(_OutputFallbackFolders)" RestoreSources="$(_OutputSources)" ToolFramework="$(DotnetCliToolTargetFramework)" ProjectPath="$(MSBuildProjectFullPath)" DotnetCliToolReferences="@(DotnetCliToolReference)" RestoreConfigFilePaths="$(_OutputConfigFilePaths)" RestorePackagesPath="$(_OutputPackagesPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreDotnetCliToolsTask>
  </Target>
  <Target Name="_GetProjectJsonPath" Returns="$(_CurrentProjectJsonPath)">
    <GetRestoreProjectJsonPathTask Condition=" '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' " ProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="ProjectJsonPath" ItemName="_CurrentProjectJsonPath" />
    </GetRestoreProjectJsonPathTask>
  </Target>
  <Target Name="_GetRestoreProjectStyle" DependsOnTargets="_GetProjectJsonPath;CollectPackageReferences" Returns="$(RestoreProjectStyle);$(PackageReferenceCompatibleProjectStyle)">
    <GetRestoreProjectStyleTask MSBuildProjectDirectory="$(MSBuildProjectDirectory)" HasPackageReferenceItems="$(_HasPackageReferenceItems)" RestoreProjectStyle="$(RestoreProjectStyle)" ProjectJsonPath="$(_CurrentProjectJsonPath)" MSBuildProjectName="$(MSBuildProjectName)">
      <Output TaskParameter="ProjectStyle" ItemName="RestoreProjectStyle" />
      <Output TaskParameter="IsPackageReferenceCompatibleProjectStyle" ItemName="PackageReferenceCompatibleProjectStyle" />
    </GetRestoreProjectStyleTask>
  </Target>
  <Target Name="EnableIntermediateOutputPathMismatchWarning" Condition="'$(RestoreProjectStyle)' == 'PackageReference'" DependsOnTargets="_GetRestoreProjectStyle" />
  <Target Name="_GetRestoreTargetFrameworksOutput" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworkOverride" Returns="@(_RestoreTargetFrameworksOutputFiltered)">
    <GetProjectTargetFrameworksTask Condition=" '$(RestoreProjectStyle)' != 'ProjectJson'" TargetPlatformMinVersion="$(TargetPlatformMinVersion)" ProjectPath="$(MSBuildProjectFullPath)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" TargetFramework="$(TargetFramework)" TargetFrameworks="$(_TargetFrameworkToBeUsed)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" TargetPlatformVersion="$(TargetPlatformVersion)">
      <Output TaskParameter="ProjectTargetFrameworks" ItemName="_RestoreProjectFramework" />
    </GetProjectTargetFrameworksTask>
  </Target>
  <Target Name="_GetRestoreTargetFrameworksAsItems" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworkOverride" Returns="@(_RestoreTargetFrameworkItems)" />
  <Target Name="_GetRestoreSettings" Condition=" '$(RestoreProjectStyle)' == 'PackageReference' OR '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == 'DotnetToolReference' OR '$(RestoreProjectStyle)' == 'PackagesConfig'" DependsOnTargets="_GetRestoreSettingsOverrides;_GetRestoreSettingsCurrentProject;_GetRestoreSettingsAllFrameworks" Returns="$(_OutputSources);$(_OutputPackagesPath);$(_OutputRepositoryPath);$(_OutputFallbackFolders);$(_OutputConfigFilePaths)">
    <GetRestoreSettingsTask RestoreConfigFile="$(RestoreConfigFile)" RestoreFallbackFolders="$(RestoreFallbackFolders)" RestoreSources="$(RestoreSources)" RestoreSolutionDirectory="$(RestoreSolutionDirectory)" RestoreSettingsPerFramework="@(_RestoreSettingsPerFramework)" MSBuildStartupDirectory="$(MSBuildStartupDirectory)" RestoreRepositoryPathOverride="$(_RestoreRepositoryPathOverride)" ProjectUniqueName="$(MSBuildProjectFullPath)" RestoreFallbackFoldersOverride="$(_RestoreFallbackFoldersOverride)" RestoreSourcesOverride="$(_RestoreSourcesOverride)" RestorePackagesPath="$(RestorePackagesPath)" RestoreProjectStyle="$(RestoreProjectStyle)" RestoreRootConfigDirectory="$(RestoreRootConfigDirectory)" RestorePackagesPathOverride="$(_RestorePackagesPathOverride)" RestoreRepositoryPath="$(RestoreRepositoryPath)">
      <Output TaskParameter="OutputSources" ItemName="_OutputSources" />
      <Output TaskParameter="OutputPackagesPath" ItemName="_OutputPackagesPath" />
      <Output TaskParameter="OutputRepositoryPath" ItemName="_OutputRepositoryPath" />
      <Output TaskParameter="OutputFallbackFolders" ItemName="_OutputFallbackFolders" />
      <Output TaskParameter="OutputConfigFilePaths" ItemName="_OutputConfigFilePaths" />
    </GetRestoreSettingsTask>
  </Target>
  <Target Name="_GetRestoreSettingsCurrentProject" Condition=" '$(TargetFrameworks)' == '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GetRestoreSettingsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems;_GetRestoreProjectStyle" Returns="@(_RestoreSettingsPerFramework)">
    <MSBuild Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="$(MSBuildProjectFullPath)" Targets="_GetRestoreSettingsPerFramework" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSettingsPerFramework" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GenerateRestoreProjectSpec" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput;_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <ConvertToAbsolutePath Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' OR '$(RestoreProjectStyle)' == 'ProjectJson'" Paths="$(RestoreOutputPath)">
      <Output TaskParameter="AbsolutePaths" ItemName="RestoreOutputAbsolutePath" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateProjectRestoreGraph" DependsOnTargets="&#xD;&#xA;      _GetRestoreProjectStyle;&#xD;&#xA;      _GenerateRestoreProjectSpec;&#xD;&#xA;      _GenerateRestoreDependencies" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreDependencies" DependsOnTargets="_GenerateProjectRestoreGraphAllFrameworks;_GenerateProjectRestoreGraphCurrentProject" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreGraphEntry)">
    <MSBuild Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateProjectRestoreGraphPerFramework" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateProjectRestoreGraphCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateProjectRestoreGraphPerFramework" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphPerFramework" DependsOnTargets="_GetRestoreProjectStyle;CollectPackageReferences;CollectPackageDownloads;CollectFrameworkReferences;CollectCentralPackageVersions" Returns="@(_RestoreGraphEntry)">
    <GetRestoreProjectReferencesTask TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)" ParentProjectPath="$(MSBuildProjectFullPath)" ProjectReferences="@(ProjectReference)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreProjectReferencesTask>
    <GetRestorePackageReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)" PackageReferences="@(PackageReference)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageReferencesTask>
    <GetCentralPackageVersionsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' AND '$(_CentralPackageVersionsEnabled)' == 'true' " CentralPackageVersions="@(PackageVersion)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetCentralPackageVersionsTask>
    <GetRestorePackageDownloadsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " PackageDownloads="@(PackageDownload)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageDownloadsTask>
    <GetRestoreFrameworkReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " FrameworkReferences="@(FrameworkReference)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreFrameworkReferencesTask>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)" />
  <Target Name="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)">
    <ConvertToAbsolutePath Paths="@(ProjectReference)">
      <Output TaskParameter="AbsolutePaths" ItemName="_RestoreGraphAbsoluteProjectPaths" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItems" DependsOnTargets="_GenerateRestoreProjectPathItemsAllFrameworks;_GenerateRestoreProjectPathItemsCurrentProject" Returns="@(_CurrentRestoreProjectPathItems)">
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItems)">
      <Output TaskParameter="Filtered" ItemName="_CurrentRestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentProjects="true" SkipNonexistentTargets="true" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateRestoreProjectPathItemsPerFramework" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateRestoreProjectPathItemsPerFramework">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreProjectPathWalk" DependsOnTargets="_GenerateRestoreProjectPathItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentProjects="true" SkipNonexistentTargets="true" Projects="@(_CurrentRestoreProjectPathItems)" Targets="_GenerateRestoreProjectPathWalk" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="@(_CurrentRestoreProjectPathItems)" Targets="_GenerateRestoreProjectPathWalk">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_GenerateRestoreProjectPathWalkOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GetAllRestoreProjectPathItems" DependsOnTargets="_FilterRestoreGraphProjectInputItems" Returns="@(_RestoreProjectPathItems)">
    <NuGetMessageTask Importance="High" Name="DeterminingProjectsToRestore" />
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentProjects="true" SkipNonexistentTargets="true" Projects="@(FilteredRestoreGraphProjectInputItems)" Targets="_GenerateRestoreProjectPathWalk" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="@(FilteredRestoreGraphProjectInputItems)" Targets="_GenerateRestoreProjectPathWalk">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItemsOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItemsWithoutDupes" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentProjects="true" SkipNonexistentTargets="true" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Targets="_IsProjectRestoreSupported" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Targets="_IsProjectRestoreSupported">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsOverrides" Returns="$(_RestorePackagesPathOverride);$(_RestoreRepositoryPathOverride);$(_RestoreSourcesOverride);$(_RestoreFallbackFoldersOverride)">
    <MSBuild Condition=" '$(RestorePackagesPath)' != '' " Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestorePackagesPathOverride" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestorePackagesPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreRepositoryPathOverride)' != '' " Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreRepositoryPathOverride" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreRepositoryPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreSources)' != '' " Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreSourcesOverride" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSourcesOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreFallbackFolders)' != '' " Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreFallbackFoldersOverride" BuildInParallel="$(RestoreBuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreFallbackFoldersOverride" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestorePackagesPathOverride" Returns="$(_RestorePackagesPathOverride)" />
  <Target Name="_GetRestoreRepositoryPathOverride" Returns="$(_RestoreRepositoryPathOverride)" />
  <Target Name="_GetRestoreSourcesOverride" Returns="$(_RestoreSourcesOverride)" />
  <Target Name="_GetRestoreFallbackFoldersOverride" Returns="$(_RestoreFallbackFoldersOverride)" />
  <Target Name="_GetRestoreTargetFrameworkOverride" Condition=" '$(_DisableNuGetRestoreTargetFrameworksOverride)' != 'true' " Returns="$(_TargetFrameworkOverride)">
    <GetGlobalPropertyValueTask Condition=" '$(TargetFrameworks)' != '' " PropertyName="TargetFramework">
      <Output TaskParameter="GlobalPropertyValue" ItemName="_TargetFrameworkOverride" />
    </GetGlobalPropertyValueTask>
  </Target>
  <Target Name="_GetTargetFrameworkOverrides" Returns="$(_TargetFrameworkOverride)" />
  <Target Name="_IsProjectRestoreSupported" Returns="@(_ValidProjectsForRestore)" />
  <Target Name="VSTest" DependsOnTargets="ShowInfoMessageIfProjectHasNoIsTestProjectProperty">
    <CallTarget Condition="'$(VSTestNoBuild)' != 'true' AND '$(IsTestProject)' == 'true'" Targets="BuildProject" />
    <CallTarget Targets="ShowCallOfVSTestTaskWithParameter" />
    <Microsoft.TestPlatform.Build.Tasks.VSTestTask Condition="'$(IsTestProject)' == 'true'" VSTestPlatform="$(PlatformTarget)" VSTestSessionCorrelationId="$(VSTestSessionCorrelationId)" VSTestDiag="$(VSTestDiag)" VSTestConsolePath="$(VSTestConsolePath)" VSTestBlameHang="$(VSTestBlameHang)" VSTestTestAdapterPath="$(VSTestTestAdapterPath)" VSTestArtifactsProcessingMode="$(VSTestArtifactsProcessingMode)" VSTestTestCaseFilter="$(VSTestTestCaseFilter)" VSTestBlameCrash="$(VSTestBlameCrash)" VSTestListTests="$(VSTestListTests)" VSTestBlameHangDumpType="$(VSTestBlameHangDumpType)" VSTestNoLogo="$(VSTestNoLogo)" VSTestBlameCrashCollectAlways="$(VSTestBlameCrashCollectAlways)" VSTestCollect="$(VSTestCollect)" VSTestVerbosity="$(VSTestVerbosity)" VSTestTraceDataCollectorDirectoryPath="$(TraceDataCollectorDirectoryPath)" VSTestCLIRunSettings="$(VSTestCLIRunSettings)" VSTestBlame="$(VSTestBlame)" VSTestBlameHangTimeout="$(VSTestBlameHangTimeout)" VSTestResultsDirectory="$(VSTestResultsDirectory)" VSTestSetting="$([MSBuild]::ValueOrDefault($(VSTestSetting), '$(RunSettingsFilePath)'))" TestFileFullPath="$(TargetPath)" VSTestLogger="$(VSTestLogger)" VSTestFramework="$(TargetFrameworkMoniker)" VSTestBlameCrashDumpType="$(VSTestBlameCrashDumpType)" />
  </Target>
  <Target Name="ShowInfoMessageIfProjectHasNoIsTestProjectProperty" Condition="'$(IsTestProject)' == ''">
    <Microsoft.TestPlatform.Build.Tasks.VSTestLogsTask LogType="NoIsTestProjectProperty" ProjectFilePath="$(MSBuildProjectFullPath)" />
  </Target>
  <Target Name="BuildProject">
    <CallTarget Targets="ShowMsbuildWithParameter" />
    <Microsoft.TestPlatform.Build.Tasks.VSTestLogsTask LogType="BuildStarted" />
    <MSBuild Projects="$(MSBuildProjectFullPath)" />
    <Microsoft.TestPlatform.Build.Tasks.VSTestLogsTask LogType="BuildCompleted" />
    <Message Importance="low" Text="Done Building project $(MSBuildProjectFullPath) for TargetFramework=$(TargetFramework)" />
  </Target>
  <Target Name="ShowMsbuildWithParameter">
    <Message Importance="low" Text="Building project $(MSBuildProjectFullPath) for TargetFramework=$(TargetFramework)" />
    <Message Importance="low" Text="Value passed to msbuild are..." />
    <Message Importance="low" Text="Configuration = $(Configuration)" />
    <Message Importance="low" Text="TargetFramework = $(TargetFramework)" />
    <Message Importance="low" Text="Platform = $(PlatformTarget)" />
    <Message Importance="low" Text="OutputPath = $(OutputPath)" />
  </Target>
  <Target Name="ShowCallOfVSTestTaskWithParameter">
    <Message Importance="low" Text="Calling task Microsoft.TestPlatform.Build.Tasks.VSTestTask with following parameter..." />
    <Message Importance="low" Text="TestFileFullPath = $(TargetPath)" />
    <Message Importance="low" Text="VSTestSetting = $(VSTestSetting)" />
    <Message Importance="low" Text="VSTestTestAdapterPath = $(VSTestTestAdapterPath)" />
    <Message Importance="low" Text="VSTestFramework = $(TargetFrameworkMoniker)" />
    <Message Importance="low" Text="VSTestPlatform = $(PlatformTarget)" />
    <Message Importance="low" Text="VSTestTestCaseFilter = $(VSTestTestCaseFilter)" />
    <Message Importance="low" Text="VSTestLogger = $(VSTestLogger)" />
    <Message Importance="low" Text="VSTestListTests = $(VSTestListTests)" />
    <Message Importance="low" Text="VSTestDiag = $(VSTestDiag)" />
    <Message Importance="low" Text="VSTestCLIRunSettings = $(VSTestCLIRunSettings)" />
    <Message Importance="low" Text="VSTestResultsDirectory = $(VSTestResultsDirectory)" />
    <Message Importance="low" Text="VSTestConsolePath = $(VSTestConsolePath)" />
    <Message Importance="low" Text="VSTestVerbosity = $(VSTestVerbosity)" />
    <Message Importance="low" Text="VSTestCollect = $(VSTestCollect)" />
    <Message Importance="low" Text="VSTestBlame = $(VSTestBlame)" />
    <Message Importance="low" Text="VSTestTraceDataCollectorDirectoryPath = $(TraceDataCollectorDirectoryPath)" />
    <Message Importance="low" Text="VSTestNoLogo = $(VSTestNoLogo)" />
  </Target>
  <Target Name="EnsureSourceGenerators">
    <Error Condition="$([System.Version]::Parse('16.8.0').CompareTo($([System.Version]::Parse($(MSBuildVersion))))) == 1" Text="ThisAssembly requires MSBuild 16.8+ or .NET SDK 5.0+." />
    <Warning Condition="'$(Language)' != 'C#' OR &#xA;                  ('$(LangVersion)' != 'preview' AND&#xA;                   '$(LangVersion)' != 'latest' AND&#xA;                   '$(LangVersion)' != 'latestMajor' AND&#xA;                   '$(LangVersion)' &lt; '9.0')" Code="THIS001" Text="ThisAssembly uses Roslyn source generators, which are only supported in C# 9.0 or greater at the moment." />
  </Target>
  <Target Name="_InjectRexAdditionalFiles" DependsOnTargets="PrepareResourceNames" />
  <Target Name="InjectThisAssemblyProject" DependsOnTargets="$(InjectThisAssemblyProjectDependsOn)" />
  <Target Name="_InjectConstantAdditionalFiles" DependsOnTargets="PrepareResourceNames" />
  <Target Name="_System_Text_JsonGatherAnalyzers" />
  <Target Name="_System_Text_JsonAnalyzerMultiTargeting" Condition="'$(SupportsRoslynComponentVersioning)' != 'true'" DependsOnTargets="_System_Text_JsonGatherAnalyzers" />
  <Target Name="_System_Text_JsonRemoveAnalyzers" Condition="'$(DisableSystemTextJsonSourceGenerator)' == 'true'" DependsOnTargets="_System_Text_JsonGatherAnalyzers" />
  <Target Name="GetPackageVersion" DependsOnTargets="$(GetPackageVersionDependsOn)" Returns="$(PackageVersion)" />
  <Target Name="_SetDefaultPackageVersion" Condition="'$(PackageVersion)' == ''" Returns="$(PackageVersion)" />
  <Target Name="GetPackageMetadata" Condition="'$(IsPackable)' == 'true'" DependsOnTargets="$(GetPackageMetadataDependsOn)" Returns="@(PackageMetadata)">
    <Error Condition="'$(IsPackable)' == 'true' and '$(PackageId)' == ''" Code="NG1001" Text="The 'PackageId' property cannot be empty when 'IsPackable' is 'true'." />
    <Error Condition="'$(PackageVersion)' == ''" Code="NG1002" Text="The 'PackageVersion' property cannot be empty." />
  </Target>
  <Target Name="_InitializeRepositoryProperties" DependsOnTargets="InitializeSourceControlInformation" />
  <Target Name="GetPackageTargetPath" Condition="'$(IsPackable)' == 'true'" DependsOnTargets="$(GetPackageTargetPathDependsOn)" Returns="@(PackageTargetPath)">
    <Error Condition="'$(PackageVersion)' == ''" Code="NG1002" Text="The 'PackageVersion' property cannot be empty." />
  </Target>
  <Target Name="_SetDefaultPackageTargetPath" Condition="'$(IsPackable)' == 'true' and '$(PackageTargetPath)' == '' and '$(PackageVersion)' != ''" />
  <Target Name="PackageOutputGroup" DependsOnTargets="$(PackageOutputGroupDependsOn)" Returns="@(PackageTargetPath)" />
  <Target Name="_PackAfterBuild" Condition="'$(_ShouldPackOnBuild)' == 'true' And '$(_IsInnerBuild)' != 'true'" DependsOnTargets="Pack" />
  <Target Name="_BuildBeforePack" Condition="'$(BuildOnPack)' != 'false' And '$(_IsInnerBuild)' != 'true' And '$(NoBuild)' != 'true' And '$(IsPackagingProject)' != 'true' And '$(_ShouldPackOnBuild)' != 'true' And '$(IsPackable)' == 'true'" DependsOnTargets="Build" />
  <Target Name="Pack" Condition="'$(IsPackable)' == 'true'" DependsOnTargets="$(PackDependsOn)" Returns="@(_PackageTargetPath)">
    <CreatePackage EmitNuspec="$(EmitNuspec)" NuspecFile="$(_NuspecFile)" EmitPackage="$(EmitPackage)" Contents="@(_PackageContent)" Manifest="@(PackageTargetPath)" TargetPath="@(PackageTargetPath->'%(FullPath)')">
      <Output TaskParameter="OutputPackage" ItemName="_PackageTargetPath" />
      <Output TaskParameter="OutputPackage" ItemName="FileWrites" Condition="'$(EmitPackage)' == 'true'" />
      <Output TaskParameter="NuspecFile" ItemName="FileWrites" Condition="'$(EmitNuspec)' == 'true'" />
    </CreatePackage>
    <Message Condition="'$(EmitPackage)' == 'true'" Importance="high" Text="Created package at %(_PackageTargetPath.FullPath)." />
  </Target>
  <Target Name="CleanPackageOutput">
    <Delete ContinueOnError="true" Files="@(_PackageToDelete)">
      <Output TaskParameter="DeletedFiles" ItemName="_CleanedPackages" />
    </Delete>
    <Message Condition="'@(_CleanedPackages)' != ''" Text="Cleaned existing packages: @(_CleanedPackages -> '%(Filename)%(Extension)')" />
  </Target>
  <Target Name="CleanCachedPackageId">
    <Message Condition="Exists($(PackageFolder))" Text="Cleaning $(PackageFolder)" />
    <Exec Condition="Exists($(PackageFolder)) and '$(OS)' == 'Windows_NT'" Command="rd &quot;$(PackageFolder)&quot; /q /s" />
    <Exec Condition="Exists($(PackageFolder)) and '$(OS)' != 'Windows_NT'" Command="rm -rf &quot;$(PackageFolder)&quot;" />
  </Target>
  <Target Name="CleanHttpNuGetCache" Condition="'$(CleanHttpNuGetCacheOnPack)' == 'true' and Exists('$(HttpNuGetCache)')">
    <Message Text="Cleaning $(HttpNuGetCache)" />
    <Exec Condition="'$(OS)' == 'Windows_NT'" Command="rd &quot;$(HttpNuGetCache)&quot; /q /s" />
    <Exec Condition="'$(OS)' != 'Windows_NT'" Command="rm -rf &quot;$(HttpNuGetCache)&quot;" />
  </Target>
  <Target Name="IncrementalCleanPackageOutput" DependsOnTargets="CleanPackageOutput" />
  <Target Name="_SetDefaultPackageReferencePack" Condition="'$(PackFolder)' == 'build' or '$(PackFolder)' == 'buildTransitive'" />
  <Target Name="_CollectInferenceCandidates" Inputs="@(PackInference)" Outputs="%(PackInference.Identity)-BATCH">
    <EvaluateWildcards Condition="'$(PackExclude)' != ''" Items="@(%(PackInference.Identity))" Wildcards="$(PackExclude)">
      <Output TaskParameter="NonMatchingItems" ItemName="InferenceCandidate" />
    </EvaluateWildcards>
  </Target>
  <Target Name="InferToolContents" Condition="'$(UsingMicrosoftNETSdk)' == 'true' and '$(PackAsTool)' == 'true'" DependsOnTargets="PackTool" />
  <Target Name="InferPackageContents" DependsOnTargets="$(InferPackageContentsDependsOn);_CollectInferenceCandidates" Returns="@(PackageFile)">
    <AssignTargetPath Condition="'%(ShouldPack)' == 'true' and '%(TargetPath)' == ''" Files="@(InferenceCandidate)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_InferenceCandidateWithTargetPath" />
    </AssignTargetPath>
  </Target>
  <Target Name="_UpdatePackageReferenceVersions" Condition="'$(UsingMicrosoftNETSdk)' == 'true' and '$(ManagePackageVersionsCentrally)' == 'true'" DependsOnTargets="RunResolvePackageDependencies" Inputs="@(PackageReference)" Outputs="|%(Identity)|" Returns="@(_CentrallyManagedDependency)" />
  <Target Name="_CollectPrimaryOutputDependencies" DependsOnTargets="BuildOnlySettings;RunResolvePackageDependencies;ResolveReferences" Returns="@(ImplicitPackageReference)">
    <Error Condition="'$(ManagePackageVersionsCentrally)' == 'true' and '$(UsingMicrosoftNETSdk)' != 'true'" Code="NG1003" Text="Centrally managed package versions is only supported when using the Microsoft.NET.Sdk." />
    <InferImplicitPackageReference Condition="'@(_TransitivePackageReference)' != '' and '@(PackageDependencies)' != ''" PackageDependencies="@(PackageDependencies)" PackageReferences="@(_TransitivePackageReference)">
      <Output TaskParameter="ImplicitPackageReferences" ItemName="ImplicitPackageReference" />
    </InferImplicitPackageReference>
  </Target>
  <Target Name="_ResolvePackageDependencies" Condition="'$(UsingMicrosoftNETSdk)' == 'true'" DependsOnTargets="RunResolvePackageDependencies" />
  <Target Name="InferPrimaryOutputDependencies" DependsOnTargets="_ResolvePackageDependencies;_CollectPrimaryOutputDependencies" Inputs="@(_PrimaryOutputRelatedFile)" Outputs="%(_PrimaryOutputRelatedFile.NuGetPackageId)" Returns="@(_InferredPackageFile)" />
  <Target Name="_SetInferPackageContentsDependsOn" />
  <Target Name="GetPackageContents" DependsOnTargets="$(GetPackageContentsDependsOn)" Returns="@(_PackageContent)">
    <Error Condition="'@(FromPackageReference)' != '' and '%(FromPackageReference.PathValue)' == ''" Code="NG0014" Text="In order to reference content from package '%(FromPackageReference.Identity)', make sure its package reference specifies GeneratePathProperty='true'." />
    <AssignPackagePath IsPackaging="%(PackageFile.IsPackaging)" Files="@(PackageFile)" KnownFolders="@(PackFolderKind)">
      <Output TaskParameter="AssignedFiles" ItemName="_PackageContent" />
    </AssignPackagePath>
  </Target>
  <Target Name="_AddPackageManifest" Condition="'$(IsPackable)' == 'true'" />
  <Target Name="_GetReferencedPackageContents" Condition="'$(_SupportsProjectReferences)' == 'true'" DependsOnTargets="$(_GetReferencedPackageContentsDependsOn)" Returns="@(PackageFile)">
    <Error Condition="'@(_NonNuGetizedProjectReference)' != ''" Code="NG0011" Text="Some project references cannot be properly packaged. Please install the NuGetizer package on the following projects: @(_NonNuGetizedProjectReference)." />
    <MSBuild Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_NuGetizedProjectReference)' != ''" Properties="%(_NuGetizedProjectReference.SetConfiguration); &#xD;&#xA;                         %(_NuGetizedProjectReference.SetPlatform); &#xD;&#xA;                         %(_NuGetizedProjectReference.SetTargetFramework); &#xD;&#xA;                         %(_NuGetizedProjectReference.SetPackFolder);&#xD;&#xA;                         BuildingPackage=$(BuildingPackage); &#xD;&#xA;                         DesignTimeBuild=false" RemoveProperties="%(_NuGetizedProjectReference.GlobalPropertiesToRemove)" Projects="@(_NuGetizedProjectReference)" Targets="GetPackageContents" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_ReferencedPackageContent" />
    </MSBuild>
  </Target>
  <Target Name="_SplitProjectReferencesByIsNuGetized" Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''" Inputs="@(_MSBuildProjectReferenceExistent)" Outputs="%(_MSBuildProjectReferenceExistent.Identity)-BATCH">
    <MSBuild Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); &#xD;&#xA;                         %(_MSBuildProjectReferenceExistent.SetPlatform);&#xD;&#xA;                         %(_MSBuildProjectReferenceExistent.SetTargetFramework)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)" Projects="@(_MSBuildProjectReferenceExistent)" Targets="GetTargetPathWithTargetPlatformMoniker" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="_ReferencedProjectTargetPath" />
    </MSBuild>
  </Target>
  <Target Name="_SetPropertiesFromCapabilities" />
  <Target Name="_SetBuildOutputFrameworkSpecific" Condition="'$(BuildOutputFrameworkSpecific)' == ''" />
  <Target Name="_MinVerClean" Condition="'$(GeneratePackageOnBuild)' == 'true'" DependsOnTargets="MinVer" />
  <Target Name="MinVer" Condition="'$(DesignTimeBuild)' != 'true' AND '$(MinVerSkip)' != 'true'">
    <Error Condition="'$(UsingMicrosoftNETSdk)' != 'true'" Code="MINVER0001" Text="MinVer only works in SDK-style projects." />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MSBuildProjectDirectory=$(MSBuildProjectDirectory)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerAutoIncrement=$(MinVerAutoIncrement)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerBuildMetadata=$(MinVerBuildMetadata)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerDefaultPreReleasePhase=$(MinVerDefaultPreReleasePhase)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerIgnoreHeight=$(MinVerIgnoreHeight)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerMinimumMajorMinor=$(MinVerMinimumMajorMinor)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerTagPrefix=$(MinVerTagPrefix)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerVerbosity=$(MinVerVerbosity)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [input] MinVerVersionOverride=$(MinVerVersionOverride)" />
    <Exec ConsoleToMSBuild="true" Command="dotnet &quot;$(MSBuildThisFileDirectory)../minver/$(MinVerTargetFramework)/MinVer.dll&quot; @(MinVerInputs->'%(Identity)', ' ')" StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" ItemName="MinVerConsoleOutput" />
    </Exec>
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] MinVerVersion=$(MinVerVersion)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] MinVerMajor=$(MinVerMajor)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] MinVerMinor=$(MinVerMinor)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] MinVerPatch=$(MinVerPatch)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] MinVerPreRelease=$(MinVerPreRelease)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] MinVerBuildMetadata=$(MinVerBuildMetadata)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] AssemblyVersion=$(AssemblyVersion)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] FileVersion=$(FileVersion)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] PackageVersion=$(PackageVersion)" />
    <Message Importance="$(MinVerDetailed)" Text="MinVer: [output] Version=$(Version)" />
  </Target>
  <Target Name="SlnGen" DependsOnTargets="$(SlnGenDependsOn)">
    <Microsoft.VisualStudio.SlnGen.Tasks.SlnGenToolTask InheritGlobalProperties="$([MSBuild]::ValueOrDefault('$(SlnGenInheritGlobalProperties)', 'true'))" MSBuildBinPath="$(MSBuildBinPath)" ProjectFullPath="$(MSBuildProjectFullPath)" GlobalPropertiesToRemove="$(SlnGenGlobalPropertiesToRemove)" GlobalProperties="$(SlnGenGlobalProperties)" Debug="$([MSBuild]::ValueOrDefault('$(SlnGenDebug)', 'true'))" BuildingSolutionFile="$([MSBuild]::ValueOrDefault('$(BuildingSolutionFile)', 'false'))" />
  </Target>
  <Target Name="_SourceLinkHasSingleProvider">
    <Microsoft.SourceLink.Common.SourceLinkHasSingleProvider ProviderTargets="$(SourceLinkUrlInitializerTargets)">
      <Output TaskParameter="HasSingleProvider" ItemName="SourceLinkHasSingleProvider" />
    </Microsoft.SourceLink.Common.SourceLinkHasSingleProvider>
  </Target>
  <Target Name="_InitializeSourceControlInformationFromSourceControlManager" Condition="'$(EnableSourceControlManagerQueries)' == 'true'" DependsOnTargets="InitializeSourceControlInformationFromSourceControlManager;_SourceLinkHasSingleProvider;$(SourceControlManagerUrlTranslationTargets);SourceControlManagerPublishTranslatedUrls" />
  <Target Name="SourceControlManagerPublishTranslatedUrls" />
  <Target Name="_SetSourceLinkFilePath" />
  <Target Name="_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles" Condition="'$(EmbedUntrackedSources)' == 'true' and '$(EmbedAllSources)' != 'true' and '$(DebugType)' != 'none' and '$(EnableSourceControlManagerQueries)' == 'true'" DependsOnTargets="BeforeCompile;SetEmbeddedFilesFromSourceControlManagerUntrackedFiles" />
  <Target Name="_InitializeSourceRootMappedPathsOpt" Condition="'$(SourceRootMappedPathsFeatureSupported)' == 'true'" DependsOnTargets="InitializeSourceRootMappedPaths" />
  <Target Name="_GenerateSourceLinkFile" Condition="'$(EnableSourceLink)' == 'true' and '$(DebugType)' != 'none'" DependsOnTargets="_SetSourceLinkFilePath;$(_GenerateSourceLinkFileDependsOnTargets);_InitializeSourceRootMappedPathsOpt;$(SourceLinkUrlInitializerTargets)" Outputs="$(SourceLink)">
    <Microsoft.SourceLink.Common.GenerateSourceLinkFile OutputFile="$(SourceLink)" SourceRoots="@(SourceRoot)" />
  </Target>
  <Target Name="GenerateSourceLinkFile" Condition="'$(SourceControlInformationFeatureSupported)' == 'true'" DependsOnTargets="InitializeSourceControlInformation;_GenerateSourceLinkFile" />
  <Target Name="InitializeSourceControlInformationFromSourceControlManager">
    <Microsoft.Build.Tasks.Git.LocateRepository RemoteName="$(GitRepositoryRemoteName)" Path="$(MSBuildProjectDirectory)" ConfigurationScope="$(GitRepositoryConfigurationScope)">
      <Output TaskParameter="RepositoryId" ItemName="_GitRepositoryId" />
      <Output TaskParameter="Url" ItemName="ScmRepositoryUrl" />
      <Output TaskParameter="Roots" ItemName="SourceRoot" />
      <Output TaskParameter="RevisionId" ItemName="SourceRevisionId" Condition="'$(SourceRevisionId)' == ''" />
    </Microsoft.Build.Tasks.Git.LocateRepository>
  </Target>
  <Target Name="SetEmbeddedFilesFromSourceControlManagerUntrackedFiles" DependsOnTargets="InitializeSourceControlInformationFromSourceControlManager">
    <Microsoft.Build.Tasks.Git.GetUntrackedFiles RepositoryId="$(_GitRepositoryId)" Files="@(Compile)" ConfigurationScope="$(GitRepositoryConfigurationScope)" ProjectDirectory="$(MSBuildProjectDirectory)">
      <Output TaskParameter="UntrackedFiles" ItemName="EmbeddedFiles" />
    </Microsoft.Build.Tasks.Git.GetUntrackedFiles>
  </Target>
  <Target Name="_InitializeGitHubSourceLinkUrl" Inputs="@(SourceRoot)" Outputs="|%(Identity)|">
    <Microsoft.SourceLink.GitHub.GetSourceLinkUrl IsSingleProvider="$(SourceLinkHasSingleProvider)" Hosts="@(SourceLinkGitHubHost)" SourceRoot="@(SourceRoot)" RepositoryUrl="$(PrivateRepositoryUrl)">
      <Output TaskParameter="SourceLinkUrl" ItemName="_SourceLinkUrlToUpdate" />
    </Microsoft.SourceLink.GitHub.GetSourceLinkUrl>
  </Target>
  <Target Name="TranslateGitHubUrlsInSourceControlInformation">
    <Microsoft.SourceLink.GitHub.TranslateRepositoryUrls IsSingleProvider="$(SourceLinkHasSingleProvider)" Hosts="@(SourceLinkGitHubHost)" SourceRoots="@(SourceRoot)" RepositoryUrl="$(ScmRepositoryUrl)">
      <Output TaskParameter="TranslatedRepositoryUrl" ItemName="ScmRepositoryUrl" />
      <Output TaskParameter="TranslatedSourceRoots" ItemName="_TranslatedSourceRoot" />
    </Microsoft.SourceLink.GitHub.TranslateRepositoryUrls>
  </Target>
  <Target Name="SaveVersionNumberCentrally" DependsOnTargets="Pack">
    <JustInTimeVersioning.SaveVersionNumberCentrally PackageName="$(PackageId)" Version="$(PackageVersion)" Configuration="$(Configuration)" />
  </Target>
  <Target Name="InitJustInTimeVersioning">
    <MakeDir Condition="!Exists($(JustInTimeVersioningInitDirectory)/Packages)" Directories="$(JustInTimeVersioningInitDirectory)/Packages" />
    <WriteLinesToFile Condition="!Exists($(JustInTimeVersioningInitPackagesDirectory)@(Configuration).props) Or '$(ForceReinitJustInTimeVersioning)' == 'true'" File="$(JustInTimeVersioningInitPackagesDirectory)@(Configuration).props" Lines="$(JustInTimeVersioningPropsFileInitialContents)" />
    <WriteLinesToFile Condition="!Exists($(JustInTimeVersioningInitPackagesDirectory)@(Configuration).props) Or '$(ForceReinitJustInTimeVersioning)' == 'true'" File="$(JustInTimeVersioningInitPackagesDirectory)@(Configuration).json" Lines="$(JustInTimeVersioningJsonFileInitialContents)" />
    <Warning Condition="Exists($(JustInTimeVersioningInitPackagesDirectory)@(Configuration).props) And '$(ForceReinitJustInTimeVersioning)' != 'true'" File="$(JustInTimeVersioningInitPackagesDirectory)@(Configuration).props." Code="JITV001PROPS" Text="The JustInTimeVersioning '.props' file for configuration @(Configuration) already exists at the following location: %0a'$(JustInTimeVersioningInitPackagesDirectory)@(Configuration).props.'%0a%0aIf you intended to overwrite this file, either delete it and re-run this command or run it again with the global property ForceReinitJustInTimeVersioning set to 'true.'" />
    <Warning Condition="Exists($(JustInTimeVersioningInitPackagesDirectory)@(Configuration).json) And '$(ForceReinitJustInTimeVersioning)' != 'true'" File="$(JustInTimeVersioningInitPackagesDirectory)@(Configuration).json" Code="JITV001JSON" Text="The JustInTimeVersioning '.json' file for configuration @(Configuration) already exists at the following location: %0a'$(JustInTimeVersioningInitPackagesDirectory)@(Configuration).json.'%0a%0aIf you intended to overwrite this file, either delete it and re-run this command or run it again with the global property ForceReinitJustInTimeVersioning set to 'true.'" />
  </Target>
  <Target Name="GitInfoReport" DependsOnTargets="GitInfo;GitVersion">
    <Message Importance="$(GitInfoReportImportance)" Text="Git Info:&#xD;&#xA;  GitInfoBaseDir:       $(GitInfoBaseDir)&#xD;&#xA;  GitRoot:              $(GitRoot)&#xD;&#xA;  GitRepositoryUrl      $(GitRepositoryUrl)&#xD;&#xA;  GitBranch:            $(GitBranch)&#xD;&#xA;  GitCommit:            $(GitCommit)&#xD;&#xA;  GitSha:               $(GitSha)&#xD;&#xA;  GitCommitDate:        $(GitCommitDate)&#xD;&#xA;  GitBaseVersion:       $(GitBaseVersion)&#xD;&#xA;  GitBaseVersionSource: $(GitBaseVersionSource)&#xD;&#xA;  GitBaseVersionMajor:  $(GitBaseVersionMajor)&#xD;&#xA;  GitBaseVersionMinor:  $(GitBaseVersionMinor)&#xD;&#xA;  GitBaseVersionPatch:  $(GitBaseVersionPatch)&#xD;&#xA;  GitCommits:           $(GitCommits)&#xD;&#xA;  GitTag:               $(GitTag)&#xD;&#xA;  GitBaseTag:           $(GitBaseTag)&#xD;&#xA;  GitSemVerMajor:       $(GitSemVerMajor)&#xD;&#xA;  GitSemVerMinor:       $(GitSemVerMinor)&#xD;&#xA;  GitSemVerPatch:       $(GitSemVerPatch)&#xD;&#xA;  GitSemVerLabel:       $(GitSemVerLabel)&#xD;&#xA;  GitSemVerDashLabel:   $(GitSemVerDashLabel)&#xD;&#xA;  GitSemVerSource:      $(GitSemVerSource)&#xD;&#xA;" />
  </Target>
  <Target Name="GitInfo" DependsOnTargets="$(GitInfoDependsOn)" Returns="@(GitInfo)" />
  <Target Name="_EnsureGit">
    <Exec ContinueOnError="true" EchoOff="true" ConsoleToMSBuild="true" Command="$(GitExe) --version" StandardOutputImportance="low" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitOutput" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Error Condition="'$(MSBuildLastExitCode)' != '0'" Text="Failed to run `git --version`. Git may not be properly installed: %0A $(_GitOutput)" />
    <Error Condition="$([System.Version]::Parse('$(_GitCurrentVersion)').CompareTo($([System.Version]::Parse('$(GitMinVersion)')))) &lt; 0" Text="Required minimum git version is $(GitMinVersion) but found $(_GitCurrentVersion)." />
  </Target>
  <Target Name="_GitRoot" Condition="'$(GitRoot)' == ''" Returns="$(GitRoot)">
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-parse --show-toplevel" StandardOutputImportance="low" WorkingDirectory="$(GitInfoBaseDir)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitOutput" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="'$(MSBuildLastExitCode)' == '0' And '$(CygPathExe)' != ''" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="&quot;$(CygPathExe)&quot; -w &quot;$(_GitOutput)&quot;" StandardOutputImportance="low" WorkingDirectory="$(GitInfoBaseDir)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitOutput" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="'$(_IsGitFile)' == 'true'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-parse --is-inside-work-tree" StandardOutputImportance="low" WorkingDirectory="$(GitInfoBaseDir)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitIsWorkTree" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="'$(_IsGitFile)' == 'true' and '$(_IsGitWorkTree)' == 'true'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-parse --git-common-dir" StandardOutputImportance="low" WorkingDirectory="$(GitInfoBaseDir)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitCommonDir" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="'$(_IsGitFile)' == 'true' and '$(_IsGitWorkTree)' == 'true' And '$(MSBuildLastExitCode)' == '0' And '$(CygPathExe)' != ''" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="&quot;$(CygPathExe)&quot; -w &quot;$(_GitCommonDir)&quot;" StandardOutputImportance="low" WorkingDirectory="$(GitInfoBaseDir)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitCommonDir" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Message Condition="'$(GitRoot)' != ''" Importance="$(GitInfoReportImportance)" Text="Determined Git repository root as '$(GitRoot)'" />
    <Message Condition="'$(GitRoot)' != ''" Importance="$(GitInfoReportImportance)" Text="Determined Git dir as '$(GitDir)'" />
    <Warning Condition="'$(GitRoot)' == ''" Code="GI001" Text="Directory $(GitInfoBaseDir) is not in a Git repository. Cannot determine Git repository root." />
    <Exec Condition="'$(GitRoot)' != ''" EchoOff="true" StdOutEncoding="utf-8" IgnoreExitCode="true" Command="$(GitExe) diff --quiet HEAD" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ExitCode" ItemName="GitIsDirty" />
    </Exec>
    <WriteLinesToFile File="$(_GitIsDirtyFile)" WriteOnlyWhenDifferent="true" Lines="$(GitIsDirty)" />
  </Target>
  <Target Name="_GitInputs" DependsOnTargets="_GitRoot" Returns="@(_GitInput)">
    <CreateItem Condition="Exists('$(_GitPackedRefs)')" Include="$(_GitPackedRefs)">
      <Output TaskParameter="Include" ItemName="_GitInput" />
    </CreateItem>
    <CreateItem Include="$([System.IO.Path]::Combine('$(GitDir)', 'refs', 'heads', '**', '*.*'))">
      <Output TaskParameter="Include" ItemName="_GitInput" />
    </CreateItem>
    <CreateItem Include="$([System.IO.Path]::Combine('$(GitDir)', 'refs', 'tags', '*.*'))">
      <Output TaskParameter="Include" ItemName="_GitInput" />
    </CreateItem>
    <Delete Condition="Exists('$(_GitInfoFile)') And '$(SkipReadGitCache)' == 'true'" Files="$(_GitInfoFile)" />
  </Target>
  <Target Name="_GitClearCache" Condition="Exists('$(_GitInfoFile)')" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)">
    <Delete Files="$(_GitInfoFile)" />
  </Target>
  <Target Name="_GitReadCache" Condition="Exists('$(_GitInfoFile)') And '$(SkipReadGitCache)' != 'true' ">
    <CreateItem AdditionalMetadata="$(_GitCachedInfo.Split(';'))" Include="GitInfo">
      <Output TaskParameter="Include" ItemName="GitInfo" />
    </CreateItem>
  </Target>
  <Target Name="_GitRepositoryUrl" Condition="'$(GitRoot)' != '' and '$(GitRepositoryUrl)' == ''" DependsOnTargets="_GitRoot" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitRepositoryUrl)">
    <Exec Condition="'$(GitRepositoryUrl)' == ''" ContinueOnError="true" IgnoreExitCode="true" ConsoleToMSBuild="true" Command="$(GitExe) config --get remote.$(GitRemote).url" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitRepositoryUrl" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Warning Condition="'$(MSBuildLastExitCode)' != '0'" Code="GI002" Text="Could not retrieve repository url for remote '$(GitRemote)'" />
  </Target>
  <Target Name="_GitCommitDate" Condition="'$(GitRoot)' != '' And '$(GitCommitDate)' == ''" DependsOnTargets="_GitRoot" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitCommitDate)">
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) show --format=$(GitCommitDateFormat) -s" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCommitDate" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
  </Target>
  <Target Name="_GitBranch" Condition="'$(GitBranch)' == ''" DependsOnTargets="_GitInputs" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitBranch)">
    <Exec Condition=" '$(GitBranch)' == '' " ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) name-rev --name-only $(GitNameRevOptions) HEAD" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitBranch" />
    </Exec>
  </Target>
  <Target Name="_GitCommit" Condition="'$(GitRoot)' != '' And '$(GitCommit)' == ''" DependsOnTargets="_GitRoot" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitCommit)">
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) -c log.showSignature=false log --format=format:$(_ShortShaFormat) -n 1" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCommit" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) -c log.showSignature=false log --format=format:$(_LongShaFormat) -n 1" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitSha" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
  </Target>
  <Target Name="_GitPopulateInfo" />
  <Target Name="GitVersion" DependsOnTargets="$(GitVersionDependsOn)" Returns="@(GitInfo)" />
  <Target Name="_GitBaseVersionFile" Condition="'$(GitBaseVersion)' == '' And Exists('$(GitVersionFile)')" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitBaseVersion)">
    <Error Condition="'$(IsValidGitBaseVersion)' == 'False'" Text="$(GitVersionFile) does not contain a valid base version (found '$(GitBaseVersion)', regex: $(GitBaseVersionRegex))." />
    <Message Importance="normal" Text="Using base version from version file $(GitVersionFile)'" />
    <Exec Condition="'$(MSBuildLastExitCode)' == '0' And '$(CygPathExe)' != ''" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="&quot;$(CygPathExe)&quot; -u &quot;$(_GitVersionFile)&quot;" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitVersionFile" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) -c log.showSignature=false log -n 1 --format=format:$(_ShortShaFormat) &quot;$(_GitVersionFile)&quot;" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitLastBump" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Warning Condition="'$(MSBuildLastExitCode)' != '0' Or '$(_GitLastBump)' == ''" Code="GI003" Text="Could not retrieve last commit for $(GitVersionFile). Defaulting to its declared version '$(GitBaseVersion)' and no additional commits." />
    <Exec Condition="'$(MSBuildLastExitCode)' == '0' And '$(CygPathExe)' != '' And '$(_GitCommitsRelativeTo)' != ''" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="&quot;$(CygPathExe)&quot; -u $(_GitCommitsRelativeTo)" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="high">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitCommitsRelativeTo" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="$(MSBuildLastExitCode) == '0' And '$(_GitLastBump)' != ''" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-list --count --full-history $(_GitCommitsIgnoreMerges) &quot;$(_GitLastBump)&quot;..HEAD $(_GitCommitsRelativeTo)" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCommits" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Warning Condition="'$(MSBuildLastExitCode)' != '0'" Code="GI004" Text="Could not retrieve commits since '$(_GitLastBump)'. Defaulting to zero." />
  </Target>
  <Target Name="_GitBaseVersionBranch" Condition="'$(GitBaseVersion)' == '' And '$(GitIgnoreBranchVersion)' != 'true' " DependsOnTargets="_GitBranch" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitBaseVersion)">
    <Message Condition="'$(IsValidGitBaseVersion)' == 'false'" Importance="low" Text="Git branch '$(GitBranch)' cannot be used as a version specifier. Skipping branch-based version processing." />
    <Exec Condition="'$(IsValidGitBaseVersion)' == 'true'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) merge-base --fork-point &quot;$(GitDefaultBranch)&quot;" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitForkPoint" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Warning Condition="'$(IsValidGitBaseVersion)' == 'true' And '$(MSBuildLastExitCode)' != '0'" Code="GI005" Text="Could not retrieve first commit where branch $(GitBranch) forked from $(GitDefaultBranch). Defaulting to zero commits." />
    <Exec Condition="'$(IsValidGitBaseVersion)' == 'true' and '$(MSBuildLastExitCode)' == '0'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-list --count &quot;$(_GitForkPoint)&quot;..HEAD" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCommits" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
  </Target>
  <Target Name="_GitBaseVersionTagExists" Condition="'$(GitBaseVersion)' == '' And '$(GitIgnoreTagVersion)' != 'true' " DependsOnTargets="_GitBranch;_GitCommit" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitBaseTag)">
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" IgnoreExitCode="true" ConsoleToMSBuild="true" Command="$(GitExe) describe --tags --match=$(GitTagRegex) --abbrev=0" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitBaseTag" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Message Condition="'$(GitBaseTag)' == ''" Importance="low" Text="No git tags exist. Skipping tag processing." />
  </Target>
  <Target Name="_GitBaseVersionTag" Condition="'$(GitBaseVersion)' == '' And '$(GitIgnoreTagVersion)' != 'true' And '$(GitBaseTag)' != ''" DependsOnTargets="_GitBaseVersionTagExists" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitBaseVersion)">
    <Exec ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) describe --match=$(GitTagRegex) --tags" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitTag" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Message Condition="'$(IsValidGitBaseVersion)' == 'false'" Importance="low" Text="Current tag '$(GitBaseTag)' cannot be used as a version specifier. Skipping tag-based version processing." />
    <Exec Condition="'$(IsValidGitBaseVersion)' == 'true'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-list &quot;$(GitBaseTag)&quot; -n 1" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="_GitBaseTagCommit" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="'$(IsValidGitBaseVersion)' == 'true' And '$(_GitBaseTagCommit)' != '' And '$(GitCommit)' != '' And '$(GitCommit)' != '$(GitDefaultCommit)'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-list --count &quot;$(_GitBaseTagCommit)&quot;..&quot;$(GitCommit)&quot;" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCommits" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Warning Condition="'$(IsValidGitBaseVersion)' == 'true' And '$(MSBuildLastExitCode)' != '0'" Code="GI006" Text="Failed to retrieve commit count from tag '$(GitBaseTag)' to tip $(GitCommit). Defaulting to zero commits." />
  </Target>
  <Target Name="_GitBaseVersionFallback" Condition="'$(GitBaseVersion)' == '' And '$(GitDefaultVersion)' != ''" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)" Returns="$(GitBaseVersion)">
    <Error Condition="'$(IsValidGitDefaultVersion)' == 'false'" Text="Fallback version %24(GitDefaultVersion) value of '$(GitDefaultVersion)' is not a valid SemVer 2.0 string." />
    <Exec Condition="'$(IsValidGitDefaultVersion)' == 'true' And '$(GitCommit)' != '' And '$(GitCommit)' != '$(GitDefaultCommit)'" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" ConsoleToMSBuild="true" Command="$(GitExe) rev-list --count $(GitCommit)" StandardOutputImportance="low" WorkingDirectory="$(GitRoot)" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCommits" />
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
  </Target>
  <Target Name="_GitValidateBaseVersion" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)">
    <Error Condition="'$(GitBaseVersion)' == ''" Text="Failed to find a valid base version to use. Please make sure you have a %24(GitVersionFile) file (defaults to '$(GitVersionFile)'), branch, tag or %24(GitDefaultVersion) property with a valid SemVer 2.0 string." />
    <Error Condition="'$(IsValidGitBaseVersion)' == 'false'" Text="Current %24(GitBaseVersion) value of '$(GitBaseVersion)' is not a valid SemVer 2.0 string." />
  </Target>
  <Target Name="_GitPopulateVersionInfo" />
  <Target Name="_GitWriteCache" Condition="'$(SkipWriteGitCache)' != 'true'" Inputs="@(_GitInput)" Outputs="$(_GitInfoFile)">
    <MakeDir Condition="!Exists('$(_GitInfoFileDir)')" Directories="$(_GitInfoFileDir)" />
    <WriteLinesToFile File="$(_GitInfoFile)" Lines="$(_GitInfoContent)" Overwrite="true" />
  </Target>
  <Target Name="GitThisAssembly" Condition="'$(GitThisAssembly)' == 'true'" DependsOnTargets="$(GitThisAssemblyDependsOn)" />
  <Target Name="_GitGenerateThisAssembly" Condition="'$(GitThisAssembly)' == 'true'" Inputs="@(_GitInput)" Outputs="$(GitInfoThisAssemblyFile)">
    <MakeDir Condition="!Exists('$(GitInfoThisAssemblyDir)')" Directories="$(GitInfoThisAssemblyDir)" />
    <WriteLinesToFile File="$(GitInfoThisAssemblyFile)" Lines="$(_ThisAssemblyContent)" Overwrite="true" />
  </Target>
  <Target Name="SetGitExe" Condition="'$(GitExe)' == '' And '$(OS)' == 'Windows_NT'">
    <Exec ContinueOnError="true" EchoOff="true" IgnoreExitCode="true" Command="git --version" StandardOutputImportance="low" StandardErrorImportance="low">
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
    <Exec Condition="'$(GitExe)' == ''" ContinueOnError="true" EchoOff="true" StdOutEncoding="utf-8" Command="$(MSBuildThisFileDirectory)wslrun.cmd git --version" StandardOutputImportance="low" StandardErrorImportance="high">
      <Output TaskParameter="ExitCode" ItemName="MSBuildLastExitCode" />
    </Exec>
  </Target>
  <Target Name="SetAssemblyVersion" DependsOnTargets="GetPackageVersion" />
  <Target Name="SetPackageAuthors" />
  <Target Name="SetPackageOwners" />
  <Target Name="SetPackageCopyright" />
  <Target Name="CustomAfterCentralPackageVersions">
    <Message Importance="High" Text="CentralPackagesFile: $(CentralPackagesFile)" />
    <Message Importance="High" Text="Build Configuration: $(Configuration)" />
  </Target>
  <Target Name="AssignNuGetizerPropsForTestingProject" />
  <Target Name="PushAzure" Condition="'$(GeneratePackageOnBuild)' == 'true'" DependsOnTargets="Pack;GetPackageMetadata;MinVer">
    <Exec ContinueOnError="true" Command="dotnet nuget delete $(PackageId) $(PackageVersion) -s Azure --non-interactive -k 'az'" />
    <Exec Condition="Exists('$(PackageTargetPath)')" Command="dotnet nuget push $(PackageTargetPath) -s Azure -k 'az' --skip-duplicate" />
  </Target>
  <Target Name="PushGitHub" Condition="'$(GeneratePackageOnBuild)' == 'true'" DependsOnTargets="Pack;GetPackageMetadata;MinVer">
    <Exec Command="echo '$(DeleteGitHubPackageVersionScript)' " />
    <Exec ContinueOnError="true" Command="$(DeleteGitHubPackageVersionScript)" />
    <Exec Condition="Exists('$(PackageTargetPath)')" Command="dotnet nuget push $(PackageTargetPath) -s GitHub -k $GIT_TOKEN" />
  </Target>
  <Target Name="SetPackageDescription" DependsOnTargets="SetLastMinutePackageMetadata" />
  <Target Name="SetLastMinutePackageMetadata" />
  <Target Name="SetPackageProjectUrl" DependsOnTargets="GitInfo" />
  <Target Name="EnsurePackageReadme" DependsOnTargets="GitInfo;GetPackageMetadata">
    <ReadLinesFromFile File="$(MSBuildProjectDirectory)README.md">
      <Output TaskParameter="Lines" ItemName="ReadmeFileContents" />
    </ReadLinesFromFile>
    <WriteLinesToFile Condition="!Exists('$(MSBuildProjectDirectory)README.md')" File="$(IntermediateOutputPath)README.md" Lines="@(ReadmeFileContents)" Overwrite="true" />
  </Target>
  <Target Name="SetPackageTags" />
  <Target Name="PushLocal" Condition="('$(Configuration)' == 'Local' Or '$(Configuration)' == 'Testing') And '$(GeneratePackageOnBuild)' == 'true'">
    <Exec ContinueOnError="true" Command="dotnet nuget delete $(PackageId) $(PackageVersion) -s Local --non-interactive" />
    <Exec Condition="Exists('$(PackageTargetPath)')" Command="dotnet nuget push $(PackageTargetPath) -s Local" />
  </Target>
  <Target Name="ShowConfigurationSpecificPackagesVersionFile">
    <Message Importance="High" Text="ConfigurationSpecificPackagesVersionFile: $(ConfigurationSpecificPackagesVersionFile)" />
  </Target>
  <Target Name="CheckPackageReferences" Condition=" '$(EnableCentralPackageVersions)' != 'false' And '$(DesignTimeBuild)' != 'true' And @(PackageReference-&gt;Count()) &gt; 0 ">
    <Error Condition=" '$(EnableGlobalPackageReferences)' != 'false' And @(_DuplicateGlobalPackageReference-&gt;Count()) &gt; 0" File="$(MSBuildProjectFullPath)" Text="The package reference '%(_DuplicateGlobalPackageReference.Identity)' is already defined as a GlobalPackageReference in '$(CentralPackagesFile)'.  Individual projects do not need to include a PackageReference if a GlobalPackageReference is declared." />
    <Error Condition=" @(_PackageReferenceWithVersion-&gt;Count()) &gt; 0 And '%(_PackageReferenceWithVersion.IsImplicitlyDefined)' != 'true' And '$(EnablePackageVersionOverride)' != 'false' " File="$(MSBuildProjectFullPath) " Text="The package reference '%(_PackageReferenceWithVersion.Identity)' should not specify a version.  Please specify the version in '$(CentralPackagesFile)' or set VersionOverride to override the centrally defined version." />
    <Error Condition=" @(_PackageReferenceWithVersion-&gt;Count()) &gt; 0 And '%(_PackageReferenceWithVersion.IsImplicitlyDefined)' != 'true' And '$(EnablePackageVersionOverride)' == 'false'" File="$(MSBuildProjectFullPath) " Text="The package reference '%(_PackageReferenceWithVersion.Identity)' should not specify a version.  Please specify the version in '$(CentralPackagesFile)'." />
    <Error Condition=" '%(PackageReference.IsImplicitlyDefined)' != 'true' And '%(PackageReference.Version)' == '' " File="$(MSBuildProjectFullPath)" Text="The package reference '%(PackageReference.Identity)' must have a version defined in '$(CentralPackagesFile)'." />
    <Error Condition=" @(_PackageReferenceWithVersionOverrideButNoCentralVersion-&gt;Count()) &gt; 0 " File="$(MSBuildProjectFullPath)" Text="The package reference '%(_PackageReferenceWithVersionOverrideButNoCentralVersion.Identity)' must have a version defined in '$(CentralPackagesFile)'." />
  </Target>
  <Target Name="_SetTargetFrameworkMonikerAttribute" />
  <Target Name="ResolvePackageDependenciesForBuild" Condition=" ('$(DesignTimeBuild)' != 'true' and '$(_CleaningWithoutRebuilding)' != 'true')&#xD;&#xA;                      Or Exists('$(ProjectAssetsFile)')" DependsOnTargets="$(ResolvePackageDependenciesForBuildDependsOn)" />
  <Target Name="_ResolveCompilerVersion" Condition="'$(CompilerApiVersion)' == '' And&#xD;&#xA;                     ('$(Language)' == 'C#' Or '$(Language)' == 'VB') And&#xD;&#xA;                     Exists('$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll')">
    <GetAssemblyIdentity AssemblyFiles="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll">
      <Output TaskParameter="Assemblies" ItemName="_CodeAnalysisIdentity" />
    </GetAssemblyIdentity>
  </Target>
  <Target Name="ResolvePackageAssets" Condition="('$(DesignTimeBuild)' != 'true' Or Exists('$(ProjectAssetsFile)')) And '$(SkipResolvePackageAssets)' != 'true'" DependsOnTargets="ProcessFrameworkReferences;_DefaultMicrosoftNETPlatformLibrary;_ComputePackageReferencePublish;_ResolveCompilerVersion">
    <ResolvePackageAssets ContinueOnError="$(ContinueOnError)" DotNetAppHostExecutableNameWithoutExtension="$(_DotNetAppHostExecutableNameWithoutExtension)" DisableFrameworkAssemblies="$(DisableLockFileFrameworks)" EnsureRuntimePackageDependencies="$(EnsureRuntimePackageDependencies)" EmitAssetsLogMessages="$(EmitAssetsLogMessages)" RuntimeIdentifier="$(RuntimeIdentifier)" SatelliteResourceLanguages="$(SatelliteResourceLanguages)" DisableTransitiveFrameworkReferences="$(DisableTransitiveFrameworkReferences)" RuntimeFrameworks="@(RuntimeFramework)" IsSelfContained="$(SelfContained)" ProjectPath="$(MSBuildProjectFullPath)" ProjectAssetsCacheFile="$(ProjectAssetsCacheFile)" CopyLocalRuntimeTargetAssets="$(CopyLocalRuntimeTargetAssets)" TargetFramework="$(TargetFramework)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" ShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)" VerifyMatchingImplicitPackageVersion="$(VerifyMatchingImplicitPackageVersion)" ExpectedPlatformPackages="@(ExpectedPlatformPackages)" DisablePackageAssetsCache="$(DisablePackageAssetsCache)" ProjectAssetsFile="$(ProjectAssetsFile)" ProjectLanguage="$(Language)" DisableTransitiveProjectReferences="$(DisableTransitiveProjectReferences)" CompilerApiVersion="$(CompilerApiVersion)" DesignTimeBuild="$(DesignTimeBuild)" PackageReferences="@(PackageReference)" MarkPackageReferencesAsExternallyResolved="$(MarkPackageReferencesAsExternallyResolved)">
      <Output TaskParameter="Analyzers" ItemName="ResolvedAnalyzers" />
      <Output TaskParameter="ApphostsForShimRuntimeIdentifiers" ItemName="_ApphostsForShimRuntimeIdentifiersResolvePackageAssets" />
      <Output TaskParameter="ContentFilesToPreprocess" ItemName="_ContentFilesToPreprocess" />
      <Output TaskParameter="FrameworkAssemblies" ItemName="ResolvedFrameworkAssemblies" />
      <Output TaskParameter="FrameworkReferences" ItemName="TransitiveFrameworkReference" />
      <Output TaskParameter="NativeLibraries" ItemName="NativeCopyLocalItems" />
      <Output TaskParameter="ResourceAssemblies" ItemName="ResourceCopyLocalItems" />
      <Output TaskParameter="RuntimeAssemblies" ItemName="RuntimeCopyLocalItems" />
      <Output TaskParameter="RuntimeTargets" ItemName="RuntimeTargetsCopyLocalItems" />
      <Output TaskParameter="CompileTimeAssemblies" ItemName="ResolvedCompileFileDefinitions" />
      <Output TaskParameter="TransitiveProjectReferences" ItemName="_TransitiveProjectReferences" />
      <Output TaskParameter="PackageFolders" ItemName="AssetsFilePackageFolder" />
      <Output TaskParameter="PackageDependencies" ItemName="PackageDependencies" />
    </ResolvePackageAssets>
  </Target>
  <Target Name="ResolvePackageDependenciesDesignTime" DependsOnTargets="RunResolvePackageDependencies;ResolveAssemblyReferencesDesignTime" Returns="@(_PackageDependenciesDesignTime)">
    <PreprocessPackageDependenciesDesignTime DefaultImplicitPackages="$(DefaultImplicitPackages)" TargetFramework="$(TargetFramework)" PackageDefinitions="@(PackageDefinitions)" PackageDependencies="@(PackageDependencies)">
      <Output TaskParameter="PackageDependenciesDesignTime" ItemName="_PackageDependenciesDesignTime" />
    </PreprocessPackageDependenciesDesignTime>
  </Target>
  <Target Name="CollectSDKReferencesDesignTime" DependsOnTargets="CollectPackageReferences" Returns="@(_SDKReference)">
    <CollectSDKReferencesDesignTime SdkReferences="@(SdkReference)" DefaultImplicitPackages="$(DefaultImplicitPackages)" PackageReferences="@(PackageReference)">
      <Output TaskParameter="SDKReferencesDesignTime" ItemName="_SDKReference" />
    </CollectSDKReferencesDesignTime>
  </Target>
  <Target Name="CollectResolvedSDKReferencesDesignTime" DependsOnTargets="ResolveSDKReferencesDesignTime;CollectPackageReferences" Returns="@(_ResolvedSDKReference)">
    <CollectSDKReferencesDesignTime SdkReferences="@(ResolvedSdkReference)" DefaultImplicitPackages="$(DefaultImplicitPackages)" PackageReferences="@(PackageReference)">
      <Output TaskParameter="SDKReferencesDesignTime" ItemName="_ResolvedSDKReference" />
    </CollectSDKReferencesDesignTime>
  </Target>
  <Target Name="RunProduceContentAssets" Condition="'@(_ContentFilesToPreprocess)' != '' and '$(_CleaningWithoutRebuilding)' != 'true'" DependsOnTargets="ResolvePackageAssets">
    <ProduceContentAssets ContentFileDependencies="@(_ContentFilesToPreprocess)" ProduceOnlyPreprocessorFiles="true" ContentPreprocessorOutputDirectory="$(ContentPreprocessorOutputDirectory)" ContentPreprocessorValues="@(PreprocessorValue)" ProjectLanguage="$(Language)">
      <Output TaskParameter="CopyLocalItems" ItemName="_ContentCopyLocalItems" />
      <Output TaskParameter="ProcessedContentItems" ItemName="_ProcessedContentItems" />
      <Output TaskParameter="ProcessedContentItems" ItemName="FileWrites" />
    </ProduceContentAssets>
    <CreateItem Condition="'@(_ProcessedContentItems)' != ''" Include="@(_ProcessedContentItems)">
      <Output TaskParameter="Include" ItemName="%(_ProcessedContentItems.ProcessedItemType)" />
    </CreateItem>
  </Target>
  <Target Name="ResolveLockFileReferences" DependsOnTargets="ResolvePackageAssets">
    <JoinItems LeftKey="FileName" Left="@(ResolvedCompileFileDefinitions)" LeftMetadata="*" RightKey="" RightMetadata="*" Right="@(Reference)">
      <Output TaskParameter="JoinResult" ItemName="_JoinedResolvedCompileFileDefinitions" />
    </JoinItems>
  </Target>
  <Target Name="IncludeTransitiveProjectReferences" Condition="'$(DisableTransitiveProjectReferences)' != 'true'" DependsOnTargets="ResolvePackageAssets" />
  <Target Name="ResolveLockFileAnalyzers" DependsOnTargets="ResolvePackageAssets" />
  <Target Name="ResolveLockFileCopyLocalFiles" DependsOnTargets="ResolvePackageAssets;RunProduceContentAssets" />
  <Target Name="EnsureNETCoreAppRuntime" />
  <Target Name="UpdateAspNetToFrameworkReference" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(_TargetFrameworkVersionWithoutV)' &gt;= '3.0'">
    <CheckIfPackageReferenceShouldBeFrameworkReference FrameworkReferenceToUse="Microsoft.AspNetCore.App" FrameworkReferences="@(FrameworkReference)" PackageReferenceToReplace="Microsoft.AspNetCore.All" PackageReferences="@(PackageReference)">
      <Output TaskParameter="ShouldRemovePackageReference" ItemName="_ShouldRemoveAspNetCoreAll" />
    </CheckIfPackageReferenceShouldBeFrameworkReference>
    <NETSdkError Condition="'$(_ShouldRemoveAspNetCoreAll)' == 'true'" ResourceName="AspNetCoreAllNotSupported" />
    <CheckIfPackageReferenceShouldBeFrameworkReference FrameworkReferenceToUse="Microsoft.AspNetCore.App" FrameworkReferences="@(FrameworkReference)" PackageReferenceToReplace="Microsoft.AspNetCore.App" PackageReferences="@(PackageReference)">
      <Output TaskParameter="ShouldRemovePackageReference" ItemName="_ShouldRemoveAspNetCoreApp" />
      <Output TaskParameter="ShouldAddFrameworkReference" ItemName="_ShouldAddAspNetCoreAppFrameworkReference" />
    </CheckIfPackageReferenceShouldBeFrameworkReference>
    <NETSdkWarning Condition="'$(_ShouldRemoveAspNetCoreApp)' == 'true'" ResourceName="AspNetCoreUsesFrameworkReference" />
  </Target>
  <Target Name="ApplyImplicitVersions" Condition="'@(PackageReference)' != ''" DependsOnTargets="UpdateAspNetToFrameworkReference;CheckForImplicitPackageReferenceOverrides">
    <ApplyImplicitVersions TargetLatestRuntimePatch="$(TargetLatestRuntimePatch)" ImplicitPackageReferenceVersions="@(ImplicitPackageReferenceVersion)" TargetFrameworkVersion="$(_TargetFrameworkVersionWithoutV)" PackageReferences="@(PackageReference)">
      <Output TaskParameter="PackageReferencesToUpdate" ItemName="PackageReferenceToUpdate" />
      <Output TaskParameter="SdkBuildWarnings" ItemName="SdkBuildWarning" />
    </ApplyImplicitVersions>
  </Target>
  <Target Name="CheckForImplicitPackageReferenceOverrides">
    <CheckForImplicitPackageReferenceOverrides MoreInformationLink="$(ImplicitPackageReferenceInformationLink)" PackageReferenceItems="@(PackageReference)">
      <Output TaskParameter="ItemsToRemove" ItemName="_PackageReferenceToRemove" />
      <Output TaskParameter="ItemsToAdd" ItemName="_PackageReferenceToAdd" />
    </CheckForImplicitPackageReferenceOverrides>
  </Target>
  <Target Name="CheckForDuplicateItems">
    <CheckForDuplicateItems ContinueOnError="$(ContinueOnError)" DefaultItemsOfThisTypeEnabled="$(EnableDefaultCompileItems)" DefaultItemsEnabled="$(EnableDefaultItems)" Items="@(Compile)" MoreInformationLink="$(DefaultItemsMoreInformationLink)" PropertyNameToDisableDefaultItems="EnableDefaultCompileItems" ItemName="Compile">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedCompileItems" />
    </CheckForDuplicateItems>
    <CheckForDuplicateItems ContinueOnError="$(ContinueOnError)" DefaultItemsOfThisTypeEnabled="$(EnableDefaultEmbeddedResourceItems)" DefaultItemsEnabled="$(EnableDefaultItems)" Items="@(EmbeddedResource)" MoreInformationLink="$(DefaultItemsMoreInformationLink)" PropertyNameToDisableDefaultItems="EnableDefaultEmbeddedResourceItems" ItemName="EmbeddedResource">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedEmbeddedResourceItems" />
    </CheckForDuplicateItems>
    <CheckForDuplicateItems ContinueOnError="$(ContinueOnError)" DefaultItemsOfThisTypeEnabled="$(EnableDefaultContentItems)" DefaultItemsEnabled="$(EnableDefaultItems)" Items="@(Content)" MoreInformationLink="$(DefaultItemsMoreInformationLink)" PropertyNameToDisableDefaultItems="EnableDefaultContentItems" ItemName="Content">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedContentItems" />
    </CheckForDuplicateItems>
  </Target>
  <Target Name="_CheckForTransitiveWindowsDesktopDependencies" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and '$(TargetPlatformIdentifier)' != 'Windows' and '@(TransitiveFrameworkReference)' != ''">
    <NetSdkError Condition="'@(_WindowsDesktopTransitiveFrameworkReference)' != ''" ResourceName="WindowsDesktopTargetPlatformMustBeWindows" />
  </Target>
  <Target Name="WarnForExplicitVersions" Condition="'@(SdkBuildWarning)' != ''" DependsOnTargets="ApplyImplicitVersions">
    <NetSdkWarning FormattedText="%(SdkBuildWarning.Identity)" />
  </Target>
  <Target Name="_CheckForFailedSDKResolution" Condition="'$(SdkResolverHonoredGlobalJson)' == 'false'">
    <NetSdkError ResourceName="GlobalJsonSDKResolutionFailed" FormatArguments="$(SdkResolverGlobalJsonPath)" />
  </Target>
  <Target Name="_WarnWhenUsingNET6AndVSPriorTo17" Condition="$([MSBuild]::VersionLessThan($(VisualStudioVersion), '17.0')) and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '6.0'))">
    <NetSdkWarning ResourceName="Net6NotCompatibleWithDev16" />
  </Target>
  <Target Name="_CheckForInvalidWindowsDesktopTargetingConfiguration" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and ('$(UseWindowsForms)' == 'true' or '$(UseWPF)' == 'true')">
    <NETSdkError Condition="'$(TargetPlatformIdentifier)' != 'Windows'" ResourceName="WindowsDesktopTargetPlatformMustBeWindows" />
  </Target>
  <Target Name="_CheckForUnnecessaryWindowsDesktopSDK" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and '$(_MicrosoftWindowsDesktopSdkImported)' == 'true' and '$(TargetFrameworks)' == ''">
    <NETSdkWarning ResourceName="UnnecessaryWindowsDesktopSDK" />
  </Target>
  <Target Name="AddWindowsSdkKnownFrameworkReferences" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(TargetPlatformIdentifier)' == 'Windows'">
    <CreateWindowsSdkKnownFrameworkReferences WindowsSdkSupportedTargetPlatformVersions="@(WindowsSdkSupportedTargetPlatformVersion)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" UseWindowsSDKPreview="$(UseWindowsSDKPreview)" TargetPlatformVersion="$(TargetPlatformVersion)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(_TargetFrameworkVersionWithoutV)" WindowsSdkPackageVersion="$(WindowsSdkPackageVersion)">
      <Output TaskParameter="KnownFrameworkReferences" ItemName="KnownFrameworkReference" />
    </CreateWindowsSdkKnownFrameworkReferences>
  </Target>
  <Target Name="ProcessFrameworkReferences" Condition="'@(FrameworkReference)' != ''" DependsOnTargets="AddWindowsSdkKnownFrameworkReferences">
    <CheckForDuplicateFrameworkReferences FrameworkReferences="@(FrameworkReference)" MoreInformationLink="https://aka.ms/sdkimplicitrefs">
      <Output TaskParameter="ItemsToRemove" ItemName="_FrameworkReferenceToRemove" />
      <Output TaskParameter="ItemsToAdd" ItemName="_FrameworkReferenceToAdd" />
    </CheckForDuplicateFrameworkReferences>
    <ProcessFrameworkReferences ReadyToRunUseCrossgen2="$(PublishReadyToRunUseCrossgen2)" NETCoreSdkVersion="$(NETCoreSdkVersion)" TargetLatestRuntimePatch="$(TargetLatestRuntimePatch)" NETCoreSdkRuntimeIdentifier="$(NETCoreSdkRuntimeIdentifier)" TargetingPackRoot="$(NetCoreTargetingPackRoot)" EnableRuntimePackDownload="$(EnableRuntimePackDownload)" RuntimeIdentifier="$(RuntimeIdentifier)" EnableTargetingPackDownload="$(EnableTargetingPackDownload)" ReadyToRunEnabled="$(PublishReadyToRun)" SelfContained="$(SelfContained)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" EnableWindowsTargeting="$(EnableWindowsTargeting)" FrameworkReferences="@(FrameworkReference)" DisableTransitiveFrameworkReferenceDownloads="$(DisableTransitiveFrameworkReferenceDownloads)" TargetPlatformVersion="$(TargetPlatformVersion)" NetCoreRoot="$(NetCoreRoot)" TargetLatestRuntimePatchIsDefault="$(_TargetLatestRuntimePatchIsDefault)" RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(_TargetFrameworkVersionWithoutV)" KnownCrossgen2Packs="@(KnownCrossgen2Pack)" KnownRuntimePacks="@(KnownRuntimePack)" RuntimeFrameworkVersion="$(RuntimeFrameworkVersion)" RuntimeIdentifiers="$(RuntimeIdentifiers)" KnownFrameworkReferences="@(KnownFrameworkReference)">
      <Output TaskParameter="PackagesToDownload" ItemName="_PackageToDownload" />
      <Output TaskParameter="RuntimeFrameworks" ItemName="RuntimeFramework" />
      <Output TaskParameter="TargetingPacks" ItemName="TargetingPack" />
      <Output TaskParameter="RuntimePacks" ItemName="RuntimePack" />
      <Output TaskParameter="Crossgen2Packs" ItemName="Crossgen2Pack" />
      <Output TaskParameter="UnavailableRuntimePacks" ItemName="UnavailableRuntimePack" />
    </ProcessFrameworkReferences>
    <ResolveAppHosts DotNetAppHostExecutableNameWithoutExtension="$(_DotNetAppHostExecutableNameWithoutExtension)" DotNetSingleFileHostExecutableNameWithoutExtension="$(_DotNetSingleFileHostExecutableNameWithoutExtension)" TargetingPackRoot="$(NetCoreTargetingPackRoot)" NuGetRestoreSupported="$(_NuGetRestoreSupported)" NetCoreTargetingPackRoot="$(NetCoreTargetingPackRoot)" OtherRuntimeIdentifiers="$(RuntimeIdentifiers)" DotNetIjwHostLibraryNameWithoutExtension="$(_DotNetIjwHostLibraryNameWithoutExtension)" DotNetComHostLibraryNameWithoutExtension="$(_DotNetComHostLibraryNameWithoutExtension)" PackAsToolShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)" KnownAppHostPacks="@(KnownAppHostPack)" RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(_TargetFrameworkVersionWithoutV)" AppHostRuntimeIdentifier="$(AppHostRuntimeIdentifier)" RuntimeFrameworkVersion="$(RuntimeFrameworkVersion)">
      <Output TaskParameter="PackagesToDownload" ItemName="_PackageToDownload" />
      <Output TaskParameter="AppHost" ItemName="AppHostPack" />
      <Output TaskParameter="SingleFileHost" ItemName="SingleFileHostPack" />
      <Output TaskParameter="ComHost" ItemName="ComHostPack" />
      <Output TaskParameter="IjwHost" ItemName="IjwHostPack" />
      <Output TaskParameter="PackAsToolShimAppHostPacks" ItemName="PackAsToolShimAppHostPack" />
    </ResolveAppHosts>
  </Target>
  <Target Name="AddTransitiveFrameworkReferences" Condition="'@(TransitiveFrameworkReference)' != ''" />
  <Target Name="ResolveTargetingPackAssets" Condition="'@(FrameworkReference)' != ''" DependsOnTargets="ResolveFrameworkReferences">
    <ResolveTargetingPackAssets GenerateErrorForMissingTargetingPacks="$(GenerateErrorForMissingTargetingPacks)" NuGetRestoreSupported="$(_NuGetRestoreSupported)" RuntimeFrameworks="@(RuntimeFramework)" NetCoreTargetingPackRoot="$(NetCoreTargetingPackRoot)" FrameworkReferences="@(FrameworkReference)" ResolvedTargetingPacks="@(ResolvedTargetingPack)" DisableTransitiveFrameworkReferenceDownloads="$(DisableTransitiveFrameworkReferenceDownloads)" ProjectLanguage="$(Language)">
      <Output TaskParameter="ReferencesToAdd" ItemName="Reference" />
      <Output TaskParameter="AnalyzersToAdd" ItemName="Analyzer" />
      <Output TaskParameter="PlatformManifests" ItemName="PlatformManifestsFromTargetingPacks" />
      <Output TaskParameter="PackageConflictPreferredPackages" ItemName="PackageConflictPreferredPackages" />
      <Output TaskParameter="PackageConflictOverrides" ItemName="PackageConflictOverrides" />
      <Output TaskParameter="UsedRuntimeFrameworks" ItemName="_UsedRuntimeFramework" />
    </ResolveTargetingPackAssets>
  </Target>
  <Target Name="IncludeTargetingPackReference" Condition="'$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true'">
    <GetReferenceAssemblyPaths RootPath="$(TargetFrameworkRootPath)" TargetFrameworkFallbackSearchPaths="$(TargetFrameworkFallbackSearchPaths)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" SuppressNotFoundError="true" BypassFrameworkInstallChecks="true">
      <Output TaskParameter="FullFrameworkReferenceAssemblyPaths" ItemName="_FullFrameworkReferenceAssemblyPaths" />
    </GetReferenceAssemblyPaths>
  </Target>
  <Target Name="ResolveRuntimePackAssets" Condition="'@(RuntimePack)' != ''" DependsOnTargets="ResolveFrameworkReferences">
    <ResolveRuntimePackAssets UnavailableRuntimePacks="@(UnavailableRuntimePack)" SatelliteResourceLanguages="$(SatelliteResourceLanguages)" FrameworkReferences="@(FrameworkReference)" ResolvedRuntimePacks="@(ResolvedRuntimePack)" DisableTransitiveFrameworkReferenceDownloads="$(DisableTransitiveFrameworkReferenceDownloads)" DesignTimeBuild="$(DesignTimeBuild)">
      <Output TaskParameter="RuntimePackAssets" ItemName="RuntimePackAsset" />
    </ResolveRuntimePackAssets>
  </Target>
  <Target Name="_GetUserSecretsAssemblyAttribute" Condition=" '$(UserSecretsId)' != '' AND '$(GenerateUserSecretsAttribute)' != 'false' AND '$(GeneratedUserSecretsAttributeFile)' == '' " />
  <Target Name="_ComputePackageReferencePublish" />
  <Target Name="_DefaultMicrosoftNETPlatformLibrary" />
  <Target Name="_CheckForBuildWithNoBuild" Condition="'$(NoBuild)' == 'true' and '$(GeneratePackageOnBuild)' != 'true'">
    <NETSdkError ResourceName="NoBuildRequested" />
  </Target>
  <Target Name="GenerateBuildDependencyFile" Condition="'$(GenerateDependencyFile)' == 'true'" DependsOnTargets="_DefaultMicrosoftNETPlatformLibrary;&#xD;&#xA;                            _HandlePackageFileConflicts;&#xD;&#xA;                            _ComputeReferenceAssemblies;&#xD;&#xA;                            _ComputeUserRuntimeAssemblies;&#xD;&#xA;                            ResolveRuntimePackAssets;&#xD;&#xA;                            _ComputePackageReferencePublish" Inputs="$(ProjectAssetsFile);$(ProjectAssetsCacheFile);$(MSBuildAllProjects)" Outputs="$(ProjectDepsFilePath)">
    <GenerateDepsFile CompileReferences="@(ResolvedCompileFileDefinitions)" RuntimeIdentifier="$(RuntimeIdentifier)" RuntimePackAssets="@(RuntimePackAsset)" RuntimeFrameworks="@(RuntimeFramework)" ReferenceDependencyPaths="@(ReferenceDependencyPaths)" IsSelfContained="$(SelfContained)" ProjectPath="$(MSBuildProjectFullPath)" AssemblyName="$(AssemblyName)" TargetFramework="$(TargetFramework)" IncludeMainProject="$(IncludeMainProjectInDepsFile)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" ReferenceAssemblies="@(_ReferenceAssemblies)" CompilerOptions="@(DependencyFileCompilerOptions)" ResolvedNuGetFiles="@(NativeCopyLocalItems);@(ResourceCopyLocalItems);@(RuntimeCopyLocalItems)" ReferenceSatellitePaths="@(ReferenceSatellitePaths)" AssemblyExtension="$(TargetExt)" ResolvedRuntimeTargetsFiles="@(RuntimeTargetsCopyLocalItems)" AssemblyVersion="$(Version)" RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)" IncludeRuntimeFileVersions="$(IncludeFileVersionsInDependencyFile)" AssetsFilePath="$(ProjectAssetsFile)" UserRuntimeAssemblies="@(UserRuntimeAssembly)" AssemblySatelliteAssemblies="@(IntermediateSatelliteAssembliesWithTargetPath)" ReferencePaths="@(ReferencePath)" DepsFilePath="$(ProjectDepsFilePath)" />
  </Target>
  <Target Name="_GenerateRuntimeConfigurationFilesInputCache" DependsOnTargets="_DefaultMicrosoftNETPlatformLibrary">
    <Hash ItemsToHash="@(_GenerateRuntimeConfigurationPropertyInputsCacheToHash)">
      <Output TaskParameter="HashResult" ItemName="_GenerateRuntimeConfigurationPropertyInputsCacheHash" />
    </Hash>
    <WriteLinesToFile File="$(_GenerateRuntimeConfigurationPropertyInputsCache)" WriteOnlyWhenDifferent="True" Lines="$(_GenerateRuntimeConfigurationPropertyInputsCacheHash)" Overwrite="True" />
  </Target>
  <Target Name="GenerateBuildRuntimeConfigurationFiles" Condition=" '$(GenerateRuntimeConfigurationFiles)' == 'true'" DependsOnTargets="_GenerateRuntimeConfigurationFilesInputCache" Inputs="@(GenerateRuntimeConfigurationFilesInputs)" Outputs="$(ProjectRuntimeConfigFilePath);$(ProjectRuntimeConfigDevFilePath)">
    <NETSdkError Condition="'$(RollForward)' != '' and '$(RollForward)' != 'Major' and '$(RollForward)' != 'LatestMajor' and '$(_IsRollForwardSupported)' != 'true'" ResourceName="RollForwardRequiresVersion30" />
    <GenerateRuntimeConfigurationFiles AlwaysIncludeCoreFramework="$(AlwaysIncludeCoreFrameworkInRuntimeConfig)" RuntimeConfigDevPath="$(ProjectRuntimeConfigDevFilePath)" UserRuntimeConfig="$(UserRuntimeConfig)" RuntimeIdentifier="$(RuntimeIdentifier)" RollForward="$(RollForward)" RuntimeFrameworks="@(RuntimeFramework)" RuntimeConfigPath="$(ProjectRuntimeConfigFilePath)" IsSelfContained="$(SelfContained)" AdditionalProbingPaths="@(AdditionalProbingPath)" TargetFramework="$(TargetFramework)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" HostConfigurationOptions="@(RuntimeHostConfigurationOption)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" GenerateRuntimeConfigDevFile="$(GenerateRuntimeConfigDevFile)" WriteIncludedFrameworks="$(_WriteIncludedFrameworks)" AssetsFilePath="$(ProjectAssetsFile)" />
  </Target>
  <Target Name="AddRuntimeConfigFileToBuiltProjectOutputGroupOutput" Condition=" '$(GenerateRuntimeConfigurationFiles)' == 'true'" />
  <Target Name="AddDepsJsonAndRuntimeConfigToCopyItemsForReferencingProjects" Condition="'$(HasRuntimeOutput)' == 'true'" />
  <Target Name="AddDepsJsonAndRuntimeConfigToPublishItemsForReferencingProjects" Condition="'$(HasRuntimeOutput)' == 'true'" DependsOnTargets="_ComputeUseBuildDependencyFile" />
  <Target Name="_SdkBeforeClean" />
  <Target Name="_SdkBeforeRebuild" />
  <Target Name="_CreateAppHost" Condition="'$(ComputeNETCoreBuildOutputFiles)' == 'true' and&#xD;&#xA;                     '$(AppHostSourcePath)' != '' and&#xD;&#xA;                     Exists('@(IntermediateAssembly)') and&#xD;&#xA;                     Exists('$(AppHostSourcePath)')" DependsOnTargets="_ChooseAppHost;CoreCompile" Inputs="@(IntermediateAssembly);$(AppHostSourcePath)" Outputs="$(AppHostIntermediatePath)">
    <CreateAppHost AppBinaryName="$(AssemblyName)$(TargetExt)" AppHostSourcePath="$(AppHostSourcePath)" AppHostDestinationPath="$(AppHostIntermediatePath)" EnableMacOSCodeSign="$(_EnableMacOSCodeSign)" IntermediateAssembly="@(IntermediateAssembly->'%(FullPath)')" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" WindowsGraphicalUserInterface="$(_UseWindowsGraphicalUserInterface)" />
  </Target>
  <Target Name="_ChooseAppHost" Condition="'$(UseAppHost)' == 'true' and '$(_IsExecutable)' == 'true'" DependsOnTargets="_GetAppHostPaths" />
  <Target Name="_GetAppHostPaths" Condition="'$(UseAppHost)' == 'true' and '$(_IsExecutable)' == 'true'" DependsOnTargets="ResolvePackageAssets;ResolveFrameworkReferences">
    <NETSdkError Condition="'@(_NativeRestoredAppHostNETCore-&gt;Count())' &gt; 1" ResourceName="MultipleFilesResolved" FormatArguments="$(_DotNetAppHostExecutableName)" />
  </Target>
  <Target Name="_GenerateClsidMap" Condition="'$(ComputeNETCoreBuildOutputFiles)' == 'true' and&#xD;&#xA;                     '$(EnableComHosting)' == 'true'" DependsOnTargets="CoreCompile" Inputs="@(IntermediateAssembly)" Outputs="@(ClsidMap)">
    <GenerateClsidMap CLsidMapDestinationPath="@(ClsidMap->'%(FullPath)')" IntermediateAssembly="@(IntermediateAssembly->'%(FullPath)')" />
  </Target>
  <Target Name="_CreateComHost" Condition="'$(ComputeNETCoreBuildOutputFiles)' == 'true' and&#xD;&#xA;                     '$(ComHostIntermediatePath)' != '' and&#xD;&#xA;                     Exists('@(IntermediateAssembly)') and&#xD;&#xA;                     Exists('$(ComHostSourcePath)')" DependsOnTargets="_GetComHostPaths;CoreCompile;_GenerateClsidMap;_GenerateRegFreeComManifest" Inputs="@(IntermediateAssembly);$(ComHostSourcePath)" Outputs="$(ComHostIntermediatePath)">
    <CreateComHost ComHostDestinationPath="$(ComHostIntermediatePath)" ClsidMapPath="@(ClsidMap)" TypeLibraries="@(ComHostTypeLibrary)" ComHostSourcePath="$(ComHostSourcePath)" />
  </Target>
  <Target Name="_GenerateRegFreeComManifest" Condition="'$(ComputeNETCoreBuildOutputFiles)' == 'true' and&#xD;&#xA;                     '$(EnableComHosting)' == 'true' and&#xD;&#xA;                     '$(EnableRegFreeCom)' == 'true'" DependsOnTargets="_GenerateClsidMap;_GetComHostPaths" Inputs="@(ClsidMap);@(IntermediateAssembly)" Outputs="@(RegFreeComManifest)">
    <GenerateRegFreeComManifest ClsidMapPath="@(ClsidMap)" TypeLibraries="@(ComHostTypeLibrary)" ComManifestPath="@(RegFreeComManifest)" IntermediateAssembly="@(IntermediateAssembly)" ComHostName="$(ComHostFileName)" />
  </Target>
  <Target Name="_GetComHostPaths" Condition="'$(EnableComHosting)' == 'true' and '$(_IsExecutable)' != 'true'" DependsOnTargets="ResolvePackageAssets;ResolveFrameworkReferences">
    <NETSdkError Condition="'$(ComHostSourcePath)' == '' or !Exists('$(ComHostSourcePath)')" ResourceName="CannotFindComhost" />
  </Target>
  <Target Name="_GetIjwHostPaths" Condition="'$(UseIJWHost)' == 'true'" DependsOnTargets="ResolvePackageAssets;ResolveFrameworkReferences">
    <NETSdkError Condition="'$(IjwHostSourcePath)' == '' or !Exists('$(IjwHostSourcePath)')" ResourceName="CannotFindIjwhost" />
  </Target>
  <Target Name="_ComputeNETCoreBuildOutputFiles" Condition="'$(ComputeNETCoreBuildOutputFiles)' == 'true'" DependsOnTargets="_ChooseAppHost;_GetComHostPaths;_GetIjwHostPaths" />
  <Target Name="_ComputeReferenceAssemblies" DependsOnTargets="ResolveAssemblyReferences" />
  <Target Name="_ComputeUserRuntimeAssemblies" />
  <Target Name="CoreGenerateSatelliteAssemblies" Condition="'@(_SatelliteAssemblyResourceInputs)' != ''  and '$(GenerateSatelliteAssembliesForCore)' == 'true' " DependsOnTargets="ResolveAssemblyReferences;_GetAssemblyInfoFromTemplateFile" Inputs="$(MSBuildAllProjects);@(_SatelliteAssemblyResourceInputs);$(IntermediateOutputPath)$(TargetName)$(TargetExt)" Outputs="$(IntermediateOutputPath)%(Culture)\$(TargetName).resources.dll">
    <MakeDir Directories="@(_SatelliteAssemblyResourceInputs->'$(IntermediateOutputPath)%(Culture)')" />
    <WriteCodeFragment OutputFile="$(_AssemblyInfoFile)" AssemblyAttributes="@(SatelliteAssemblyAttribute)" Language="C#">
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
    <Csc Resources="@(_SatelliteAssemblyResourceInputs)" References="@(ReferencePath)" Deterministic="$(Deterministic)" Sources="$(_AssemblyInfoFile)" UseSharedCompilation="$(UseSharedCompilation)" DelaySign="$(DelaySign)" WarningsAsErrors="$(WarningsAsErrors)" PublicSign="$(PublicSign)" ToolExe="$(CscToolExe)" ToolPath="$(CscToolPath)" KeyFile="$(KeyOriginatorFile)" NoStandardLib="$(NoCompilerStandardLib)" OutputAssembly="$(_OutputAssembly)" WarningLevel="$(WarningLevel)" NoConfig="true" TargetType="Library" WarningsNotAsErrors="$(WarningsNotAsErrors)" NoLogo="$(NoLogo)" Optimize="$(Optimize)" DisabledWarnings="$(DisabledWarnings)" KeyContainer="$(KeyContainerName)">
      <Output TaskParameter="OutputAssembly" ItemName="FileWrites" />
    </Csc>
  </Target>
  <Target Name="_GetAssemblyInfoFromTemplateFile">
    <GetAssemblyAttributes PathToTemplateFile="$(IntermediateOutputPath)$(TargetName)$(TargetExt)">
      <Output TaskParameter="AssemblyAttributes" ItemName="_AssemblyAttributesFromTemplateFile" />
    </GetAssemblyAttributes>
  </Target>
  <Target Name="GetAllRuntimeIdentifiers" Returns="$(RuntimeIdentifiers);$(RuntimeIdentifier)" />
  <Target Name="_BlockWinMDsOnUnsupportedTFMs" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), '5.0'))" DependsOnTargets="ResolveReferences">
    <CheckForUnsupportedWinMDReferences TargetFrameworkMoniker="$(TargetFrameworkMoniker)" ReferencePaths="@(ReferencePath)" />
    <NETSdkError Condition="'$(OutputType)' == 'winmdobj'" ResourceName="WinMDObjNotSupportedOnTargetFramework" FormatArguments="$(TargetFrameworkMoniker)" />
  </Target>
  <Target Name="ValidateExecutableReferences" Condition="'$(ValidateExecutableReferencesMatchSelfContained)' != 'false'">
    <ValidateExecutableReferences IsExecutable="$(_IsExecutable)" SelfContained="$(SelfContained)" ReferencedProjects="@(_MSBuildProjectReferenceExistent)" UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)" />
  </Target>
  <Target Name="ValidateCommandLineProperties">
    <NETSdkWarning Condition="'$(_SelfContainedWasSpecified)' != 'true' and&#xD;&#xA;                   '$(_CommandLineDefinedRuntimeIdentifier)' == 'true' and&#xD;&#xA;                   '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and&#xD;&#xA;                   $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), '6.0'))" ResourceName="SelfContainedOptionShouldBeUsedWithRuntime" />
  </Target>
  <Target Name="_GenerateDesignerDepsFile" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'" Inputs="$(MSBuildAllProjectFiles);$(ProjectAssetsFile)" Outputs="$(_DesignerDepsFilePath)">
    <GenerateDepsFile CompileReferences="@(ResolvedCompileFileDefinitions)" RuntimeFrameworks="@(RuntimeFramework)" IsSelfContained="false" ProjectPath="$(MSBuildProjectFullPath)" AssemblyName="_" TargetFramework="$(TargetFramework)" IncludeMainProject="false" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" ResolvedNuGetFiles="@(NativeCopyLocalItems);@(ResourceCopyLocalItems);@(RuntimeCopyLocalItems)" AssemblyExtension="_" ResolvedRuntimeTargetsFiles="@(RuntimeTargetsCopyLocalItems)" AssemblyVersion="_" RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)" IncludeRuntimeFileVersions="$(IncludeFileVersionsInDependencyFile)" AssetsFilePath="$(ProjectAssetsFile)" DepsFilePath="$(_DesignerDepsFilePath)" />
  </Target>
  <Target Name="_GenerateDesignerRuntimeConfigFile" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'" Inputs="$(MSBuildAllProjectFiles);$(ProjectAssetsFile)" Outputs="$(_DesignerRuntimeConfigFilePath)">
    <GenerateRuntimeConfigurationFiles AlwaysIncludeCoreFramework="$(AlwaysIncludeCoreFrameworkInRuntimeConfig)" UserRuntimeConfig="$(UserRuntimeConfig)" WriteAdditionalProbingPathsToMainConfig="true" RuntimeFrameworks="@(RuntimeFramework)" RuntimeConfigPath="$(_DesignerRuntimeConfigFilePath)" IsSelfContained="false" AdditionalProbingPaths="@(AdditionalProbingPath)" TargetFramework="$(TargetFramework)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" HostConfigurationOptions="@(RuntimeHostConfigurationOption);@(_DesignerHostConfigurationOption)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" AssetsFilePath="$(ProjectAssetsFile)" />
  </Target>
  <Target Name="_GatherDesignerShadowCopyFiles" />
  <Target Name="GenerateAssemblyInfo" Condition="'$(GenerateAssemblyInfo)' == 'true'" DependsOnTargets="PrepareForBuild;CoreGenerateAssemblyInfo" />
  <Target Name="AddSourceRevisionToInformationalVersion" Condition="'$(SourceControlInformationFeatureSupported)' == 'true' and '$(IncludeSourceRevisionInInformationalVersion)' == 'true'" DependsOnTargets="GetAssemblyVersion;InitializeSourceControlInformation" />
  <Target Name="GetAssemblyAttributes" DependsOnTargets="GetAssemblyVersion;AddSourceRevisionToInformationalVersion" />
  <Target Name="CreateGeneratedAssemblyInfoInputsCacheFile" DependsOnTargets="GetAssemblyAttributes">
    <Hash ItemsToHash="@(AssemblyAttribute->'%(Identity)%(_Parameter1)%(_Parameter2)%(_Parameter3)%(_Parameter4)%(_Parameter5)%(_Parameter6)%(_Parameter7)%(_Parameter8)')">
      <Output TaskParameter="HashResult" ItemName="_AssemblyAttributesHash" />
    </Hash>
    <WriteLinesToFile File="$(GeneratedAssemblyInfoInputsCacheFile)" WriteOnlyWhenDifferent="True" Lines="$(_AssemblyAttributesHash)" Overwrite="True" />
  </Target>
  <Target Name="CoreGenerateAssemblyInfo" Condition="'$(Language)'=='VB' or '$(Language)'=='C#'" DependsOnTargets="CreateGeneratedAssemblyInfoInputsCacheFile" Inputs="$(GeneratedAssemblyInfoInputsCacheFile)" Outputs="$(GeneratedAssemblyInfoFile)">
    <WriteCodeFragment OutputFile="$(GeneratedAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttribute)" Language="$(Language)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
  </Target>
  <Target Name="GetAssemblyVersion">
    <GetAssemblyVersion Condition="'$(AssemblyVersion)' == ''" NuGetVersion="$(Version)">
      <Output TaskParameter="AssemblyVersion" ItemName="AssemblyVersion" />
    </GetAssemblyVersion>
  </Target>
  <Target Name="GenerateGlobalUsings" Condition="@(Using-&gt;Count()) != 0">
    <GenerateGlobalUsings Usings="@(Using)">
      <Output TaskParameter="Lines" ItemName="_GlobalUsingLines" />
    </GenerateGlobalUsings>
    <WriteLinesToFile File="$(GeneratedGlobalUsingsFile)" WriteOnlyWhenDifferent="true" Lines="@(_GlobalUsingLines)" Overwrite="true" />
  </Target>
  <Target Name="GenerateSupportedRuntime" Condition="'$(GenerateSupportedRuntime)' != 'false' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(HasRuntimeOutput)' == 'true'" DependsOnTargets="_WriteAppConfigWithSupportedRuntime">
    <SetGeneratedAppConfigMetadata GeneratedAppConfigFile="$(_GenerateSupportedRuntimeIntermediateAppConfig)" TargetName="$(TargetFileName).config" AppConfigFile="@(AppConfigWithTargetPath)">
      <Output TaskParameter="OutputAppConfigFileWithMetadata" ItemName="_GenerateSupportedRuntimeAppConfigWithTargetPath" />
    </SetGeneratedAppConfigMetadata>
  </Target>
  <Target Name="_WriteAppConfigWithSupportedRuntime" DependsOnTargets="PrepareForBuild" Inputs="$(MSBuildAllProjects);@(AppConfigWithTargetPath)" Outputs="$(_GenerateSupportedRuntimeIntermediateAppConfig)">
    <WriteAppConfigWithSupportedRuntime OutputAppConfigFile="$(_GenerateSupportedRuntimeIntermediateAppConfig)" TargetFrameworkProfile="$(TargetFrameworkProfile)" AppConfigFile="@(AppConfigWithTargetPath)" TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)" TargetFrameworkVersion="$(TargetFrameworkVersion)" />
  </Target>
  <Target Name="ComposeStore" DependsOnTargets="PrepareForComposeStore;&#xD;&#xA;                            PrepOptimizer;&#xD;&#xA;                            StoreWorkerMain;&#xD;&#xA;                            _CopyResolvedUnOptimizedFiles;&#xD;&#xA;                            StoreFinalizer;" />
  <Target Name="StoreWorkerMain">
    <MSBuild Properties="ComposeWorkingDir=$(ComposeWorkingDir);&#xD;&#xA;                             PublishDir=$(PublishDir);&#xD;&#xA;                             StoreStagingDir=$(StoreStagingDir);&#xD;&#xA;                             TargetFramework=$(_TFM);&#xD;&#xA;                             JitPath=$(JitPath);&#xD;&#xA;                             Crossgen=$(Crossgen);&#xD;&#xA;                             DisableImplicitFrameworkReferences=true;&#xD;&#xA;                             SkipUnchangedFiles=$(SkipUnchangedFiles);&#xD;&#xA;                             PreserveStoreLayout=$(PreserveStoreLayout);&#xD;&#xA;                             CreateProfilingSymbols=$(CreateProfilingSymbols);&#xD;&#xA;                             StoreSymbolsStagingDir=$(StoreSymbolsStagingDir)" Projects="%(_AllProjects.Identity)" Targets="StoreWorkerMapper" BuildinParallel="$(BuildinParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="AllResolvedPackagesPublished" />
    </MSBuild>
  </Target>
  <Target Name="StoreWorkerMapper" Returns="@(ResolvedPackagesFromMapper)">
    <MSBuild Projects="@(PackageReferencesToStore)" Targets="RestoreForComposeStore" BuildInParallel="$(BuildInParallel)" />
    <MSBuild Properties="SelfContained=false;UseAppHost=false;MSBuildProjectExtensionsPath=$(ComposeWorkingDir)\%(PackageReferencesToStore.PackageName)_$([System.String]::Copy('%(PackageReferencesToStore.PackageVersion)').Replace('*','-'))\;" Projects="@(PackageReferencesToStore)" Targets="StoreResolver" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="ResolvedPackagesFromMapper" />
    </MSBuild>
  </Target>
  <Target Name="StoreResolver" DependsOnTargets="PrepforRestoreForComposeStore;&#xD;&#xA;                            StoreWorkerPerformWork" Returns="@(ResolvedPackagesPublished)" />
  <Target Name="StoreWorkerPerformWork" Condition="Exists($(StoreWorkerWorkingDir))" DependsOnTargets="ComputeAndCopyFilesToStoreDirectory;" />
  <Target Name="StoreFinalizer" DependsOnTargets="StoreWorkerMain;&#xD;&#xA;                            _CopyResolvedOptimizedFiles">
    <RemoveDuplicatePackageReferences InputPackageReferences="@(AllResolvedPackagesPublished)">
      <Output TaskParameter="UniquePackageReferences" ItemName="AllResolvedPackagesPublishedAfterFilter" />
    </RemoveDuplicatePackageReferences>
    <WriteLinesToFile File="$(StoreArtifactXml)" Lines="$(_StoreArtifactContent)" Overwrite="true" />
    <Message Importance="high" Text="Files were composed in $(PublishDir)" />
    <Message Importance="high" Text="The list of packages stored is in $(StoreArtifactXml) " />
    <RemoveDir Condition="'$(PreserveComposeWorkingDir)' != 'true'" Directories="$(ComposeWorkingDir)" />
  </Target>
  <Target Name="_CopyResolvedOptimizedFiles" DependsOnTargets="StoreWorkerMain;">
    <Copy Condition="'@(_OptimizedResolvedFileToPublish)' != ''" SourceFiles="@(_OptimizedResolvedFileToPublish)" SkipUnchangedFiles="$(SkipUnchangedFiles)" DestinationFolder="$(PublishDir)%(_OptimizedResolvedFileToPublish.RecursiveDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Copy Condition="'@(_OptimizedSymbolFileToPublish)' != ''" SourceFiles="@(_OptimizedSymbolFileToPublish)" SkipUnchangedFiles="$(SkipUnchangedFiles)" DestinationFolder="$(ProfilingSymbolsDir)%(_OptimizedSymbolFileToPublish.RecursiveDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="PrepareForComposeStore">
    <NETSdkError Condition="'2.0' &gt; '$(_TargetFrameworkVersionWithoutV)'" ResourceName="UnuspportedFramework" FormatArguments="$(TargetFrameworkMoniker)" />
    <NETSdkError Condition="'$(RuntimeIdentifier)' =='' and '$(_PureManagedAssets)' == ''" ResourceName="RuntimeIdentifierWasNotSpecified" />
    <NETSdkError Condition="'$(_TFM)' ==''" ResourceName="AtLeastOneTargetFrameworkMustBeSpecified" />
    <NETSdkError Condition="Exists($(ComposeWorkingDir))" ResourceName="FolderAlreadyExists" FormatArguments="$(ComposeWorkingDir)" />
    <MakeDir Directories="$(PublishDir)" />
    <MakeDir Directories="$(StoreStagingDir)" />
  </Target>
  <Target Name="PrepforRestoreForComposeStore" DependsOnTargets="_DefaultMicrosoftNETPlatformLibrary" />
  <Target Name="RestoreForComposeStore" Condition="!Exists($(StoreWorkerWorkingDir))" DependsOnTargets="PrepforRestoreForComposeStore;">
    <MakeDir Directories="$(StoreWorkerWorkingDir)" />
    <MSBuild Properties="RestoreGraphProjectInput=$(MSBuildProjectFullPath);&#xD;&#xA;                             RestoreOutputPath=$(BaseIntermediateOutputPath);&#xD;&#xA;                             StorePackageName=$(StorePackageName);&#xD;&#xA;                             StorePackageVersion=$(StorePackageVersion);&#xD;&#xA;                             RuntimeIdentifier=$(RuntimeIdentifier);&#xD;&#xA;                             TargetFramework=$(TargetFramework);" Projects="$(MSBuildProjectFullPath)" Targets="Restore" />
  </Target>
  <Target Name="ComputeAndCopyFilesToStoreDirectory" DependsOnTargets="ComputeFilesToStore;&#xD;&#xA;                            CopyFilesToStoreDirectory" />
  <Target Name="CopyFilesToStoreDirectory" DependsOnTargets="_CopyResolvedUnOptimizedFiles" />
  <Target Name="_CopyResolvedUnOptimizedFiles" DependsOnTargets="_ComputeResolvedFilesToStoreTypes;&#xD;&#xA;                            _RunOptimizer">
    <Copy DestinationFiles="$(PublishDir)%(_UnOptimizedResolvedFileToPublish.DestinationSubPath)" SourceFiles="@(_UnOptimizedResolvedFileToPublish)" SkipUnchangedFiles="$(SkipUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_ComputeResolvedFilesToStoreTypes" DependsOnTargets="_GetResolvedFilesToStore;_SplitResolvedFiles;" />
  <Target Name="_SplitResolvedFiles" Condition="$(SkipOptimization) !='true' " DependsOnTargets="_GetResolvedFilesToStore" />
  <Target Name="_GetResolvedFilesToStore" Condition="$(SkipOptimization) == 'true' " />
  <Target Name="ComputeFilesToStore" DependsOnTargets="_ComputeResolvedCopyLocalPublishAssets;&#xD;&#xA;                            _ComputeCopyToPublishDirectoryItems">
    <FilterResolvedFiles ResolvedFiles="@(_ResolvedCopyLocalPublishAssets)" PackagesToPrune="$(PackagesToPrune)" RuntimeIdentifier="$(RuntimeIdentifier)" IsSelfContained="$(SelfContained)" TargetFramework="$(TargetFramework)" AssetsFilePath="$(ProjectAssetsFile)">
      <Output TaskParameter="AssembliesToPublish" ItemName="ResolvedFileToPublish" />
      <Output TaskParameter="PublishedPackages" ItemName="PackagesThatWereResolved" />
    </FilterResolvedFiles>
  </Target>
  <Target Name="PrepRestoreForStoreProjects" Condition="'$(StorePackageName)' != ''" />
  <Target Name="PrepOptimizer" Condition="$(SkipOptimization) != 'true' " DependsOnTargets="_RestoreCrossgen;">
    <NETSdkError Condition="'@(_CoreclrResolvedPath-&gt;Count())' &gt; 1" ResourceName="MultipleFilesResolved" FormatArguments="coreclr" />
    <NETSdkError Condition="'@(_CoreclrResolvedPath)'== ''" ResourceName="UnableToFindResolvedPath" FormatArguments="coreclr" />
    <NETSdkError Condition="'@(_JitResolvedPath-&gt;Count())' &gt; 1" ResourceName="MultipleFilesResolved" FormatArguments="jit" />
    <NETSdkError Condition="'@(_JitResolvedPath)'== ''" ResourceName="UnableToFindResolvedPath" FormatArguments="jit" />
    <NETSdkError Condition="!Exists($(Crossgen))" ResourceName="UnableToFindResolvedPath" FormatArguments="$(Crossgen)" />
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" SourceFiles="$(Crossgen)" DestinationFolder="$(_NetCoreRefDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_RunOptimizer" Condition="$(SkipOptimization) != 'true' " DependsOnTargets="_InitializeBasicProps;&#xD;&#xA;                            _ComputeResolvedFilesToStoreTypes;&#xD;&#xA;                            _SetupStageForCrossgen">
    <MSBuild Condition="'@(_ManagedResolvedFilesToOptimize)' != ''" Projects="@(AssembliestoCrossgen)" Targets="RunCrossGen" BuildInParallel="$(BuildInParallel)" />
  </Target>
  <Target Name="RunCrossGen" DependsOnTargets="_InitializeBasicProps;">
    <Message Text="CrossgenCommandline: $(CrossgenCommandline)" />
    <Exec Condition="!Exists($([System.IO.Path]::Combine($(PublishDir),$(CrossgenSubOutputPath))))" IgnoreStandardErrorWarningFormat="true" Command="$(CrossgenCommandline)" />
    <Copy Condition="!Exists($([System.IO.Path]::Combine($(PublishDir),$(CrossgenSubOutputPath))))" DestinationFiles="$(PublishDir)\$(CrossgenSubOutputPath)" SourceFiles="$(CrossgenOutputAssembly)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <MakeDir Condition="'$(CreateProfilingSymbols)' == 'true' and Exists($(CrossgenOutputAssembly))" Directories="$(CrossgenProfilingSymbolsOutputDirectory)" />
    <Exec Condition="'$(CreateProfilingSymbols)' == 'true' and Exists($(CrossgenOutputAssembly))" IgnoreStandardErrorWarningFormat="true" Command="$(CrossgenExe) -nologo -readytorun -platform_assemblies_paths $(CrossgenPlatformAssembliesPath) -$(CreateProfilingSymbolsOptionName) $(CrossgenProfilingSymbolsOutputDirectory) $(CrossgenOutputAssembly)" />
    <Copy Condition="'$(CreateProfilingSymbols)' == 'true'" SourceFiles="@(_ProfilingSymbols)" DestinationFolder="$(CrossgenSymbolsStagingDirectory)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_InitializeBasicProps" />
  <Target Name="_GetCrossgenProps" Condition="$(SkipOptimization) != 'true' ">
    <MakeDir Directories="$(_CrossProjFileDir)" />
  </Target>
  <Target Name="_SetupStageForCrossgen" DependsOnTargets="_GetCrossgenProps;">
    <MakeDir Directories="$(_RuntimeOptimizedDir)" />
    <MakeDir Condition="'$(CreateProfilingSymbols)' == 'true'" Directories="$(_RuntimeSymbolsDir)" />
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" SourceFiles="@(_ManagedResolvedFilesToOptimize)" DestinationFolder="$(_RuntimeRefDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_RestoreCrossgen" Condition="$(SkipOptimization) != 'true' " DependsOnTargets="PrepforRestoreForComposeStore;&#xD;&#xA;                           _SetupStageForCrossgen;&#xD;&#xA;                           ProcessFrameworkReferences;&#xD;&#xA;                           ApplyImplicitVersions;&#xD;&#xA;                           _ComputePackageReferencePublish">
    <MSBuild Properties="RuntimeIdentifiers=$(RuntimeIdentifier);&#xD;&#xA;                             RestoreGraphProjectInput=$(MSBuildProjectFullPath);&#xD;&#xA;                             RestoreOutputPath=$(_CrossProjFileDir);&#xD;&#xA;                             StorePackageName=$(MicrosoftNETPlatformLibrary);&#xD;&#xA;                             StorePackageVersion=%(PackageReferenceForCrossGen.Version);" Projects="$(MSBuildProjectFullPath)" Targets="Restore" />
    <ResolveCopyLocalAssets Condition="'$(_TargetFrameworkVersionWithoutV)' &lt; '3.0'" RuntimeIdentifier="$(RuntimeIdentifier)" ExcludedPackageReferences="@(_ExcludeFromPublishPackageReference)" RuntimeFrameworks="@(RuntimeFramework)" IsSelfContained="$(SelfContained)" TargetFramework="$(_TFM)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" PreserveStoreLayout="false" AssetsFilePath="$(_CrossProjAssetsFile)">
      <Output TaskParameter="ResolvedAssets" ItemName="CrossgenResolvedAssembliesToPublish" />
    </ResolveCopyLocalAssets>
    <GetPackageDirectory Condition="'$(_TargetFrameworkVersionWithoutV)' &gt;= '3.0'" Items="@(RuntimePack)" AssetsFileWithAdditionalPackageFolders="$(_CrossProjAssetsFile)">
      <Output TaskParameter="Output" ItemName="_CrossgenRuntimePack" />
    </GetPackageDirectory>
    <ResolveRuntimePackAssets Condition="'$(_TargetFrameworkVersionWithoutV)' &gt;= '3.0'" FrameworkReferences="@(FrameworkReference)" ResolvedRuntimePacks="@(_CrossgenRuntimePack)" DisableTransitiveFrameworkReferenceDownloads="$(DisableTransitiveFrameworkReferenceDownloads)">
      <Output TaskParameter="RuntimePackAssets" ItemName="CrossgenResolvedAssembliesToPublish" />
    </ResolveRuntimePackAssets>
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" SourceFiles="@(CrossgenResolvedAssembliesToPublish)" DestinationFolder="$(_NetCoreRefDir)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="CreateReadyToRunImages" Condition="'$(_TargetFrameworkVersionWithoutV)' &gt;= '3.0' And '$(PublishReadyToRun)' == 'true' And '$(TargetFrameworkIdentifier)' == '.NETCoreApp'" DependsOnTargets="_PrepareForReadyToRunCompilation;&#xD;&#xA;                            _CreateR2RImages;&#xD;&#xA;                            _CreateR2RSymbols">
    <AllowEmptyTelemetry EventData="PublishReadyToRunUseCrossgen2=$(PublishReadyToRunUseCrossgen2);Crossgen2PackVersion=%(ResolvedCrossgen2Pack.NuGetPackageVersion);CompileListCount=@(_ReadyToRunCompileList-&gt;Count());FailedCount=@(_ReadyToRunCompilationFailures-&gt;Count())" EventName="ReadyToRun" />
    <NETSdkError Condition="'@(_ReadyToRunCompilationFailures)' != ''" ResourceName="ReadyToRunCompilationFailed" />
    <NETSdkInformation Condition="'$(_ReadyToRunCompilerHasWarnings)' != ''" ResourceName="ReadyToRunCompilationHasWarnings_Info" />
  </Target>
  <Target Name="_PrepareForReadyToRunCompilation" DependsOnTargets="ResolveReadyToRunCompilers;_ComputeManagedRuntimePackAssemblies;_ComputeAssembliesToPostprocessOnPublish">
    <MakeDir Directories="$(_ReadyToRunOutputPath)" />
    <ResolvePackageFileConflicts Condition="'$(SelfContained)' != 'true'" ReferenceCopyLocalPaths="@(_ReadyToRunImplementationAssemblies)">
      <Output TaskParameter="ReferenceCopyLocalPathsWithoutConflicts" ItemName="_ReadyToRunImplementationAssembliesWithoutConflicts" />
    </ResolvePackageFileConflicts>
    <PrepareForReadyToRunCompilation IncludeSymbolsInSingleFile="$(IncludeSymbolsInSingleFile)" ReadyToRunUseCrossgen2="$(PublishReadyToRunUseCrossgen2)" PublishReadyToRunCompositeExclusions="@(PublishReadyToRunCompositeExclusions)" Assemblies="@(_ReadyToRunImplementationAssemblies)" Crossgen2Composite="$(PublishReadyToRunComposite)" Crossgen2Tool="@(Crossgen2Tool)" ExcludeList="@(PublishReadyToRunExclude)" EmitSymbols="$(PublishReadyToRunEmitSymbols)" MainAssembly="@(IntermediateAssembly)" CrossgenTool="@(CrossgenTool)" OutputPath="$(_ReadyToRunOutputPath)">
      <Output TaskParameter="ReadyToRunCompileList" ItemName="_ReadyToRunCompileList" />
      <Output TaskParameter="ReadyToRunSymbolsCompileList" ItemName="_ReadyToRunSymbolsCompileList" />
      <Output TaskParameter="ReadyToRunFilesToPublish" ItemName="_ReadyToRunFilesToPublish" />
      <Output TaskParameter="ReadyToRunAssembliesToReference" ItemName="_ReadyToRunAssembliesToReference" />
      <Output TaskParameter="ReadyToRunCompositeBuildReferences" ItemName="_ReadyToRunCompositeBuildReferences" />
      <Output TaskParameter="ReadyToRunCompositeBuildInput" ItemName="_ReadyToRunCompositeBuildInput" />
    </PrepareForReadyToRunCompilation>
  </Target>
  <Target Name="ResolveReadyToRunCompilers">
    <ResolveReadyToRunCompilers ReadyToRunUseCrossgen2="$(PublishReadyToRunUseCrossgen2)" NETCoreSdkRuntimeIdentifier="$(NETCoreSdkRuntimeIdentifier)" PerfmapFormatVersion="$(PublishReadyToRunPerfmapFormatVersion)" EmitSymbols="$(PublishReadyToRunEmitSymbols)" RuntimePacks="@(ResolvedRuntimePack)" TargetingPacks="@(ResolvedTargetingPack)" Crossgen2Packs="@(ResolvedCrossgen2Pack)" RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)">
      <Output TaskParameter="CrossgenTool" ItemName="CrossgenTool" />
      <Output TaskParameter="Crossgen2Tool" ItemName="Crossgen2Tool" />
    </ResolveReadyToRunCompilers>
  </Target>
  <Target Name="_CreateR2RImages" Inputs="$(MSBuildAllProjects);@(_ReadyToRunCompileList);@(_ReadyToRunCompositeBuildInput);@(_ReadyToRunPgoFiles)" Outputs="%(_ReadyToRunCompileList.OutputR2RImage);%(_ReadyToRunCompileList.OutputPDBImage)">
    <RunReadyToRunCompiler ContinueOnError="ErrorAndContinue" ShowCompilerWarnings="$(PublishReadyToRunShowWarnings)" CompilationEntry="@(_ReadyToRunCompileList)" Crossgen2Tool="@(Crossgen2Tool)" Crossgen2ExtraCommandLineArgs="$(PublishReadyToRunCrossgen2ExtraArgs)" Crossgen2PgoFiles="@(_ReadyToRunPgoFiles)" CrossgenTool="@(CrossgenTool)" ImplementationAssemblyReferences="@(_ReadyToRunAssembliesToReference)" UseCrossgen2="$(PublishReadyToRunUseCrossgen2)" ReadyToRunCompositeBuildReferences="@(_ReadyToRunCompositeBuildReferences)" ReadyToRunCompositeBuildInput="@(_ReadyToRunCompositeBuildInput)">
      <Output TaskParameter="ExitCode" ItemName="_ReadyToRunCompilerExitCode" />
      <Output TaskParameter="WarningsDetected" ItemName="_ReadyToRunWarningsDetected" />
    </RunReadyToRunCompiler>
  </Target>
  <Target Name="_CreateR2RSymbols" Condition="'$(PublishReadyToRunUseCrossgen2)' != 'true' or '@(Crossgen2Tool -> '%(IsVersion5)')' == 'true'" Inputs="$(MSBuildAllProjects);@(_ReadyToRunSymbolsCompileList)" Outputs="%(_ReadyToRunSymbolsCompileList.OutputPDBImage)">
    <RunReadyToRunCompiler ContinueOnError="ErrorAndContinue" ShowCompilerWarnings="$(PublishReadyToRunShowWarnings)" CompilationEntry="@(_ReadyToRunSymbolsCompileList)" Crossgen2Tool="@(Crossgen2Tool)" Crossgen2ExtraCommandLineArgs="$(PublishReadyToRunCrossgen2ExtraArgs)" CrossgenTool="@(CrossgenTool)" ImplementationAssemblyReferences="@(_ReadyToRunAssembliesToReference)" UseCrossgen2="$(PublishReadyToRunUseCrossgen2)">
      <Output TaskParameter="ExitCode" ItemName="_ReadyToRunCompilerExitCode" />
      <Output TaskParameter="WarningsDetected" ItemName="_ReadyToRunWarningsDetected" />
    </RunReadyToRunCompiler>
  </Target>
  <Target Name="_CheckForObsoleteDotNetCliToolReferences" Condition=" '$(SuppressObsoleteDotNetCliToolWarning)' != 'true' ">
    <NETSdkWarning Condition=" '%(_ReferenceToObsoleteDotNetCliTool.Identity)' != '' " ResourceName="ProjectContainsObsoleteDotNetCliTool" FormatArguments="%(_ReferenceToObsoleteDotNetCliTool.Identity)" />
  </Target>
  <Target Name="_PublishBuildAlternative" Condition="'$(NoBuild)' != 'true'" DependsOnTargets="Build;$(_CorePublishTargets)" />
  <Target Name="_PublishNoBuildAlternative" Condition="'$(NoBuild)' == 'true'" DependsOnTargets="$(_PublishNoBuildAlternativeDependsOn)" />
  <Target Name="_PreventProjectReferencesFromBuilding" />
  <Target Name="PrepareForPublish">
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' And '$(_IsExecutable)' != 'true'" ResourceName="CannotHaveSingleFileWithoutExecutable" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' And '$(_IsExecutable)' == 'true' And '$(TargetFrameworkIdentifier)' != '.NETCoreApp'" ResourceName="CanOnlyHaveSingleFileWithNetCoreApp" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' And&#xD;&#xA;                            '$(IncludeSymbolsInSingleFile)' == 'true' And&#xD;&#xA;                            '$(_TargetFrameworkVersionWithoutV)' &gt;= '5.0' And '$(TargetFrameworkIdentifier)' == '.NETCoreApp'" ResourceName="CannotIncludeSymbolsInSingleFile" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' and '$(RuntimeIdentifier)' == ''" ResourceName="CannotHaveSingleFileWithoutRuntimeIdentifier" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' and '$(UseAppHost)' != 'true'" ResourceName="CannotHaveSingleFileWithoutAppHost" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' And&#xD;&#xA;                            '$(EnableCompressionInSingleFile)' == 'true' And&#xD;&#xA;                            '$(_TargetFrameworkVersionWithoutV)' &lt; '6.0'" ResourceName="CompressionInSingleFileRequires60" />
    <NETSdkError Condition="'$(PublishSingleFile)' == 'true' And&#xD;&#xA;                            '$(EnableCompressionInSingleFile)' == 'true' And&#xD;&#xA;                            '$(SelfContained)' != 'true'" ResourceName="CompressionInSingleFileRequiresSelfContained" />
    <MakeDir Directories="$(PublishDir)" />
  </Target>
  <Target Name="ComputeAndCopyFilesToPublishDirectory" DependsOnTargets="ComputeFilesToPublish;&#xD;&#xA;                            CopyFilesToPublishDirectory" />
  <Target Name="CopyFilesToPublishDirectory" DependsOnTargets="_IncrementalCleanPublishDirectory;&#xD;&#xA;                            _CopyResolvedFilesToPublishPreserveNewest;&#xD;&#xA;                            _CopyResolvedFilesToPublishAlways;&#xD;&#xA;                            _HandleFileConflictsForPublish" />
  <Target Name="_IncrementalCleanPublishDirectory" DependsOnTargets="_GetCurrentAndPriorPublishFileWrites">
    <Delete TreatErrorsAsWarnings="true" Files="@(_OrphanPublishFileWrites)">
      <Output TaskParameter="DeletedFiles" ItemName="_OrphanFilesDeleted" />
    </Delete>
    <WriteLinesToFile File="$(IntermediateOutputPath)$(_PublishCleanFile)" Lines="@(_CurrentPublishFileWrites)" Overwrite="true" />
  </Target>
  <Target Name="_GetCurrentAndPriorPublishFileWrites">
    <Hash ItemstoHash="$(_NormalizedPublishDir)">
      <Output TaskParameter="HashResult" ItemName="_NormalizedPublishDirHash" />
    </Hash>
    <ReadLinesFromFile File="$(IntermediateOutputPath)$(_PublishCleanFile)">
      <Output TaskParameter="Lines" ItemName="_UnfilteredPriorPublishFileWrites" />
    </ReadLinesFromFile>
    <ConvertToAbsolutePath Paths="@(_UnfilteredPriorPublishFileWrites)">
      <Output TaskParameter="AbsolutePaths" ItemName="_UnfilteredAbsolutePriorPublishFileWrites" />
    </ConvertToAbsolutePath>
    <FindUnderPath Files="@(_UnfilteredAbsolutePriorPublishFileWrites)" Path="$(_NormalizedPublishDir)" UpdateToAbsolutePaths="true">
      <Output TaskParameter="InPath" ItemName="_PriorPublishFileWritesInOuput" />
    </FindUnderPath>
    <RemoveDuplicates Inputs="@(_PriorPublishFileWritesInOuput)">
      <Output TaskParameter="Filtered" ItemName="_PriorPublishFileWrites" />
    </RemoveDuplicates>
    <ConvertToAbsolutePath Paths="@(_CurrentPublishFileWritesUnfiltered)">
      <Output TaskParameter="AbsolutePaths" ItemName="_CurrentAbsolutePublishFileWritesUnfiltered" />
    </ConvertToAbsolutePath>
    <RemoveDuplicates Inputs="@(_CurrentAbsolutePublishFileWritesUnfiltered)">
      <Output TaskParameter="Filtered" ItemName="_CurrentPublishFileWrites" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_CopyResolvedFilesToPublishPreserveNewest" DependsOnTargets="_ComputeResolvedFilesToPublishTypes" Inputs="@(_ResolvedFileToPublishPreserveNewest)" Outputs="@(_ResolvedFileToPublishPreserveNewest->'$(PublishDir)%(RelativePath)')">
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" DestinationFiles="@(_ResolvedFileToPublishPreserveNewest->'$(PublishDir)%(RelativePath)')" SourceFiles="@(_ResolvedFileToPublishPreserveNewest)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_CopyResolvedFilesToPublishAlways" DependsOnTargets="_ComputeResolvedFilesToPublishTypes">
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)" DestinationFiles="@(_ResolvedFileToPublishAlways->'$(PublishDir)%(RelativePath)')" SourceFiles="@(_ResolvedFileToPublishAlways)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_ComputeResolvedFilesToPublishTypes" />
  <Target Name="ComputeFilesToPublish" DependsOnTargets="PrepareForPublish;&#xD;&#xA;                            ComputeResolvedFilesToPublishList;&#xD;&#xA;                            ILLink;&#xD;&#xA;                            CreateReadyToRunImages;&#xD;&#xA;                            GeneratePublishDependencyFile;&#xD;&#xA;                            GenerateSingleFileBundle" />
  <Target Name="ComputeResolvedFilesToPublishList" DependsOnTargets="_ComputeResolvedCopyLocalPublishAssets;&#xD;&#xA;                            _ComputeCopyToPublishDirectoryItems;&#xD;&#xA;                            ComputeRefAssembliesToPublish">
    <ResolveOverlappingItemGroupConflicts ItemGroup1="@(_ResolvedCopyLocalPublishAssets-&gt;Distinct())" PreferredPackages="$(PackageConflictPreferredPackages)" ItemGroup2="@(ResolvedFileToPublish-&gt;Distinct())">
      <Output TaskParameter="RemovedItemGroup1" ItemName="_ResolvedCopyLocalPublishAssetsRemoved" />
      <Output TaskParameter="RemovedItemGroup2" ItemName="ResolvedFileToPublishRemoved" />
    </ResolveOverlappingItemGroupConflicts>
  </Target>
  <Target Name="_ResolveCopyLocalAssetsForPublish" DependsOnTargets="ResolveLockFileCopyLocalFiles;&#xD;&#xA;                            _ComputeUseBuildDependencyFile;&#xD;&#xA;                            _DefaultMicrosoftNETPlatformLibrary;&#xD;&#xA;                            ResolveRuntimePackAssets;&#xD;&#xA;                            _ComputePackageReferencePublish">
    <ResolveCopyLocalAssets Condition="'$(PreserveStoreLayout)' == 'true' Or '@(RuntimeStorePackages)' != ''" ResolveRuntimeTargets="$(CopyLocalRuntimeTargetAssets)" RuntimeIdentifier="$(RuntimeIdentifier)" ExcludedPackageReferences="@(_ExcludeFromPublishPackageReference)" RuntimeFrameworks="@(RuntimeFramework)" IsSelfContained="$(SelfContained)" TargetFramework="$(TargetFramework)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" PreserveStoreLayout="$(PreserveStoreLayout)" RuntimeStorePackages="@(RuntimeStorePackages)" AssetsFilePath="$(ProjectAssetsFile)">
      <Output TaskParameter="ResolvedAssets" ItemName="_ResolvedCopyLocalPublishAssets" />
    </ResolveCopyLocalAssets>
  </Target>
  <Target Name="_ParseTargetManifestFiles" Condition="'$(TargetManifestFiles)' != ''" Returns="@(RuntimeStorePackages)">
    <ParseTargetManifests TargetManifestFiles="$(TargetManifestFiles)">
      <Output TaskParameter="RuntimeStorePackages" ItemName="RuntimeStorePackages" />
    </ParseTargetManifests>
  </Target>
  <Target Name="_FilterSatelliteResourcesForPublish" Condition="'$(SatelliteResourceLanguages)' != ''">
    <JoinItems LeftKey="Culture" Left="@(_PublishSatelliteResources)" LeftMetadata="*" ItemSpecToUse="Left" RightKey="" RightMetadata="" Right="$(SatelliteResourceLanguages)">
      <Output TaskParameter="JoinResult" ItemName="_FilteredPublishSatelliteResources" />
    </JoinItems>
  </Target>
  <Target Name="_ComputeResolvedCopyLocalPublishAssets" DependsOnTargets="_ResolveCopyLocalAssetsForPublish;&#xD;&#xA;                            _FilterSatelliteResourcesForPublish" />
  <Target Name="_ComputeCopyToPublishDirectoryItems" DependsOnTargets="GetCopyToPublishDirectoryItems" />
  <Target Name="DefaultCopyToPublishDirectoryMetadata" Condition=" '$(DefaultCopyToPublishDirectoryMetadata)' == 'true' " DependsOnTargets="AssignTargetPaths" />
  <Target Name="_ComputeAssembliesToPostprocessOnPublish" DependsOnTargets="_ComputeUserRuntimeAssemblies;$(_ComputeManagedRuntimePackAssembliesIfSelfContained)">
    <JoinItems Left="@(_ManagedRuntimeAssembly)" RightMetadata="*" Right="@(ResolvedFileToPublish)">
      <Output TaskParameter="JoinResult" ItemName="_AssemblyToPostprocessOnPublish" />
    </JoinItems>
  </Target>
  <Target Name="_ComputeManagedRuntimePackAssemblies" Returns="@(_ManagedRuntimePackAssembly)" />
  <Target Name="_ComputeUseBuildDependencyFile" DependsOnTargets="_ComputePackageReferencePublish;&#xD;&#xA;                            _ParseTargetManifestFiles" />
  <Target Name="_ComputeFilesToBundle" Condition="'$(PublishSingleFile)' == 'true'" DependsOnTargets="_HandleFileConflictsForPublish" />
  <Target Name="PrepareForBundle" Condition="'$(PublishSingleFile)' == 'true'" DependsOnTargets="_ComputeFilesToBundle" />
  <Target Name="GenerateSingleFileBundle" Condition="'$(PublishSingleFile)' == 'true'" DependsOnTargets="_ComputeFilesToBundle;PrepareForBundle" Inputs="@(FilesToBundle)" Outputs="$(PublishedSingleFilePath)">
    <NETSdkError Condition="'$(IncludeAllContentForSelfExtract)' == 'true' And '$(IncludeNativeLibrariesForSelfExtract)' != 'true'" ResourceName="CannotIncludeAllContentButNotNativeLibrariesInSingleFile" />
    <GenerateBundle RuntimeIdentifier="$(RuntimeIdentifier)" FilesToBundle="@(FilesToBundle)" AppHostName="$(PublishedSingleFileName)" EnableCompressionInSingleFile="$(EnableCompressionInSingleFile)" ShowDiagnosticOutput="$(TraceSingleFileBundler)" OutputDir="$(PublishDir)" IncludeNativeLibraries="$(IncludeNativeLibrariesForSelfExtract)" TargetFrameworkVersion="$(_TargetFrameworkVersionWithoutV)" IncludeSymbols="$(IncludeSymbolsInSingleFile)" IncludeAllContent="$(IncludeAllContentForSelfExtract)">
      <Output TaskParameter="ExcludedFiles" ItemName="_FilesExcludedFromBundle" />
    </GenerateBundle>
  </Target>
  <Target Name="GeneratePublishDependencyFile" Condition="'$(GenerateDependencyFile)' == 'true' and '$(_UseBuildDependencyFile)' != 'true'" DependsOnTargets="_ComputeUseBuildDependencyFile;&#xD;&#xA;                            _DefaultMicrosoftNETPlatformLibrary;&#xD;&#xA;                            _HandlePackageFileConflicts;&#xD;&#xA;                            _HandlePackageFileConflictsForPublish;&#xD;&#xA;                            _ComputeReferenceAssemblies;&#xD;&#xA;                            _ComputeUserRuntimeAssemblies;&#xD;&#xA;                            ResolveRuntimePackAssets;&#xD;&#xA;                            _ComputePackageReferencePublish">
    <GenerateDepsFile CompileReferences="@(ResolvedCompileFileDefinitions)" RuntimeIdentifier="$(RuntimeIdentifier)" RuntimePackAssets="@(RuntimePackAsset)" RuntimeFrameworks="@(RuntimeFramework)" ReferenceDependencyPaths="@(ReferenceDependencyPaths)" IsSelfContained="$(SelfContained)" ProjectPath="$(MSBuildProjectFullPath)" AssemblyName="$(AssemblyName)" TargetFramework="$(TargetFramework)" IncludeMainProject="$(IncludeMainProjectInDepsFile)" PlatformLibraryName="$(MicrosoftNETPlatformLibrary)" ReferenceAssemblies="@(_ReferenceAssemblies)" RuntimeStorePackages="@(RuntimeStorePackages)" CompilerOptions="@(DependencyFileCompilerOptions)" ResolvedNuGetFiles="@(_ResolvedNuGetFilesForPublish)" ReferenceSatellitePaths="@(ReferenceSatellitePaths)" AssemblyExtension="$(TargetExt)" ResolvedRuntimeTargetsFiles="@(RuntimeTargetsCopyLocalItems)" AssemblyVersion="$(Version)" RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)" IncludeRuntimeFileVersions="$(IncludeFileVersionsInDependencyFile)" IsSingleFile="$(_IsSingleFilePublish)" AssetsFilePath="$(ProjectAssetsFile)" UserRuntimeAssemblies="@(UserRuntimeAssembly)" AssemblySatelliteAssemblies="@(IntermediateSatelliteAssembliesWithTargetPath)" ReferencePaths="@(ReferencePath)" DepsFilePath="$(IntermediateDepsFilePath)" />
  </Target>
  <Target Name="ComputeEmbeddedApphostPaths">
    <GetEmbeddedApphostPaths ShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)" PackagedShimOutputDirectory="$(PackagedShimOutputRootDirectory)/shims/$(TargetFramework)" ToolCommandName="$(ToolCommandName)">
      <Output TaskParameter="EmbeddedApphostPaths" ItemName="_EmbeddedApphostPaths" />
    </GetEmbeddedApphostPaths>
  </Target>
  <Target Name="ComputeFilesCopiedToPublishDir" DependsOnTargets="ComputeResolvedFilesToPublishList;&#xD;&#xA;                            _ComputeFilesToBundle" />
  <Target Name="PublishItemsOutputGroup" DependsOnTargets="$(PublishItemsOutputGroupDependsOn)" Returns="@(PublishItemsOutputGroupOutputs)">
    <GetPublishItemsOutputGroupOutputs PublishDir="$(PublishDir)" ResolvedFileToPublish="@(ResolvedFileToPublish)">
      <Output TaskParameter="PublishItemsOutputGroupOutputs" ItemName="PublishItemsOutputGroupOutputs" />
    </GetPublishItemsOutputGroupOutputs>
  </Target>
  <Target Name="RunResolvePublishAssemblies" />
  <Target Name="_CheckForLanguageAndPublishFeatureCombinationSupport">
    <NETSdkError Condition="('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and '$(TargetFrameworkIdentifier)' == '.NETCoreApp'" ResourceName="NoSupportCppPublishDotnetCore" />
  </Target>
  <Target Name="PackTool" Condition=" '$(PackAsTool)' == 'true' " DependsOnTargets="GenerateToolsSettingsFileFromBuildProperty;$(_PackToolPublishDependency);_PackToolValidation">
    <ResolveToolPackagePaths TargetPlatformMoniker="$(TargetPlatformMoniker)" AppHostIntermediatePath="$(AppHostIntermediatePath)" PublishDir="$(PublishDir)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" ResolvedFileToPublish="@(ResolvedFileToPublish)">
      <Output TaskParameter="ResolvedFileToPublishWithPackagePath" ItemName="_ResolvedFileToPublishWithPackagePath" />
    </ResolveToolPackagePaths>
  </Target>
  <Target Name="GenerateToolsSettingsFileFromBuildProperty">
    <GenerateToolsSettingsFile ToolsSettingsFilePath="$(_ToolsSettingsFilePath)" CommandName="$(ToolCommandName)" EntryPointRelativePath="$(ToolEntryPoint)" />
  </Target>
  <Target Name="_PackToolValidation" Condition=" '$(PackAsTool)' == 'true' ">
    <GetNuGetShortFolderName TargetPlatformMoniker="$(TargetPlatformMoniker)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)">
      <Output TaskParameter="NuGetShortFolderName" ItemName="_NuGetShortFolderName" />
    </GetNuGetShortFolderName>
    <NETSdkError Condition=" '$(SelfContained)' == 'true' " ResourceName="PackAsToolCannotSupportSelfContained" />
    <NETSdkError Condition=" '$(TargetFrameworkIdentifier)' != '.NETCoreApp' " ResourceName="DotnetToolOnlySupportNetcoreapp" />
    <NETSdkError Condition=" '$(_TargetFrameworkVersionWithoutV)' &lt; '2.1' " ResourceName="DotnetToolDoesNotSupportTFMLowerThanNetcoreapp21" />
    <NETSdkError Condition=" '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0))" ResourceName="PackAsToolCannotSupportTargetPlatformIdentifier" />
  </Target>
  <Target Name="GenerateShimsAssets" Condition="'$(PackAsTool)' == 'true' and $(PackAsToolShimRuntimeIdentifiers) != '' " DependsOnTargets="ResolvePackageAssets;_PackToolValidation;_GenerateShimInputCache;_ComputeExpectedEmbeddedApphostPaths" Inputs="@(_GenerateShimsAssetsInput)" Outputs="$(_ShimCreatedSentinelFile)">
    <GenerateShims ToolEntryPoint="$(ToolEntryPoint)" PackageVersion="$(PackageVersion)" TargetFrameworkMoniker="$(NuGetTargetMoniker)" ShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)" PackagedShimOutputDirectory="$(PackagedShimOutputRootDirectory)/shims/$(_NuGetShortFolderName)" ApphostsForShimRuntimeIdentifiers="@(_ApphostsForShimRuntimeIdentifiers)" IntermediateAssembly="@(IntermediateAssembly->'%(FullPath)')" PackageId="$(PackageId)" ToolCommandName="$(ToolCommandName)" OutputType="$(OutputType)">
      <Output TaskParameter="EmbeddedApphostPaths" ItemName="_EmbeddedApphostPaths" />
    </GenerateShims>
    <WriteLinesToFile File="$(_ShimCreatedSentinelFile)" Lines="This file's LastWriteTime is used in incremental build" Overwrite="True" />
  </Target>
  <Target Name="_ComputeExpectedEmbeddedApphostPaths">
    <GetEmbeddedApphostPaths ShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)" PackagedShimOutputDirectory="$(PackagedShimOutputRootDirectory)/shims/$(_NuGetShortFolderName)" ToolCommandName="$(ToolCommandName)">
      <Output TaskParameter="EmbeddedApphostPaths" ItemName="_EmbeddedApphostPaths" />
    </GetEmbeddedApphostPaths>
  </Target>
  <Target Name="_GenerateShimInputCache" DependsOnTargets="ResolveAssemblyReferences">
    <Hash ItemsToHash="@(_GenerateShimsAssetsInputCacheToHash)">
      <Output TaskParameter="HashResult" ItemName="_GenerateShimsAssetsInputCacheHash" />
    </Hash>
    <WriteLinesToFile File="$(_ShimInputCacheFile)" WriteOnlyWhenDifferent="True" Lines="$(_GenerateShimsAssetsInputCacheHash)" Overwrite="True" />
  </Target>
  <Target Name="_PackProjectToolValidation" Condition=" '$(PackageType)' == 'DotnetCliTool'">
    <NETSdkError Condition=" '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' &gt; '2.2' " ResourceName="ProjectToolOnlySupportTFMLowerThanNetcoreapp22" />
  </Target>
  <Target Name="ComputeDependencyFileCompilerOptions" Condition="'$(PreserveCompilationContext)' == 'true'" />
  <Target Name="ComputeRefAssembliesToPublish" Condition="'$(PreserveCompilationReferences)' == 'true'" DependsOnTargets="ResolvePackageAssets;&#xD;&#xA;                            _ParseTargetManifestFiles">
    <FindItemsFromPackages Items="@(RuntimeCopyLocalItems)" Packages="@(RuntimeStorePackages)">
      <Output TaskParameter="ItemsFromPackages" ItemName="_RuntimeItemsInRuntimeStore" />
    </FindItemsFromPackages>
  </Target>
  <Target Name="_CopyReferenceOnlyAssembliesForBuild" Condition="'$(PreserveCompilationReferences)' == 'true'" DependsOnTargets="_ComputeReferenceAssemblies">
    <Copy UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)" UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)" SourceFiles="@(_ReferenceOnlyAssemblies)" SkipUnchangedFiles="$(SkipCopyUnchangedFiles)" DestinationFolder="$(OutDir)$(RefAssembliesFolderName)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Retries="$(CopyRetryCount)" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  <Target Name="_HandlePackageFileConflicts" DependsOnTargets="GetFrameworkPaths;GetReferenceAssemblyPaths;ResolveTargetingPackAssets">
    <ResolvePackageFileConflicts References="@(Reference)" TargetFrameworkDirectories="$(TargetFrameworkDirectory)" PlatformManifests="@(PackageConflictPlatformManifests)" OtherRuntimeItems="@(_RuntimeAssetsForConflictResolution)" Analyzers="@(Analyzer)" PreferredPackages="$(PackageConflictPreferredPackages)" PackageOverrides="@(PackageConflictOverrides)" ReferenceCopyLocalPaths="@(ReferenceCopyLocalPaths)">
      <Output TaskParameter="ReferencesWithoutConflicts" ItemName="_ReferencesWithoutConflicts" />
      <Output TaskParameter="AnalyzersWithoutConflicts" ItemName="_AnalyzersWithoutConflicts" />
      <Output TaskParameter="ReferenceCopyLocalPathsWithoutConflicts" ItemName="_ReferenceCopyLocalPathsWithoutConflicts" />
      <Output TaskParameter="Conflicts" ItemName="_ConflictPackageFiles" />
    </ResolvePackageFileConflicts>
  </Target>
  <Target Name="_HandlePackageFileConflictsForPublish">
    <ResolvePackageFileConflicts TargetFrameworkDirectories="$(TargetFrameworkDirectory)" PlatformManifests="@(PackageConflictPlatformManifests)" PreferredPackages="$(PackageConflictPreferredPackages)" ReferenceCopyLocalPaths="@(_ResolvedCopyLocalPublishAssets)">
      <Output TaskParameter="ReferenceCopyLocalPathsWithoutConflicts" ItemName="_ResolvedCopyLocalPublishAssetsWithoutConflicts" />
      <Output TaskParameter="Conflicts" ItemName="_PublishConflictPackageFiles" />
    </ResolvePackageFileConflicts>
  </Target>
  <Target Name="_HandleFileConflictsForPublish" Condition="'$(ErrorOnDuplicatePublishOutputFiles)' != 'false'">
    <CheckForDuplicateItemMetadata Items="@(ResolvedFileToPublish-&gt;Distinct())" MetadataName="RelativePath">
      <Output TaskParameter="DuplicatesExist" ItemName="_ResolvedFileToPublishContainsDuplicates" />
      <Output TaskParameter="DuplicateItems" ItemName="_ResolvedFileToPublishDuplicatedItems" />
    </CheckForDuplicateItemMetadata>
    <NETSdkError Condition="'$(_ResolvedFileToPublishContainsDuplicates)' == 'true'" ResourceName="DuplicatePublishOutputFiles" FormatArguments="@(_ResolvedFileToPublishDuplicatedItems, ', ')" />
  </Target>
  <Target Name="ILLink" Condition=" '$(PublishTrimmed)' == 'true' And&#xD;&#xA;                      '$(_TargetFrameworkVersionWithoutV)' &gt;= '3.0' And '$(TargetFrameworkIdentifier)' == '.NETCoreApp' " DependsOnTargets="_RunILLink">
    <NETSdkInformation ResourceName="ILLink_Info" />
    <NETSdkError Condition="'$(_ILLinkExitCode)' != '' And '$(_ILLinkExitCode)' != '0'" ResourceName="ILLinkFailed" />
  </Target>
  <Target Name="_RunILLink" DependsOnTargets="_ComputeManagedAssemblyToLink;PrepareForILLink" Inputs="$(MSBuildAllProjects);@(ManagedAssemblyToLink);@(TrimmerRootDescriptor);@(ReferencePath)" Outputs="$(_LinkSemaphore)">
    <Delete Files="@(_LinkedResolvedFileToPublishCandidate)" />
    <ILLink ContinueOnError="ErrorAndContinue" CustomSteps="@(_TrimmerCustomSteps)" DefaultAction="$(TrimmerDefaultAction)" IPConstProp="$(_TrimmerIPConstProp)" RemoveSymbols="$(TrimmerRemoveSymbols)" RootDescriptorFiles="@(TrimmerRootDescriptor)" OutputDirectory="$(IntermediateLinkDir)" SingleWarn="$(TrimmerSingleWarn)" UnreachableBodies="$(_TrimmerUnreachableBodies)" OverrideRemoval="$(_TrimmerOverrideRemoval)" RootAssemblyNames="@(TrimmerRootAssembly)" TreatWarningsAsErrors="$(ILLinkTreatWarningsAsErrors)" WarningsAsErrors="$(WarningsAsErrors)" CustomData="@(_TrimmerCustomData)" Warn="$(ILLinkWarningLevel)" ToolExe="$(_DotNetHostFileName)" Sealer="$(_TrimmerSealer)" TrimMode="$(TrimMode)" NoWarn="$(NoWarn)" ToolPath="$(_DotNetHostDirectory)" ReferenceAssemblyPaths="@(ReferencePath)" AssemblyPaths="@(ManagedAssemblyToLink)" BeforeFieldInit="$(_TrimmerBeforeFieldInit)" FeatureSettings="@(_TrimmerFeatureSettings)" ExtraArgs="$(_ExtraTrimmerArgs)" WarningsNotAsErrors="$(WarningsNotAsErrors)" UnusedInterfaces="$(_TrimmerUnusedInterfaces)" DumpDependencies="$(_TrimmerDumpDependencies)">
      <Output TaskParameter="ExitCode" ItemName="_ILLinkExitCode" />
    </ILLink>
    <Touch Condition=" '$(_ILLinkExitCode)' == '0' " Files="$(_LinkSemaphore)" AlwaysCreate="true" />
  </Target>
  <Target Name="PrepareForILLink" DependsOnTargets="_ComputeManagedAssemblyToLink">
    <NETSdkError Condition="'$(SelfContained)' != 'true'" ResourceName="ILLinkNotSupportedError" />
    <JoinItems LeftKey="FileName" Left="@(ManagedAssemblyToLink)" LeftMetadata="*" ItemSpecToUse="Left" Right="@(TrimmableAssembly)">
      <Output TaskParameter="JoinResult" ItemName="_TrimmableManagedAssemblyToLink" />
    </JoinItems>
  </Target>
  <Target Name="_ComputeManagedAssemblyToLink" DependsOnTargets="_ComputeAssembliesToPostprocessOnPublish">
    <ComputeManagedAssemblies Assemblies="@(ResolvedFileToPublish-&gt;WithMetadataValue('PostprocessAssembly', 'true'))">
      <Output TaskParameter="ManagedAssemblies" ItemName="ManagedAssemblyToLink" />
    </ComputeManagedAssemblies>
  </Target>
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzers" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true'" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersDesign" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelDesign)' != '' or '$(AnalysisModeDesign)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersDocumentation" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelDocumentation)' != '' or '$(AnalysisModeDocumentation)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersGlobalization" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelGlobalization)' != '' or '$(AnalysisModeGlobalization)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersInteroperability" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelInteroperability)' != '' or '$(AnalysisModeInteroperability)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersMaintainability" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelMaintainability)' != '' or '$(AnalysisModeMaintainability)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersNaming" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelNaming)' != '' or '$(AnalysisModeNaming)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersPerformance" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelPerformance)' != '' or '$(AnalysisModePerformance)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersReliability" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelReliability)' != '' or '$(AnalysisModeReliability)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersSecurity" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelSecurity)' != '' or '$(AnalysisModeSecurity)' != '')" />
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersUsage" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelUsage)' != '' or '$(AnalysisModeUsage)' != '')" />
  <Target Name="_CodeAnalysisTreatWarningsNotAsErrors" Condition="'$(CodeAnalysisTreatWarningsAsErrors)' == 'false' AND ('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true')" />
  <Target Name="_ReportUpgradeNetAnalyzersNuGetWarning" Condition="'$(_SkipUpgradeNetAnalyzersNuGetWarning)' != 'true' ">
    <Warning Condition="'$(_NETAnalyzersNuGetAssemblyVersion)' != '' AND&#xD;&#xA;                         '$(_NETAnalyzersSDKAssemblyVersion)' != '' AND&#xD;&#xA;                          $(_NETAnalyzersNuGetAssemblyVersion) &lt; $(_NETAnalyzersSDKAssemblyVersion)" Text="The .NET SDK has newer analyzers with version '$(_NETAnalyzersSDKAssemblyVersion)' than what version '$(_NETAnalyzersNuGetAssemblyVersion)' of 'Microsoft.CodeAnalysis.NetAnalyzers' package provides. Update or remove this package reference." />
  </Target>
  <Target Name="RunPackageValidation" Condition="'$(IsPackable)' == 'true' and '$(EnablePackageValidation)' == 'true'" DependsOnTargets="$(RunPackageValidationDependsOn)">
    <Microsoft.DotNet.Compatibility.ValidatePackage RunApiCompat="$([MSBuild]::ValueOrDefault('$(RunApiCompat)', 'true'))" CompatibilitySuppressionFilePath="$(CompatibilitySuppressionFilePath)" RoslynAssembliesPath="$(RoslynAssembliesPath)" AssemblyName="$(AssemblyName)" EnableStrictModeForCompatibleFrameworksInPackage="$([MSBuild]::ValueOrDefault('$(EnableStrictModeForCompatibleFrameworksInPackage)', 'false'))" RuntimeGraph="$(RuntimeIdentifierGraphPath)" GenerateCompatibilitySuppressionFile="$(GenerateCompatibilitySuppressionFile)" NoWarn="$(NoWarn)" PackageTargetPath="$([MSBuild]::ValueOrDefault('$(PackageTargetPath)', '$([MSBuild]::NormalizePath('$(PackageOutputPath)', '$(PackageId).$(PackageVersion).nupkg'))'))" BaselinePackageTargetPath="$(PackageValidationBaselinePath)" EnableStrictModeForCompatibleTfms="$([MSBuild]::ValueOrDefault('$(EnableStrictModeForCompatibleTfms)', 'true'))" DisablePackageBaselineValidation="$(DisablePackageBaselineValidation)" ReferencePaths="@(PackageValidationReferencePath)" />
  </Target>
  <Target Name="_GetReferencePathForPackageValidation" DependsOnTargets="ResolveReferences" Returns="@(_ReferencePathWithTargetFramework)" />
  <Target Name="_GetReferencePathFromInnerProjects" Condition="'$(RunPackageValidationWithoutReferences)' != 'true'" DependsOnTargets="$(_GetReferencePathFromInnerProjectsDependsOn)">
    <MSBuild Condition="'$(IsCrossTargetingBuild)' == 'true'" Properties="BuildProjectReferences=false" Projects="@(_InnerBuildProjects)" Targets="_GetReferencePathForPackageValidation">
      <Output TaskParameter="TargetOutputs" ItemName="PackageValidationReferencePath" />
    </MSBuild>
  </Target>
</Project>